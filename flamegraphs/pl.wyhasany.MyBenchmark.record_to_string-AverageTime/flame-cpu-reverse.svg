<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (4,034 samples, 100.00%)</title><rect x="10.0" y="35.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="46.0">all</text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.02%)</title><rect x="10.0" y="51.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="10.0" y="67.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="10.0" y="83.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="10.0" y="99.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="10.0" y="115.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="10.0" y="131.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="10.0" y="147.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="10.0" y="163.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="10.0" y="179.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="195.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.0" y="211.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.02%)</title><rect x="10.0" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="10.0" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="10.0" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="10.0" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="10.0" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="10.0" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="10.0" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="10.0" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="10.0" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="10.0" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="10.0" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="10.0" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="10.0" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="10.0" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="10.0" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="10.0" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="10.0" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="10.0" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="10.0" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="10.0" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="10.0" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="10.0" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="10.0" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="10.0" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>G1Analytics::predict_scan_card_num(unsigned long, bool) const (1 samples, 0.02%)</title><rect x="10.3" y="51.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="62.0"></text>
</g>
<g>
<title>G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="10.3" y="67.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.3" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="10.3" y="83.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="10.3" y="99.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.3" y="110.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="10.3" y="115.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="126.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="10.3" y="131.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.3" y="142.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="10.3" y="147.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="10.3" y="163.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="174.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="10.3" y="179.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.3" y="190.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="10.3" y="195.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.3" y="211.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (1 samples, 0.02%)</title><rect x="10.3" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.02%)</title><rect x="10.3" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.3" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="10.3" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.3" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="10.3" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.3" y="286.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="10.3" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.3" y="302.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="10.3" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.3" y="318.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="10.3" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.3" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="10.3" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.3" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="10.3" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="10.3" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="10.3" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="10.3" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="10.3" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="10.3" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.3" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="10.3" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="10.3" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.3" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="10.3" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.3" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="10.3" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="10.3" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="10.3" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="10.3" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="10.3" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.3" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="10.3" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.3" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="10.3" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="10.3" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="10.3" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="10.3" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="10.3" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="10.3" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="10.3" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.3" y="702.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (16 samples, 0.40%)</title><rect x="10.6" y="51.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.6" y="62.0"></text>
</g>
<g>
<title>[unknown_Java] (14 samples, 0.35%)</title><rect x="10.6" y="67.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.6" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="14.7" y="67.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="14.7" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="14.7" y="99.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="14.7" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="14.7" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="14.7" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="14.7" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="14.7" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.7" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="14.7" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="14.7" y="211.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="14.7" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="14.7" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="14.7" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="14.7" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="14.7" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.7" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="14.7" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.7" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="14.7" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.7" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="14.7" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="14.7" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="14.7" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="14.7" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="14.7" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="14.7" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="14.7" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.7" y="446.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (17 samples, 0.42%)</title><rect x="15.3" y="51.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.3" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (17 samples, 0.42%)</title><rect x="15.3" y="67.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (17 samples, 0.42%)</title><rect x="15.3" y="83.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.3" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (17 samples, 0.42%)</title><rect x="15.3" y="99.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.3" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (17 samples, 0.42%)</title><rect x="15.3" y="115.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (17 samples, 0.42%)</title><rect x="15.3" y="131.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.42%)</title><rect x="15.3" y="147.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (17 samples, 0.42%)</title><rect x="15.3" y="163.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.42%)</title><rect x="15.3" y="179.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (17 samples, 0.42%)</title><rect x="15.3" y="195.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (17 samples, 0.42%)</title><rect x="15.3" y="211.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (17 samples, 0.42%)</title><rect x="15.3" y="227.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.3" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (17 samples, 0.42%)</title><rect x="15.3" y="243.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (17 samples, 0.42%)</title><rect x="15.3" y="259.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (17 samples, 0.42%)</title><rect x="15.3" y="275.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 0.42%)</title><rect x="15.3" y="291.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.3" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 0.42%)</title><rect x="15.3" y="307.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.3" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (17 samples, 0.42%)</title><rect x="15.3" y="323.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.3" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (17 samples, 0.42%)</title><rect x="15.3" y="339.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17 samples, 0.42%)</title><rect x="15.3" y="355.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (17 samples, 0.42%)</title><rect x="15.3" y="371.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17 samples, 0.42%)</title><rect x="15.3" y="387.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 0.42%)</title><rect x="15.3" y="403.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 0.42%)</title><rect x="15.3" y="419.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 0.42%)</title><rect x="15.3" y="435.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.3" y="446.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (1 samples, 0.02%)</title><rect x="20.2" y="51.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.2" y="62.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (1 samples, 0.02%)</title><rect x="20.2" y="67.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.2" y="78.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool) (1 samples, 0.02%)</title><rect x="20.2" y="83.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="23.2" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="20.2" y="99.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.2" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="20.2" y="115.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.2" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="20.2" y="131.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.2" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="20.2" y="147.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.2" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="20.2" y="163.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="23.2" y="174.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="20.2" y="179.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.2" y="190.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (2 samples, 0.05%)</title><rect x="20.5" y="51.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.5" y="62.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (2 samples, 0.05%)</title><rect x="20.5" y="67.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.5" y="78.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (2 samples, 0.05%)</title><rect x="20.5" y="83.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.5" y="94.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (2 samples, 0.05%)</title><rect x="20.5" y="99.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.5" y="110.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (2 samples, 0.05%)</title><rect x="20.5" y="115.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="23.5" y="126.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (2 samples, 0.05%)</title><rect x="20.5" y="131.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="23.5" y="142.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="20.5" y="147.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="23.5" y="158.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="20.5" y="163.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="23.5" y="174.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="20.5" y="179.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.5" y="190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="20.5" y="195.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="23.5" y="206.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="20.5" y="211.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.5" y="222.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*) (3 samples, 0.07%)</title><rect x="21.1" y="51.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.1" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (3 samples, 0.07%)</title><rect x="21.1" y="67.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.1" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (3 samples, 0.07%)</title><rect x="21.1" y="83.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.1" y="94.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="21.1" y="99.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.1" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="21.1" y="115.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.1" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.07%)</title><rect x="21.1" y="131.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="24.1" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="21.1" y="147.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="24.1" y="158.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="21.1" y="163.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="24.1" y="174.0"></text>
</g>
<g>
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, G1RedirtyCardsQueueSet*, unsigned int, unsigned int, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="22.0" y="51.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.0" y="62.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (1 samples, 0.02%)</title><rect x="22.0" y="67.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="25.0" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="22.0" y="83.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="25.0" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="22.0" y="99.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="25.0" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="22.0" y="115.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.0" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="22.0" y="131.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="25.0" y="142.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="22.0" y="147.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="25.0" y="158.0"></text>
</g>
<g>
<title>G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet&lt;OverflowTaskQueue&lt;ScannerTask, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*) (1 samples, 0.02%)</title><rect x="22.3" y="51.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.3" y="62.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="22.3" y="67.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.3" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="22.3" y="83.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.3" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="22.3" y="99.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.3" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="22.3" y="115.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.3" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="22.3" y="131.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.3" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="22.3" y="147.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="25.3" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="22.3" y="163.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="25.3" y="174.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.02%)</title><rect x="22.6" y="51.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.6" y="62.0"></text>
</g>
<g>
<title>G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet&lt;OverflowTaskQueue&lt;ScannerTask, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*) (1 samples, 0.02%)</title><rect x="22.6" y="67.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.6" y="78.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="22.6" y="83.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.6" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="22.6" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.6" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="22.6" y="115.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.6" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="22.6" y="131.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.6" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="22.6" y="147.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.6" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="22.6" y="163.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="25.6" y="174.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="22.6" y="179.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="25.6" y="190.0"></text>
</g>
<g>
<title>G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.07%)</title><rect x="22.9" y="51.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.9" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (3 samples, 0.07%)</title><rect x="22.9" y="67.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.9" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (3 samples, 0.07%)</title><rect x="22.9" y="83.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.9" y="94.0"></text>
</g>
<g>
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (3 samples, 0.07%)</title><rect x="22.9" y="99.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="25.9" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="22.9" y="115.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.9" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="22.9" y="131.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.9" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.07%)</title><rect x="22.9" y="147.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.9" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="22.9" y="163.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="25.9" y="174.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="22.9" y="179.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="25.9" y="190.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="23.7" y="51.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.7" y="62.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="23.7" y="67.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.7" y="78.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="23.7" y="83.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.7" y="94.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="23.7" y="99.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="26.7" y="110.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="23.7" y="115.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="26.7" y="126.0"></text>
</g>
<g>
<title>HeapRegionClaimer::claim_region(unsigned int) (6 samples, 0.15%)</title><rect x="24.0" y="51.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="27.0" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="24.0" y="67.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="27.0" y="78.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="24.0" y="83.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="27.0" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="24.0" y="99.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="27.0" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="24.0" y="115.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="27.0" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="24.0" y="131.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="27.0" y="142.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="24.0" y="147.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="27.0" y="158.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (5 samples, 0.12%)</title><rect x="24.3" y="67.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="27.3" y="78.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (5 samples, 0.12%)</title><rect x="24.3" y="83.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.3" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.12%)</title><rect x="24.3" y="99.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="27.3" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.12%)</title><rect x="24.3" y="115.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.3" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.12%)</title><rect x="24.3" y="131.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="27.3" y="142.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.12%)</title><rect x="24.3" y="147.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.3" y="158.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (7 samples, 0.17%)</title><rect x="25.8" y="51.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="28.8" y="62.0"></text>
</g>
<g>
<title>G1PrepareEvacuationTask::work(unsigned int) (7 samples, 0.17%)</title><rect x="25.8" y="67.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.8" y="78.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.17%)</title><rect x="25.8" y="83.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="28.8" y="94.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.17%)</title><rect x="25.8" y="99.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="28.8" y="110.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.17%)</title><rect x="25.8" y="115.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="28.8" y="126.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.17%)</title><rect x="25.8" y="131.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="28.8" y="142.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.02%)</title><rect x="27.8" y="51.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.8" y="62.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (1 samples, 0.02%)</title><rect x="27.8" y="67.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.8" y="78.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="27.8" y="83.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.8" y="94.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (1 samples, 0.02%)</title><rect x="27.8" y="99.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.8" y="110.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="27.8" y="115.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.8" y="126.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="27.8" y="131.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.8" y="142.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="27.8" y="147.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.8" y="158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="27.8" y="163.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.8" y="174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="27.8" y="179.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="30.8" y="190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="27.8" y="195.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="30.8" y="206.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="28.1" y="51.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="31.1" y="62.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWordImpl**, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="28.1" y="67.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.1" y="78.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="28.1" y="83.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.1" y="94.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="28.1" y="99.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.1" y="110.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="28.1" y="115.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10.opWrapSink (1 samples, 0.02%)</title><rect x="28.1" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="28.1" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="28.1" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="28.1" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="28.1" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.02%)</title><rect x="28.1" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.1" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="28.1" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.1" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="28.1" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.1" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="28.1" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.1" y="270.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="28.1" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.1" y="286.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="28.1" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.1" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="28.1" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.1" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="28.1" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.1" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="28.1" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="28.1" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="28.1" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="28.1" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="28.1" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.1" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="28.1" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.1" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="28.1" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.1" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="28.1" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.1" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="28.1" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="28.1" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="28.1" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="28.1" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="28.1" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="28.1" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.1" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="28.1" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="28.1" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="28.1" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="28.1" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="28.1" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="28.1" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="28.1" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.1" y="670.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*, DerivedPointerIterationMode) (1 samples, 0.02%)</title><rect x="28.4" y="51.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.4" y="62.0"></text>
</g>
<g>
<title>JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0] (1 samples, 0.02%)</title><rect x="28.4" y="67.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.4" y="78.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="28.4" y="83.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.4" y="94.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="28.4" y="99.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="31.4" y="110.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="28.4" y="115.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="31.4" y="126.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="28.4" y="131.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.4" y="142.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="28.4" y="147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="31.4" y="158.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="28.4" y="163.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.4" y="174.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="28.4" y="179.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.4" y="190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="28.4" y="195.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="31.4" y="206.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="28.4" y="211.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="31.4" y="222.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="28.7" y="51.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.7" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.checkGeneral (1 samples, 0.02%)</title><rect x="28.7" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (1 samples, 0.02%)</title><rect x="28.7" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="28.7" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="28.7" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="28.7" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="28.7" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="28.7" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="28.7" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="28.7" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="28.7" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="28.7" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="28.7" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.7" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="28.7" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="28.7" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="28.7" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="28.7" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.7" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="28.7" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.7" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="28.7" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.7" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="28.7" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="28.7" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="28.7" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="28.7" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="28.7" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="28.7" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="28.7" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.7" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.02%)</title><rect x="29.0" y="51.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.0" y="62.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.02%)</title><rect x="29.0" y="67.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.0" y="78.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.02%)</title><rect x="29.0" y="83.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.0" y="94.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, DirectiveSet*) (1 samples, 0.02%)</title><rect x="29.0" y="99.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.0" y="110.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (1 samples, 0.02%)</title><rect x="29.0" y="115.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.0" y="126.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.02%)</title><rect x="29.0" y="131.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.0" y="142.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.02%)</title><rect x="29.0" y="147.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.0" y="158.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.02%)</title><rect x="29.0" y="163.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.0" y="174.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="29.0" y="179.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.0" y="190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="29.0" y="195.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="32.0" y="206.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="29.0" y="211.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.0" y="222.0"></text>
</g>
<g>
<title>RefProcTotalPhaseTimesTracker::RefProcTotalPhaseTimesTracker(ReferenceProcessor::RefProcPhases, ReferenceProcessorPhaseTimes*, ReferenceProcessor*) (1 samples, 0.02%)</title><rect x="29.3" y="51.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.3" y="62.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.02%)</title><rect x="29.3" y="67.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.3" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::process_discovered_references(G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="29.3" y="83.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.3" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="29.3" y="99.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.3" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="29.3" y="115.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.3" y="126.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="29.3" y="131.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.3" y="142.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="29.3" y="147.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.3" y="158.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="29.3" y="163.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.3" y="174.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="29.3" y="179.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.3" y="190.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="29.3" y="195.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.3" y="206.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="29.3" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.3" y="222.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="29.3" y="227.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.3" y="238.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="29.3" y="243.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="32.3" y="254.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="29.3" y="259.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="32.3" y="270.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="29.6" y="51.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="32.6" y="62.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="29.6" y="67.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.6" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="29.6" y="83.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.6" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="29.6" y="99.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.6" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="29.6" y="115.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.6" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="29.6" y="131.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.6" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="29.6" y="147.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="32.6" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="29.6" y="163.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="32.6" y="174.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="29.9" y="51.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.9" y="62.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="29.9" y="67.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.9" y="78.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="29.9" y="83.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.9" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="29.9" y="99.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.9" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="29.9" y="115.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.9" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="29.9" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.9" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="29.9" y="147.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.9" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="29.9" y="163.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="32.9" y="174.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="29.9" y="179.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="32.9" y="190.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="30.2" y="51.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="33.2" y="62.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="30.2" y="67.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="33.2" y="78.0"></text>
</g>
<g>
<title>__clock_gettime_2 (2 samples, 0.05%)</title><rect x="30.2" y="83.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="33.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="30.8" y="51.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.8" y="62.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="30.8" y="67.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="33.8" y="78.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="30.8" y="83.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.8" y="94.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="30.8" y="99.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="33.8" y="110.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="30.8" y="115.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.8" y="126.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="30.8" y="131.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.8" y="142.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="30.8" y="147.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.8" y="158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="30.8" y="163.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="33.8" y="174.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (3 samples, 0.07%)</title><rect x="30.8" y="179.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="33.8" y="190.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="30.8" y="195.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="33.8" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="30.8" y="211.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="33.8" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="30.8" y="227.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="33.8" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="30.8" y="243.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="33.8" y="254.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (2 samples, 0.05%)</title><rect x="31.1" y="195.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.1" y="206.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="31.1" y="211.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.1" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="31.1" y="227.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="34.1" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="31.1" y="243.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="34.1" y="254.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="31.1" y="259.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.1" y="270.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="31.1" y="275.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.1" y="286.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="31.1" y="291.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.1" y="302.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="31.1" y="307.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.1" y="318.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="31.1" y="323.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.1" y="334.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="31.1" y="339.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.1" y="350.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="31.1" y="355.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="34.1" y="366.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="31.1" y="371.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="34.1" y="382.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.02%)</title><rect x="31.4" y="211.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="34.4" y="222.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="31.4" y="227.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="34.4" y="238.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="31.4" y="243.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.4" y="254.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="31.4" y="259.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="34.4" y="270.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="31.4" y="275.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="34.4" y="286.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="31.4" y="291.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="34.4" y="302.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="31.4" y="307.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="34.4" y="318.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.05%)</title><rect x="31.6" y="51.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="34.6" y="62.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="31.6" y="67.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.6" y="78.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="31.6" y="83.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.6" y="94.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="31.6" y="99.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="34.6" y="110.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="31.6" y="115.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="31.6" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="31.6" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.toString (1 samples, 0.02%)</title><rect x="31.6" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="31.6" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="31.6" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="31.6" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="31.6" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="31.6" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="31.6" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="31.6" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="31.6" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="31.6" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="31.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="31.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.6" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="31.6" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.6" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="31.6" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.6" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="31.6" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="31.6" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="31.6" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="31.6" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="31.6" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="31.6" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="31.6" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.filter (1 samples, 0.02%)</title><rect x="31.9" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.9" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="31.9" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.9" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="31.9" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.9" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="31.9" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.9" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="31.9" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.9" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="31.9" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.9" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="31.9" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.9" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="31.9" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.9" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="31.9" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="31.9" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="31.9" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="31.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="31.9" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="31.9" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.9" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="31.9" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.9" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="31.9" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.9" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="31.9" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="31.9" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="31.9" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="31.9" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="31.9" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.9" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="31.9" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.9" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="31.9" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="31.9" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="31.9" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="31.9" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="31.9" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="31.9" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="31.9" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="32.2" y="51.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.2" y="62.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="32.2" y="67.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.2" y="78.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="32.2" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="35.2" y="94.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="32.2" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.2" y="110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="32.2" y="115.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.2" y="126.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="32.2" y="131.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="35.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="32.2" y="147.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="35.2" y="158.0"></text>
</g>
<g>
<title>checkcast_arraycopy (46 samples, 1.14%)</title><rect x="32.5" y="51.0" width="13.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="35.5" y="62.0"></text>
</g>
<g>
<title>[unknown_Java] (15 samples, 0.37%)</title><rect x="32.5" y="67.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="35.5" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (31 samples, 0.77%)</title><rect x="36.9" y="67.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.9" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (31 samples, 0.77%)</title><rect x="36.9" y="83.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.9" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (31 samples, 0.77%)</title><rect x="36.9" y="99.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.9" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (31 samples, 0.77%)</title><rect x="36.9" y="115.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (31 samples, 0.77%)</title><rect x="36.9" y="131.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.77%)</title><rect x="36.9" y="147.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.9" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (31 samples, 0.77%)</title><rect x="36.9" y="163.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.77%)</title><rect x="36.9" y="179.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.9" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (31 samples, 0.77%)</title><rect x="36.9" y="195.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.9" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (31 samples, 0.77%)</title><rect x="36.9" y="211.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.9" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (31 samples, 0.77%)</title><rect x="36.9" y="227.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (31 samples, 0.77%)</title><rect x="36.9" y="243.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (31 samples, 0.77%)</title><rect x="36.9" y="259.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (31 samples, 0.77%)</title><rect x="36.9" y="275.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (31 samples, 0.77%)</title><rect x="36.9" y="291.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.9" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (31 samples, 0.77%)</title><rect x="36.9" y="307.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.9" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (31 samples, 0.77%)</title><rect x="36.9" y="323.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (31 samples, 0.77%)</title><rect x="36.9" y="339.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (31 samples, 0.77%)</title><rect x="36.9" y="355.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (31 samples, 0.77%)</title><rect x="36.9" y="371.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (31 samples, 0.77%)</title><rect x="36.9" y="387.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (31 samples, 0.77%)</title><rect x="36.9" y="403.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (31 samples, 0.77%)</title><rect x="36.9" y="419.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.9" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (31 samples, 0.77%)</title><rect x="36.9" y="435.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.9" y="446.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="46.0" y="51.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="49.0" y="62.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="46.0" y="67.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.0" y="78.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="46.0" y="83.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.0" y="94.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="46.0" y="99.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="49.0" y="110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="46.0" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.0" y="126.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="46.0" y="131.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="49.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.0" y="147.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="49.0" y="158.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="46.3" y="51.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="49.3" y="62.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="46.3" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="49.3" y="78.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="46.3" y="83.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="49.3" y="94.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="46.3" y="99.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="49.3" y="110.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="46.3" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="49.3" y="126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="46.3" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="49.3" y="142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="46.3" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.3" y="158.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="46.3" y="163.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="49.3" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.3" y="179.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="49.3" y="190.0"></text>
</g>
<g>
<title>itable stub (108 samples, 2.68%)</title><rect x="46.6" y="51.0" width="31.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="49.6" y="62.0">it..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (108 samples, 2.68%)</title><rect x="46.6" y="67.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.6" y="78.0">ja..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (108 samples, 2.68%)</title><rect x="46.6" y="83.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.6" y="94.0">ja..</text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (108 samples, 2.68%)</title><rect x="46.6" y="99.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.6" y="110.0">ja..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (108 samples, 2.68%)</title><rect x="46.6" y="115.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.6" y="126.0">ja..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (108 samples, 2.68%)</title><rect x="46.6" y="131.0" width="31.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.6" y="142.0">ja..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (72 samples, 1.78%)</title><rect x="46.6" y="147.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (72 samples, 1.78%)</title><rect x="46.6" y="163.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (72 samples, 1.78%)</title><rect x="46.6" y="179.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (72 samples, 1.78%)</title><rect x="46.6" y="195.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.6" y="206.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (72 samples, 1.78%)</title><rect x="46.6" y="211.0" width="21.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.6" y="222.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (72 samples, 1.78%)</title><rect x="46.6" y="227.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.6" y="238.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (72 samples, 1.78%)</title><rect x="46.6" y="243.0" width="21.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.6" y="254.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (72 samples, 1.78%)</title><rect x="46.6" y="259.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.6" y="270.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (72 samples, 1.78%)</title><rect x="46.6" y="275.0" width="21.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.6" y="286.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.search (72 samples, 1.78%)</title><rect x="46.6" y="291.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.6" y="302.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.find (72 samples, 1.78%)</title><rect x="46.6" y="307.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.6" y="318.0">j..</text>
</g>
<g>
<title>java/util/Formatter.parse (72 samples, 1.78%)</title><rect x="46.6" y="323.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.6" y="334.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (72 samples, 1.78%)</title><rect x="46.6" y="339.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.6" y="350.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (72 samples, 1.78%)</title><rect x="46.6" y="355.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.6" y="366.0">j..</text>
</g>
<g>
<title>java/lang/String.format (72 samples, 1.78%)</title><rect x="46.6" y="371.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.6" y="382.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 1.78%)</title><rect x="46.6" y="387.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.6" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (72 samples, 1.78%)</title><rect x="46.6" y="403.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.6" y="414.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 1.78%)</title><rect x="46.6" y="419.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.6" y="430.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (72 samples, 1.78%)</title><rect x="46.6" y="435.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.6" y="446.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (72 samples, 1.78%)</title><rect x="46.6" y="451.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.6" y="462.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (72 samples, 1.78%)</title><rect x="46.6" y="467.0" width="21.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.6" y="478.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (72 samples, 1.78%)</title><rect x="46.6" y="483.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.6" y="494.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (72 samples, 1.78%)</title><rect x="46.6" y="499.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (72 samples, 1.78%)</title><rect x="46.6" y="515.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.6" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (72 samples, 1.78%)</title><rect x="46.6" y="531.0" width="21.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.6" y="542.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (72 samples, 1.78%)</title><rect x="46.6" y="547.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.6" y="558.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (72 samples, 1.78%)</title><rect x="46.6" y="563.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.6" y="574.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (72 samples, 1.78%)</title><rect x="46.6" y="579.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.6" y="590.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (72 samples, 1.78%)</title><rect x="46.6" y="595.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.6" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (72 samples, 1.78%)</title><rect x="46.6" y="611.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.6" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (72 samples, 1.78%)</title><rect x="46.6" y="627.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.6" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (72 samples, 1.78%)</title><rect x="46.6" y="643.0" width="21.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.6" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (72 samples, 1.78%)</title><rect x="46.6" y="659.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.6" y="670.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (72 samples, 1.78%)</title><rect x="46.6" y="675.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.6" y="686.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (36 samples, 0.89%)</title><rect x="67.6" y="147.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.6" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (36 samples, 0.89%)</title><rect x="67.6" y="163.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.6" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (36 samples, 0.89%)</title><rect x="67.6" y="179.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.6" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (36 samples, 0.89%)</title><rect x="67.6" y="195.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.6" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (36 samples, 0.89%)</title><rect x="67.6" y="211.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (36 samples, 0.89%)</title><rect x="67.6" y="227.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.6" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (36 samples, 0.89%)</title><rect x="67.6" y="243.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.6" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (36 samples, 0.89%)</title><rect x="67.6" y="259.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.6" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (36 samples, 0.89%)</title><rect x="67.6" y="275.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.6" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (36 samples, 0.89%)</title><rect x="67.6" y="291.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.6" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (36 samples, 0.89%)</title><rect x="67.6" y="307.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.6" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (36 samples, 0.89%)</title><rect x="67.6" y="323.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.6" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (36 samples, 0.89%)</title><rect x="67.6" y="339.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (36 samples, 0.89%)</title><rect x="67.6" y="355.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.89%)</title><rect x="67.6" y="371.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (36 samples, 0.89%)</title><rect x="67.6" y="387.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.89%)</title><rect x="67.6" y="403.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (36 samples, 0.89%)</title><rect x="67.6" y="419.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.6" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (36 samples, 0.89%)</title><rect x="67.6" y="435.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.6" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (36 samples, 0.89%)</title><rect x="67.6" y="451.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (36 samples, 0.89%)</title><rect x="67.6" y="467.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (36 samples, 0.89%)</title><rect x="67.6" y="483.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (36 samples, 0.89%)</title><rect x="67.6" y="499.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (36 samples, 0.89%)</title><rect x="67.6" y="515.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.6" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (36 samples, 0.89%)</title><rect x="67.6" y="531.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.6" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (36 samples, 0.89%)</title><rect x="67.6" y="547.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (36 samples, 0.89%)</title><rect x="67.6" y="563.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (36 samples, 0.89%)</title><rect x="67.6" y="579.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (36 samples, 0.89%)</title><rect x="67.6" y="595.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (36 samples, 0.89%)</title><rect x="67.6" y="611.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36 samples, 0.89%)</title><rect x="67.6" y="627.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36 samples, 0.89%)</title><rect x="67.6" y="643.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (36 samples, 0.89%)</title><rect x="67.6" y="659.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (5 samples, 0.12%)</title><rect x="78.2" y="51.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.2" y="62.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (5 samples, 0.12%)</title><rect x="78.2" y="67.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.2" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (5 samples, 0.12%)</title><rect x="78.2" y="83.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.2" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (5 samples, 0.12%)</title><rect x="78.2" y="99.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.2" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="78.2" y="115.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.2" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="78.2" y="131.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="78.2" y="147.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="78.2" y="163.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="78.2" y="179.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="78.2" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="78.2" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.2" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="78.2" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.2" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="78.2" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.2" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="78.2" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.2" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="78.2" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="78.2" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="78.2" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="78.2" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.2" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="78.2" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.2" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="78.2" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.2" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="78.2" y="371.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="78.2" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="78.2" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="78.2" y="419.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="78.2" y="435.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="78.2" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="78.2" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="478.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.07%)</title><rect x="79.6" y="51.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.6" y="62.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isUpperCase (3 samples, 0.07%)</title><rect x="79.6" y="67.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.6" y="78.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (3 samples, 0.07%)</title><rect x="79.6" y="83.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.6" y="94.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (3 samples, 0.07%)</title><rect x="79.6" y="99.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.6" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (3 samples, 0.07%)</title><rect x="79.6" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.6" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (3 samples, 0.07%)</title><rect x="79.6" y="131.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.6" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="79.6" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="79.6" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.6" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="79.6" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="79.6" y="195.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="79.6" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="79.6" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="79.6" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="79.6" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="79.6" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="79.6" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="79.6" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="79.6" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="79.6" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="79.6" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.6" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="79.6" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.6" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="79.6" y="387.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.6" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="79.6" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="79.6" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="79.6" y="435.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="79.6" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="79.6" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="79.6" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="79.6" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.6" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isUpperCase (23 samples, 0.57%)</title><rect x="80.5" y="51.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="62.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (23 samples, 0.57%)</title><rect x="80.5" y="67.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="78.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (23 samples, 0.57%)</title><rect x="80.5" y="83.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.5" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (23 samples, 0.57%)</title><rect x="80.5" y="99.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (23 samples, 0.57%)</title><rect x="80.5" y="115.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.5" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (23 samples, 0.57%)</title><rect x="80.5" y="131.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (23 samples, 0.57%)</title><rect x="80.5" y="147.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (23 samples, 0.57%)</title><rect x="80.5" y="163.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (23 samples, 0.57%)</title><rect x="80.5" y="179.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.57%)</title><rect x="80.5" y="195.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (23 samples, 0.57%)</title><rect x="80.5" y="211.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.57%)</title><rect x="80.5" y="227.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.5" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (23 samples, 0.57%)</title><rect x="80.5" y="243.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (23 samples, 0.57%)</title><rect x="80.5" y="259.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (23 samples, 0.57%)</title><rect x="80.5" y="275.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (23 samples, 0.57%)</title><rect x="80.5" y="291.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (23 samples, 0.57%)</title><rect x="80.5" y="307.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (23 samples, 0.57%)</title><rect x="80.5" y="323.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (23 samples, 0.57%)</title><rect x="80.5" y="339.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.5" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (23 samples, 0.57%)</title><rect x="80.5" y="355.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.5" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (23 samples, 0.57%)</title><rect x="80.5" y="371.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.5" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (23 samples, 0.57%)</title><rect x="80.5" y="387.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (23 samples, 0.57%)</title><rect x="80.5" y="403.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (23 samples, 0.57%)</title><rect x="80.5" y="419.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (23 samples, 0.57%)</title><rect x="80.5" y="435.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (23 samples, 0.57%)</title><rect x="80.5" y="451.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (23 samples, 0.57%)</title><rect x="80.5" y="467.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (23 samples, 0.57%)</title><rect x="80.5" y="483.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (12 samples, 0.30%)</title><rect x="87.2" y="51.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.2" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.accept (12 samples, 0.30%)</title><rect x="87.2" y="67.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10$1.accept (12 samples, 0.30%)</title><rect x="87.2" y="83.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (12 samples, 0.30%)</title><rect x="87.2" y="99.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (12 samples, 0.30%)</title><rect x="87.2" y="115.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (12 samples, 0.30%)</title><rect x="87.2" y="131.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.30%)</title><rect x="87.2" y="147.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.30%)</title><rect x="87.2" y="163.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (12 samples, 0.30%)</title><rect x="87.2" y="179.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.30%)</title><rect x="87.2" y="195.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (12 samples, 0.30%)</title><rect x="87.2" y="211.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.2" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (12 samples, 0.30%)</title><rect x="87.2" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.2" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (12 samples, 0.30%)</title><rect x="87.2" y="243.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (12 samples, 0.30%)</title><rect x="87.2" y="259.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.2" y="270.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (12 samples, 0.30%)</title><rect x="87.2" y="275.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.2" y="286.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (12 samples, 0.30%)</title><rect x="87.2" y="291.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (12 samples, 0.30%)</title><rect x="87.2" y="307.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.2" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (12 samples, 0.30%)</title><rect x="87.2" y="323.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (12 samples, 0.30%)</title><rect x="87.2" y="339.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (12 samples, 0.30%)</title><rect x="87.2" y="355.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.30%)</title><rect x="87.2" y="371.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (12 samples, 0.30%)</title><rect x="87.2" y="387.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.30%)</title><rect x="87.2" y="403.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.2" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (12 samples, 0.30%)</title><rect x="87.2" y="419.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.2" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (12 samples, 0.30%)</title><rect x="87.2" y="435.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (12 samples, 0.30%)</title><rect x="87.2" y="451.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.2" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (12 samples, 0.30%)</title><rect x="87.2" y="467.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (12 samples, 0.30%)</title><rect x="87.2" y="483.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (12 samples, 0.30%)</title><rect x="87.2" y="499.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (12 samples, 0.30%)</title><rect x="87.2" y="515.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.2" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (12 samples, 0.30%)</title><rect x="87.2" y="531.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.2" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (12 samples, 0.30%)</title><rect x="87.2" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (12 samples, 0.30%)</title><rect x="87.2" y="563.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12 samples, 0.30%)</title><rect x="87.2" y="579.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (12 samples, 0.30%)</title><rect x="87.2" y="595.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12 samples, 0.30%)</title><rect x="87.2" y="611.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12 samples, 0.30%)</title><rect x="87.2" y="627.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12 samples, 0.30%)</title><rect x="87.2" y="643.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (12 samples, 0.30%)</title><rect x="87.2" y="659.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (40 samples, 0.99%)</title><rect x="90.7" y="51.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.7" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.7" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.02%)</title><rect x="90.7" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.7" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="90.7" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.7" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="90.7" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.7" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.7" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.7" y="158.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="90.7" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.7" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="90.7" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.7" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="90.7" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.7" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.7" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.7" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.7" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="90.7" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="90.7" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="90.7" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="90.7" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.7" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="90.7" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.7" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="90.7" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.7" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="90.7" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.7" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="90.7" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="90.7" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="90.7" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="90.7" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="90.7" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.7" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="90.7" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.7" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="90.7" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="90.7" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="90.7" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="90.7" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="90.7" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="90.7" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="90.7" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.7" y="558.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (11 samples, 0.27%)</title><rect x="91.0" y="67.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.0" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (11 samples, 0.27%)</title><rect x="91.0" y="83.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.0" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (11 samples, 0.27%)</title><rect x="91.0" y="99.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.0" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (11 samples, 0.27%)</title><rect x="91.0" y="115.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.0" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="91.0" y="131.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.0" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="91.0" y="147.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (11 samples, 0.27%)</title><rect x="91.0" y="163.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.27%)</title><rect x="91.0" y="179.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (11 samples, 0.27%)</title><rect x="91.0" y="195.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.27%)</title><rect x="91.0" y="211.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.0" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (11 samples, 0.27%)</title><rect x="91.0" y="227.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.0" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (11 samples, 0.27%)</title><rect x="91.0" y="243.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (11 samples, 0.27%)</title><rect x="91.0" y="259.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (11 samples, 0.27%)</title><rect x="91.0" y="275.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (11 samples, 0.27%)</title><rect x="91.0" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="91.0" y="307.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="91.0" y="323.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.0" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.27%)</title><rect x="91.0" y="339.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.0" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="91.0" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.0" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="91.0" y="371.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="91.0" y="387.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (11 samples, 0.27%)</title><rect x="91.0" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="91.0" y="419.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.27%)</title><rect x="91.0" y="435.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.27%)</title><rect x="91.0" y="451.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.27%)</title><rect x="91.0" y="467.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.0" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="94.2" y="67.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.2" y="78.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="94.2" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.2" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="94.2" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.2" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="94.2" y="115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.2" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="94.2" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.2" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="94.2" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="94.2" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="94.2" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="94.2" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="94.2" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.2" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="94.2" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.2" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="94.2" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.2" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="94.2" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="94.2" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="94.2" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="94.2" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="94.2" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.2" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="94.2" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.2" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="94.2" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.2" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="94.2" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="94.2" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="94.2" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="94.2" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="94.2" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="94.2" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="94.2" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (23 samples, 0.57%)</title><rect x="94.5" y="67.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.5" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (23 samples, 0.57%)</title><rect x="94.5" y="83.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.5" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (23 samples, 0.57%)</title><rect x="94.5" y="99.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (23 samples, 0.57%)</title><rect x="94.5" y="115.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (23 samples, 0.57%)</title><rect x="94.5" y="131.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.57%)</title><rect x="94.5" y="147.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (23 samples, 0.57%)</title><rect x="94.5" y="163.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.57%)</title><rect x="94.5" y="179.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.5" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (23 samples, 0.57%)</title><rect x="94.5" y="195.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.5" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (23 samples, 0.57%)</title><rect x="94.5" y="211.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.5" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (23 samples, 0.57%)</title><rect x="94.5" y="227.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.5" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (23 samples, 0.57%)</title><rect x="94.5" y="243.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (23 samples, 0.57%)</title><rect x="94.5" y="259.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (23 samples, 0.57%)</title><rect x="94.5" y="275.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (23 samples, 0.57%)</title><rect x="94.5" y="291.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.5" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (23 samples, 0.57%)</title><rect x="94.5" y="307.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.5" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (23 samples, 0.57%)</title><rect x="94.5" y="323.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.5" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (23 samples, 0.57%)</title><rect x="94.5" y="339.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (23 samples, 0.57%)</title><rect x="94.5" y="355.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (23 samples, 0.57%)</title><rect x="94.5" y="371.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (23 samples, 0.57%)</title><rect x="94.5" y="387.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (23 samples, 0.57%)</title><rect x="94.5" y="403.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (23 samples, 0.57%)</title><rect x="94.5" y="419.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (23 samples, 0.57%)</title><rect x="94.5" y="435.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="67.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.3" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="83.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="99.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$Head.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (4 samples, 0.10%)</title><rect x="101.3" y="131.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.chars (4 samples, 0.10%)</title><rect x="101.3" y="147.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.3" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (4 samples, 0.10%)</title><rect x="101.3" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.3" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.10%)</title><rect x="101.3" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.3" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.3" y="206.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.10%)</title><rect x="101.3" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.3" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.10%)</title><rect x="101.3" y="227.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.3" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="101.3" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.3" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.3" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="101.3" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="101.3" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="101.3" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="101.3" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="101.3" y="339.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.3" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="101.3" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.3" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="101.3" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.3" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="101.3" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.3" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="101.3" y="403.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="101.3" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="101.3" y="435.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="101.3" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.3" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="101.3" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.3" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="101.3" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.3" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="101.3" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="101.3" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="101.3" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="101.3" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="101.3" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="101.3" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="101.3" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.equals (4 samples, 0.10%)</title><rect x="102.4" y="51.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.10%)</title><rect x="102.4" y="67.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (4 samples, 0.10%)</title><rect x="102.4" y="83.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.4" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.10%)</title><rect x="102.4" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.4" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="102.4" y="115.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.4" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="102.4" y="131.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.4" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="102.4" y="147.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="102.4" y="163.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="102.4" y="179.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="102.4" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="102.4" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.4" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="102.4" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.4" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="102.4" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="102.4" y="259.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="102.4" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="102.4" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="102.4" y="307.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="102.4" y="323.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.4" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="102.4" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.4" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="102.4" y="355.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.4" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="102.4" y="371.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="102.4" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="102.4" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="102.4" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="102.4" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="102.4" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="102.4" y="467.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.charAt (68 samples, 1.69%)</title><rect x="103.6" y="51.0" width="19.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.6" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (14 samples, 0.35%)</title><rect x="103.6" y="67.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.6" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (14 samples, 0.35%)</title><rect x="103.6" y="83.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.6" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (14 samples, 0.35%)</title><rect x="103.6" y="99.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (14 samples, 0.35%)</title><rect x="103.6" y="115.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.6" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (14 samples, 0.35%)</title><rect x="103.6" y="131.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.6" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (14 samples, 0.35%)</title><rect x="103.6" y="147.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (14 samples, 0.35%)</title><rect x="103.6" y="163.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (14 samples, 0.35%)</title><rect x="103.6" y="179.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.35%)</title><rect x="103.6" y="195.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (14 samples, 0.35%)</title><rect x="103.6" y="211.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.35%)</title><rect x="103.6" y="227.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.6" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (14 samples, 0.35%)</title><rect x="103.6" y="243.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (14 samples, 0.35%)</title><rect x="103.6" y="259.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (14 samples, 0.35%)</title><rect x="103.6" y="275.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (14 samples, 0.35%)</title><rect x="103.6" y="291.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (14 samples, 0.35%)</title><rect x="103.6" y="307.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="103.6" y="323.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="103.6" y="339.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.35%)</title><rect x="103.6" y="355.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="103.6" y="371.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.6" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="103.6" y="387.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="103.6" y="403.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (14 samples, 0.35%)</title><rect x="103.6" y="419.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="103.6" y="435.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.35%)</title><rect x="103.6" y="451.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.35%)</title><rect x="103.6" y="467.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.35%)</title><rect x="103.6" y="483.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.6" y="494.0"></text>
</g>
<g>
<title>java/util/Formatter.checkText (2 samples, 0.05%)</title><rect x="107.7" y="67.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="107.7" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="107.7" y="99.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="107.7" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="107.7" y="131.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="107.7" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="107.7" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="107.7" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.7" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="107.7" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="107.7" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="107.7" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="107.7" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="107.7" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="107.7" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="107.7" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="107.7" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.7" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="107.7" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.7" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="107.7" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="107.7" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="107.7" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="107.7" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="107.7" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="107.7" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="107.7" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.7" y="446.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (26 samples, 0.64%)</title><rect x="108.3" y="67.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.3" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (26 samples, 0.64%)</title><rect x="108.3" y="83.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.3" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (26 samples, 0.64%)</title><rect x="108.3" y="99.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (25 samples, 0.62%)</title><rect x="108.3" y="115.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.3" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (25 samples, 0.62%)</title><rect x="108.3" y="131.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (25 samples, 0.62%)</title><rect x="108.3" y="147.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (25 samples, 0.62%)</title><rect x="108.3" y="163.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (25 samples, 0.62%)</title><rect x="108.3" y="179.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (25 samples, 0.62%)</title><rect x="108.3" y="195.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.3" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (25 samples, 0.62%)</title><rect x="108.3" y="211.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (25 samples, 0.62%)</title><rect x="108.3" y="227.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.62%)</title><rect x="108.3" y="243.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (25 samples, 0.62%)</title><rect x="108.3" y="259.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.62%)</title><rect x="108.3" y="275.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.3" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (25 samples, 0.62%)</title><rect x="108.3" y="291.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.3" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (25 samples, 0.62%)</title><rect x="108.3" y="307.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.3" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (25 samples, 0.62%)</title><rect x="108.3" y="323.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (25 samples, 0.62%)</title><rect x="108.3" y="339.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (25 samples, 0.62%)</title><rect x="108.3" y="355.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (25 samples, 0.62%)</title><rect x="108.3" y="371.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (25 samples, 0.62%)</title><rect x="108.3" y="387.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (25 samples, 0.62%)</title><rect x="108.3" y="403.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (25 samples, 0.62%)</title><rect x="108.3" y="419.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.3" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (25 samples, 0.62%)</title><rect x="108.3" y="435.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (25 samples, 0.62%)</title><rect x="108.3" y="451.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (25 samples, 0.62%)</title><rect x="108.3" y="467.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (25 samples, 0.62%)</title><rect x="108.3" y="483.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (25 samples, 0.62%)</title><rect x="108.3" y="499.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (25 samples, 0.62%)</title><rect x="108.3" y="515.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (25 samples, 0.62%)</title><rect x="108.3" y="531.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="115.6" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="115.6" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.6" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="115.6" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.6" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="115.6" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.6" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="115.6" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.6" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="115.6" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="115.6" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="115.6" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="115.6" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="115.6" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="115.6" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="115.6" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="115.6" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.6" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="115.6" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.6" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="115.6" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.6" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="115.6" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="115.6" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="115.6" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="115.6" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="115.6" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.6" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="115.6" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.6" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="115.6" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="115.6" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="115.6" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="115.6" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="115.6" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="115.6" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="115.6" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.6" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (10 samples, 0.25%)</title><rect x="115.9" y="67.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.9" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (10 samples, 0.25%)</title><rect x="115.9" y="83.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.9" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="115.9" y="99.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.9" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (10 samples, 0.25%)</title><rect x="115.9" y="115.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.9" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (10 samples, 0.25%)</title><rect x="115.9" y="131.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.9" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="115.9" y="147.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.9" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (10 samples, 0.25%)</title><rect x="115.9" y="163.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.9" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (10 samples, 0.25%)</title><rect x="115.9" y="179.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.9" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (10 samples, 0.25%)</title><rect x="115.9" y="195.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.9" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (10 samples, 0.25%)</title><rect x="115.9" y="211.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.9" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (10 samples, 0.25%)</title><rect x="115.9" y="227.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.9" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.format (10 samples, 0.25%)</title><rect x="115.9" y="243.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.9" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (10 samples, 0.25%)</title><rect x="115.9" y="259.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (10 samples, 0.25%)</title><rect x="115.9" y="275.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.25%)</title><rect x="115.9" y="291.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (10 samples, 0.25%)</title><rect x="115.9" y="307.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.25%)</title><rect x="115.9" y="323.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (10 samples, 0.25%)</title><rect x="115.9" y="339.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.9" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (10 samples, 0.25%)</title><rect x="115.9" y="355.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.9" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (10 samples, 0.25%)</title><rect x="115.9" y="371.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.9" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (10 samples, 0.25%)</title><rect x="115.9" y="387.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (10 samples, 0.25%)</title><rect x="115.9" y="403.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="115.9" y="419.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="115.9" y="435.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.25%)</title><rect x="115.9" y="451.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.9" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="115.9" y="467.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.9" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="115.9" y="483.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="115.9" y="499.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (10 samples, 0.25%)</title><rect x="115.9" y="515.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="115.9" y="531.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.25%)</title><rect x="115.9" y="547.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.25%)</title><rect x="115.9" y="563.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.25%)</title><rect x="115.9" y="579.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.9" y="590.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (16 samples, 0.40%)</title><rect x="118.8" y="67.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.8" y="78.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (16 samples, 0.40%)</title><rect x="118.8" y="83.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.8" y="94.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (16 samples, 0.40%)</title><rect x="118.8" y="99.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (16 samples, 0.40%)</title><rect x="118.8" y="115.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.8" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (16 samples, 0.40%)</title><rect x="118.8" y="131.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.8" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (16 samples, 0.40%)</title><rect x="118.8" y="147.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.8" y="158.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (16 samples, 0.40%)</title><rect x="118.8" y="163.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.8" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (16 samples, 0.40%)</title><rect x="118.8" y="179.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.8" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (16 samples, 0.40%)</title><rect x="118.8" y="195.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.8" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (16 samples, 0.40%)</title><rect x="118.8" y="211.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.8" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (16 samples, 0.40%)</title><rect x="118.8" y="227.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (16 samples, 0.40%)</title><rect x="118.8" y="243.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.40%)</title><rect x="118.8" y="259.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (16 samples, 0.40%)</title><rect x="118.8" y="275.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.40%)</title><rect x="118.8" y="291.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (16 samples, 0.40%)</title><rect x="118.8" y="307.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (16 samples, 0.40%)</title><rect x="118.8" y="323.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (16 samples, 0.40%)</title><rect x="118.8" y="339.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (16 samples, 0.40%)</title><rect x="118.8" y="355.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (16 samples, 0.40%)</title><rect x="118.8" y="371.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (16 samples, 0.40%)</title><rect x="118.8" y="387.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 0.40%)</title><rect x="118.8" y="403.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.8" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 0.40%)</title><rect x="118.8" y="419.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.8" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (16 samples, 0.40%)</title><rect x="118.8" y="435.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (16 samples, 0.40%)</title><rect x="118.8" y="451.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (16 samples, 0.40%)</title><rect x="118.8" y="467.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (16 samples, 0.40%)</title><rect x="118.8" y="483.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (16 samples, 0.40%)</title><rect x="118.8" y="499.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 0.40%)</title><rect x="118.8" y="515.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 0.40%)</title><rect x="118.8" y="531.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 0.40%)</title><rect x="118.8" y="547.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.chars (33 samples, 0.82%)</title><rect x="123.5" y="51.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.5" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (33 samples, 0.82%)</title><rect x="123.5" y="67.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.5" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (33 samples, 0.82%)</title><rect x="123.5" y="83.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.5" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (33 samples, 0.82%)</title><rect x="123.5" y="99.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.5" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (33 samples, 0.82%)</title><rect x="123.5" y="115.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.5" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (33 samples, 0.82%)</title><rect x="123.5" y="131.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (33 samples, 0.82%)</title><rect x="123.5" y="147.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (33 samples, 0.82%)</title><rect x="123.5" y="163.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.5" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (33 samples, 0.82%)</title><rect x="123.5" y="179.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (33 samples, 0.82%)</title><rect x="123.5" y="195.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.82%)</title><rect x="123.5" y="211.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (33 samples, 0.82%)</title><rect x="123.5" y="227.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.82%)</title><rect x="123.5" y="243.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (33 samples, 0.82%)</title><rect x="123.5" y="259.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (33 samples, 0.82%)</title><rect x="123.5" y="275.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (33 samples, 0.82%)</title><rect x="123.5" y="291.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.5" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (33 samples, 0.82%)</title><rect x="123.5" y="307.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (33 samples, 0.82%)</title><rect x="123.5" y="323.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (33 samples, 0.82%)</title><rect x="123.5" y="339.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (33 samples, 0.82%)</title><rect x="123.5" y="355.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.5" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (33 samples, 0.82%)</title><rect x="123.5" y="371.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.5" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (33 samples, 0.82%)</title><rect x="123.5" y="387.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.5" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (33 samples, 0.82%)</title><rect x="123.5" y="403.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (33 samples, 0.82%)</title><rect x="123.5" y="419.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (33 samples, 0.82%)</title><rect x="123.5" y="435.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (33 samples, 0.82%)</title><rect x="123.5" y="451.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (33 samples, 0.82%)</title><rect x="123.5" y="467.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (33 samples, 0.82%)</title><rect x="123.5" y="483.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (33 samples, 0.82%)</title><rect x="123.5" y="499.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.coder (16 samples, 0.40%)</title><rect x="133.1" y="51.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.1" y="62.0"></text>
</g>
<g>
<title>java/lang/String.length (16 samples, 0.40%)</title><rect x="133.1" y="67.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.1" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.getTextLength (3 samples, 0.07%)</title><rect x="133.1" y="83.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.1" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="133.1" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.1" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="133.1" y="115.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.1" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="133.1" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.1" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="133.1" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="133.1" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="133.1" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="133.1" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="133.1" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="133.1" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="133.1" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.1" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="133.1" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.1" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="133.1" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="133.1" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="133.1" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="133.1" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="133.1" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.1" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="133.1" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.1" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="133.1" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="133.1" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="133.1" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="133.1" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="133.1" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="133.1" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="133.1" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.1" y="478.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (2 samples, 0.05%)</title><rect x="133.4" y="99.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.4" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="133.4" y="115.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="133.4" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.4" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="133.4" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="133.4" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="133.4" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="133.4" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="133.4" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="133.4" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="133.4" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.4" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="133.4" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="133.4" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="133.4" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="133.4" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="133.4" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="133.4" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.4" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="133.4" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.4" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="133.4" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.4" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="133.4" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="133.4" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="133.4" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="133.4" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="133.4" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="133.4" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="133.4" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="494.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (13 samples, 0.32%)</title><rect x="134.0" y="83.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.0" y="94.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (13 samples, 0.32%)</title><rect x="134.0" y="99.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.0" y="110.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (13 samples, 0.32%)</title><rect x="134.0" y="115.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.0" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (13 samples, 0.32%)</title><rect x="134.0" y="131.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.0" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (13 samples, 0.32%)</title><rect x="134.0" y="147.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.0" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (13 samples, 0.32%)</title><rect x="134.0" y="163.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.0" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (13 samples, 0.32%)</title><rect x="134.0" y="179.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.0" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (13 samples, 0.32%)</title><rect x="134.0" y="195.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.0" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (13 samples, 0.32%)</title><rect x="134.0" y="211.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.0" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (13 samples, 0.32%)</title><rect x="134.0" y="227.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.0" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (13 samples, 0.32%)</title><rect x="134.0" y="243.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (13 samples, 0.32%)</title><rect x="134.0" y="259.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.32%)</title><rect x="134.0" y="275.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (13 samples, 0.32%)</title><rect x="134.0" y="291.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.32%)</title><rect x="134.0" y="307.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (13 samples, 0.32%)</title><rect x="134.0" y="323.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.0" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (13 samples, 0.32%)</title><rect x="134.0" y="339.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.0" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (13 samples, 0.32%)</title><rect x="134.0" y="355.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.0" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (13 samples, 0.32%)</title><rect x="134.0" y="371.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (13 samples, 0.32%)</title><rect x="134.0" y="387.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="134.0" y="403.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="134.0" y="419.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.32%)</title><rect x="134.0" y="435.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.0" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="134.0" y="451.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.0" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="134.0" y="467.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="134.0" y="483.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (13 samples, 0.32%)</title><rect x="134.0" y="499.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="134.0" y="515.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13 samples, 0.32%)</title><rect x="134.0" y="531.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13 samples, 0.32%)</title><rect x="134.0" y="547.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13 samples, 0.32%)</title><rect x="134.0" y="563.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equals (6 samples, 0.15%)</title><rect x="137.8" y="51.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.15%)</title><rect x="137.8" y="67.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.8" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (6 samples, 0.15%)</title><rect x="137.8" y="83.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.8" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (6 samples, 0.15%)</title><rect x="137.8" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.8" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (6 samples, 0.15%)</title><rect x="137.8" y="115.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (6 samples, 0.15%)</title><rect x="137.8" y="131.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.8" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (6 samples, 0.15%)</title><rect x="137.8" y="147.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.8" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (6 samples, 0.15%)</title><rect x="137.8" y="163.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.8" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="137.8" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.8" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="137.8" y="195.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="137.8" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="137.8" y="227.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="137.8" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="137.8" y="259.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="137.8" y="275.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="137.8" y="291.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="137.8" y="307.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="137.8" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="137.8" y="339.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="137.8" y="355.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="137.8" y="371.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.8" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="137.8" y="387.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="137.8" y="403.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.8" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="137.8" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="137.8" y="435.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="137.8" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="137.8" y="467.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="137.8" y="483.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="137.8" y="499.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="137.8" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.15%)</title><rect x="139.6" y="51.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.15%)</title><rect x="139.6" y="67.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.6" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (6 samples, 0.15%)</title><rect x="139.6" y="83.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.6" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (6 samples, 0.15%)</title><rect x="139.6" y="99.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (6 samples, 0.15%)</title><rect x="139.6" y="115.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.6" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (6 samples, 0.15%)</title><rect x="139.6" y="131.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (6 samples, 0.15%)</title><rect x="139.6" y="147.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (6 samples, 0.15%)</title><rect x="139.6" y="163.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.6" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="139.6" y="179.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.6" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="139.6" y="195.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="139.6" y="211.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="139.6" y="227.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="139.6" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="139.6" y="259.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="139.6" y="275.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="139.6" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="139.6" y="307.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.6" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="139.6" y="323.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="139.6" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="139.6" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="139.6" y="371.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="139.6" y="387.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.6" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="139.6" y="403.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.6" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="139.6" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="139.6" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="139.6" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="139.6" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="139.6" y="483.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="139.6" y="499.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="139.6" y="515.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (18 samples, 0.45%)</title><rect x="141.3" y="51.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.3" y="62.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.42%)</title><rect x="141.3" y="67.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.3" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="141.3" y="83.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.3" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="141.3" y="99.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.3" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="141.3" y="115.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.3" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="141.3" y="131.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (5 samples, 0.12%)</title><rect x="141.3" y="147.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.12%)</title><rect x="141.3" y="163.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (5 samples, 0.12%)</title><rect x="141.3" y="179.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.3" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="141.3" y="195.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.3" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="141.3" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.3" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="141.3" y="227.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="141.3" y="243.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="141.3" y="259.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="141.3" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="141.3" y="291.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.3" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="141.3" y="307.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.3" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="141.3" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="141.3" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="141.3" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="141.3" y="371.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="141.3" y="387.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="141.3" y="403.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.3" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="141.3" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.3" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="141.3" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.3" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="141.3" y="451.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="141.3" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="141.3" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="141.3" y="499.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="141.3" y="515.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="141.3" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="141.3" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.3" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="142.8" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.8" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="142.8" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.8" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="142.8" y="115.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.8" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="142.8" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.8" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="142.8" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="142.8" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="142.8" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.8" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="142.8" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="142.8" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.8" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="142.8" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.8" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="142.8" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.8" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="142.8" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.8" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="142.8" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="142.8" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="142.8" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="142.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="142.8" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.8" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="142.8" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.8" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="142.8" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.8" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="142.8" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.8" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="142.8" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="142.8" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="142.8" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="142.8" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.8" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="142.8" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.8" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="142.8" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.8" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="142.8" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="142.8" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="142.8" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="142.8" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="142.8" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="142.8" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="142.8" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.8" y="606.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (11 samples, 0.27%)</title><rect x="143.1" y="83.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="94.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (11 samples, 0.27%)</title><rect x="143.1" y="99.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="110.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (11 samples, 0.27%)</title><rect x="143.1" y="115.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.1" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (11 samples, 0.27%)</title><rect x="143.1" y="131.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.1" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (11 samples, 0.27%)</title><rect x="143.1" y="147.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (11 samples, 0.27%)</title><rect x="143.1" y="163.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.1" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (11 samples, 0.27%)</title><rect x="143.1" y="179.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.1" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (11 samples, 0.27%)</title><rect x="143.1" y="195.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (11 samples, 0.27%)</title><rect x="143.1" y="211.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.1" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="143.1" y="227.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.1" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="143.1" y="243.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (11 samples, 0.27%)</title><rect x="143.1" y="259.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.27%)</title><rect x="143.1" y="275.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (11 samples, 0.27%)</title><rect x="143.1" y="291.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.27%)</title><rect x="143.1" y="307.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.1" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (11 samples, 0.27%)</title><rect x="143.1" y="323.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.1" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (11 samples, 0.27%)</title><rect x="143.1" y="339.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (11 samples, 0.27%)</title><rect x="143.1" y="355.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.1" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (11 samples, 0.27%)</title><rect x="143.1" y="371.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (11 samples, 0.27%)</title><rect x="143.1" y="387.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="143.1" y="403.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="143.1" y="419.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.1" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.27%)</title><rect x="143.1" y="435.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="143.1" y="451.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="143.1" y="467.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="143.1" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (11 samples, 0.27%)</title><rect x="143.1" y="499.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="143.1" y="515.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.27%)</title><rect x="143.1" y="531.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.27%)</title><rect x="143.1" y="547.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.27%)</title><rect x="143.1" y="563.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="146.3" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="146.3" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.3" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (1 samples, 0.02%)</title><rect x="146.3" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.3" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="146.3" y="115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.3" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="146.3" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.3" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="146.3" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.3" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="146.3" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.3" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="146.3" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.3" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="146.3" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.3" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="146.3" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="146.3" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="146.3" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="146.3" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="146.3" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.3" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="146.3" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.3" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="146.3" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.3" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="146.3" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.3" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="146.3" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="146.3" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="146.3" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="146.3" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="146.3" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.3" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="146.3" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.3" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="146.3" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="146.3" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="146.3" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="146.3" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="146.3" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="146.3" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="146.3" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (38 samples, 0.94%)</title><rect x="146.6" y="51.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.getTextLength (38 samples, 0.94%)</title><rect x="146.6" y="67.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.6" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="146.6" y="83.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.6" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="146.6" y="99.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.6" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="146.6" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.6" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="146.6" y="131.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="146.6" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="146.6" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="146.6" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="146.6" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="146.6" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.6" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="146.6" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.6" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="146.6" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="146.6" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="146.6" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="146.6" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="146.6" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.6" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="146.6" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="146.6" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.6" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="146.6" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="146.6" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="146.6" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="146.6" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="146.6" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="146.6" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="146.6" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="462.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (36 samples, 0.89%)</title><rect x="147.2" y="83.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.2" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (36 samples, 0.89%)</title><rect x="147.2" y="99.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.2" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (36 samples, 0.89%)</title><rect x="147.2" y="115.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.2" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (36 samples, 0.89%)</title><rect x="147.2" y="131.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.2" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (36 samples, 0.89%)</title><rect x="147.2" y="147.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.2" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (36 samples, 0.89%)</title><rect x="147.2" y="163.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (36 samples, 0.89%)</title><rect x="147.2" y="179.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.89%)</title><rect x="147.2" y="195.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (36 samples, 0.89%)</title><rect x="147.2" y="211.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.89%)</title><rect x="147.2" y="227.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.2" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (36 samples, 0.89%)</title><rect x="147.2" y="243.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.2" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (36 samples, 0.89%)</title><rect x="147.2" y="259.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.2" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (36 samples, 0.89%)</title><rect x="147.2" y="275.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.2" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (36 samples, 0.89%)</title><rect x="147.2" y="291.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (36 samples, 0.89%)</title><rect x="147.2" y="307.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (36 samples, 0.89%)</title><rect x="147.2" y="323.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (36 samples, 0.89%)</title><rect x="147.2" y="339.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.2" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (36 samples, 0.89%)</title><rect x="147.2" y="355.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.2" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (36 samples, 0.89%)</title><rect x="147.2" y="371.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.2" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (36 samples, 0.89%)</title><rect x="147.2" y="387.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (36 samples, 0.89%)</title><rect x="147.2" y="403.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (36 samples, 0.89%)</title><rect x="147.2" y="419.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (36 samples, 0.89%)</title><rect x="147.2" y="435.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36 samples, 0.89%)</title><rect x="147.2" y="451.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36 samples, 0.89%)</title><rect x="147.2" y="467.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (36 samples, 0.89%)</title><rect x="147.2" y="483.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.17%)</title><rect x="157.7" y="51.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.17%)</title><rect x="157.7" y="67.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (7 samples, 0.17%)</title><rect x="157.7" y="83.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (7 samples, 0.17%)</title><rect x="157.7" y="99.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printString (7 samples, 0.17%)</title><rect x="157.7" y="115.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.7" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (7 samples, 0.17%)</title><rect x="157.7" y="131.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.7" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="157.7" y="147.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.7" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="157.7" y="163.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="157.7" y="179.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="157.7" y="195.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="157.7" y="211.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="157.7" y="227.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="157.7" y="243.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.7" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="157.7" y="259.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.7" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="157.7" y="275.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.7" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="157.7" y="291.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="157.7" y="307.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="157.7" y="323.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="157.7" y="339.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.7" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="157.7" y="355.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.7" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="157.7" y="371.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.7" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="157.7" y="387.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="157.7" y="403.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="157.7" y="419.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="157.7" y="435.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="157.7" y="451.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="157.7" y="467.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="157.7" y="483.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.&lt;init&gt; (11 samples, 0.27%)</title><rect x="159.8" y="51.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="62.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.&lt;init&gt; (11 samples, 0.27%)</title><rect x="159.8" y="67.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="78.0"></text>
</g>
<g>
<title>java/lang/String.chars (11 samples, 0.27%)</title><rect x="159.8" y="83.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (11 samples, 0.27%)</title><rect x="159.8" y="99.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.8" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (11 samples, 0.27%)</title><rect x="159.8" y="115.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (11 samples, 0.27%)</title><rect x="159.8" y="131.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.8" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (11 samples, 0.27%)</title><rect x="159.8" y="147.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (11 samples, 0.27%)</title><rect x="159.8" y="163.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.8" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (11 samples, 0.27%)</title><rect x="159.8" y="179.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.8" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="159.8" y="195.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="159.8" y="211.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (11 samples, 0.27%)</title><rect x="159.8" y="227.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.27%)</title><rect x="159.8" y="243.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (11 samples, 0.27%)</title><rect x="159.8" y="259.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.27%)</title><rect x="159.8" y="275.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (11 samples, 0.27%)</title><rect x="159.8" y="291.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (11 samples, 0.27%)</title><rect x="159.8" y="307.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (11 samples, 0.27%)</title><rect x="159.8" y="323.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (11 samples, 0.27%)</title><rect x="159.8" y="339.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (11 samples, 0.27%)</title><rect x="159.8" y="355.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="159.8" y="371.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="159.8" y="387.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.8" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.27%)</title><rect x="159.8" y="403.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.8" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="159.8" y="419.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.8" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="159.8" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="159.8" y="451.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (11 samples, 0.27%)</title><rect x="159.8" y="467.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="159.8" y="483.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.27%)</title><rect x="159.8" y="499.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.27%)</title><rect x="159.8" y="515.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.27%)</title><rect x="159.8" y="531.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.tryAdvance (13 samples, 0.32%)</title><rect x="163.0" y="51.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.0" y="62.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (13 samples, 0.32%)</title><rect x="163.0" y="67.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (13 samples, 0.32%)</title><rect x="163.0" y="83.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (13 samples, 0.32%)</title><rect x="163.0" y="99.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.32%)</title><rect x="163.0" y="115.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (13 samples, 0.32%)</title><rect x="163.0" y="131.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.32%)</title><rect x="163.0" y="147.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (13 samples, 0.32%)</title><rect x="163.0" y="163.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.0" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (13 samples, 0.32%)</title><rect x="163.0" y="179.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.0" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (13 samples, 0.32%)</title><rect x="163.0" y="195.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.0" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (13 samples, 0.32%)</title><rect x="163.0" y="211.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.0" y="222.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (13 samples, 0.32%)</title><rect x="163.0" y="227.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.0" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (13 samples, 0.32%)</title><rect x="163.0" y="243.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.0" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (13 samples, 0.32%)</title><rect x="163.0" y="259.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.0" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (13 samples, 0.32%)</title><rect x="163.0" y="275.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.0" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (13 samples, 0.32%)</title><rect x="163.0" y="291.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.format (13 samples, 0.32%)</title><rect x="163.0" y="307.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.32%)</title><rect x="163.0" y="323.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (13 samples, 0.32%)</title><rect x="163.0" y="339.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.32%)</title><rect x="163.0" y="355.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.0" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (13 samples, 0.32%)</title><rect x="163.0" y="371.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.0" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (13 samples, 0.32%)</title><rect x="163.0" y="387.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.0" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (13 samples, 0.32%)</title><rect x="163.0" y="403.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.0" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (13 samples, 0.32%)</title><rect x="163.0" y="419.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (13 samples, 0.32%)</title><rect x="163.0" y="435.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="163.0" y="451.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="163.0" y="467.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.32%)</title><rect x="163.0" y="483.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.0" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="163.0" y="499.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.0" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="163.0" y="515.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="163.0" y="531.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (13 samples, 0.32%)</title><rect x="163.0" y="547.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="163.0" y="563.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13 samples, 0.32%)</title><rect x="163.0" y="579.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13 samples, 0.32%)</title><rect x="163.0" y="595.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.0" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13 samples, 0.32%)</title><rect x="163.0" y="611.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (39 samples, 0.97%)</title><rect x="166.8" y="51.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.8" y="62.0"></text>
</g>
<g>
<title>java/lang/String.charAt (39 samples, 0.97%)</title><rect x="166.8" y="67.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.8" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (15 samples, 0.37%)</title><rect x="166.8" y="83.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.8" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (15 samples, 0.37%)</title><rect x="166.8" y="99.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.8" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (15 samples, 0.37%)</title><rect x="166.8" y="115.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.8" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (15 samples, 0.37%)</title><rect x="166.8" y="131.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.8" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (15 samples, 0.37%)</title><rect x="166.8" y="147.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.8" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (15 samples, 0.37%)</title><rect x="166.8" y="163.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.8" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (15 samples, 0.37%)</title><rect x="166.8" y="179.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (15 samples, 0.37%)</title><rect x="166.8" y="195.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.37%)</title><rect x="166.8" y="211.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (15 samples, 0.37%)</title><rect x="166.8" y="227.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.37%)</title><rect x="166.8" y="243.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.8" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (15 samples, 0.37%)</title><rect x="166.8" y="259.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (15 samples, 0.37%)</title><rect x="166.8" y="275.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (15 samples, 0.37%)</title><rect x="166.8" y="291.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (15 samples, 0.37%)</title><rect x="166.8" y="307.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 0.37%)</title><rect x="166.8" y="323.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="166.8" y="339.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="166.8" y="355.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.8" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="166.8" y="371.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.8" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="166.8" y="387.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.8" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="166.8" y="403.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="166.8" y="419.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (15 samples, 0.37%)</title><rect x="166.8" y="435.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="166.8" y="451.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.37%)</title><rect x="166.8" y="467.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.37%)</title><rect x="166.8" y="483.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.37%)</title><rect x="166.8" y="499.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.8" y="510.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (6 samples, 0.15%)</title><rect x="171.2" y="83.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.2" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (6 samples, 0.15%)</title><rect x="171.2" y="99.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.2" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (6 samples, 0.15%)</title><rect x="171.2" y="115.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (6 samples, 0.15%)</title><rect x="171.2" y="131.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.2" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (6 samples, 0.15%)</title><rect x="171.2" y="147.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (6 samples, 0.15%)</title><rect x="171.2" y="163.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.2" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (6 samples, 0.15%)</title><rect x="171.2" y="179.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (6 samples, 0.15%)</title><rect x="171.2" y="195.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.2" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="171.2" y="211.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.2" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="171.2" y="227.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="171.2" y="243.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="171.2" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="171.2" y="275.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="171.2" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.2" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="171.2" y="307.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.2" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="171.2" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.2" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="171.2" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.2" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="171.2" y="355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="171.2" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="171.2" y="387.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="171.2" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="171.2" y="419.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="171.2" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.2" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="171.2" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="171.2" y="467.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="171.2" y="483.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="171.2" y="499.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="171.2" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="171.2" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="171.2" y="547.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.2" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.12%)</title><rect x="172.9" y="83.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.9" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="172.9" y="99.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.9" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="172.9" y="115.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.9" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="172.9" y="131.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.9" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="172.9" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="172.9" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.9" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="172.9" y="179.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.9" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="172.9" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="172.9" y="211.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="172.9" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.9" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="172.9" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.9" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="172.9" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.9" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="172.9" y="275.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="172.9" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="172.9" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="172.9" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="172.9" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.9" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="172.9" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.9" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="172.9" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.9" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="172.9" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.9" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="172.9" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="172.9" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="172.9" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="172.9" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.9" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="172.9" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.9" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="172.9" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.9" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="172.9" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="172.9" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="172.9" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="172.9" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="172.9" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="172.9" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="172.9" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.9" y="606.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (2 samples, 0.05%)</title><rect x="173.8" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (2 samples, 0.05%)</title><rect x="173.8" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="173.8" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.8" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="173.8" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.8" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="173.8" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.8" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="173.8" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="173.8" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="173.8" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="173.8" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="173.8" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="173.8" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="173.8" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="173.8" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.8" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="173.8" y="355.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="173.8" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="173.8" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="173.8" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.8" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="173.8" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.8" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="173.8" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.8" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="173.8" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="173.8" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="173.8" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="173.8" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="173.8" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="173.8" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="173.8" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.8" y="558.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (13 samples, 0.32%)</title><rect x="174.4" y="83.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.4" y="94.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (13 samples, 0.32%)</title><rect x="174.4" y="99.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.4" y="110.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (13 samples, 0.32%)</title><rect x="174.4" y="115.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.4" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (13 samples, 0.32%)</title><rect x="174.4" y="131.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.4" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (13 samples, 0.32%)</title><rect x="174.4" y="147.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.4" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (13 samples, 0.32%)</title><rect x="174.4" y="163.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.4" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (13 samples, 0.32%)</title><rect x="174.4" y="179.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.4" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (13 samples, 0.32%)</title><rect x="174.4" y="195.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.4" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (13 samples, 0.32%)</title><rect x="174.4" y="211.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.4" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (13 samples, 0.32%)</title><rect x="174.4" y="227.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.4" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (13 samples, 0.32%)</title><rect x="174.4" y="243.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (13 samples, 0.32%)</title><rect x="174.4" y="259.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.32%)</title><rect x="174.4" y="275.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (13 samples, 0.32%)</title><rect x="174.4" y="291.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.32%)</title><rect x="174.4" y="307.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (13 samples, 0.32%)</title><rect x="174.4" y="323.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.4" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (13 samples, 0.32%)</title><rect x="174.4" y="339.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.4" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (13 samples, 0.32%)</title><rect x="174.4" y="355.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.4" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (13 samples, 0.32%)</title><rect x="174.4" y="371.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (13 samples, 0.32%)</title><rect x="174.4" y="387.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="174.4" y="403.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="174.4" y="419.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.32%)</title><rect x="174.4" y="435.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.4" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="174.4" y="451.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.4" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="174.4" y="467.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="174.4" y="483.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (13 samples, 0.32%)</title><rect x="174.4" y="499.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="174.4" y="515.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13 samples, 0.32%)</title><rect x="174.4" y="531.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13 samples, 0.32%)</title><rect x="174.4" y="547.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13 samples, 0.32%)</title><rect x="174.4" y="563.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.10%)</title><rect x="178.2" y="51.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.2" y="62.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.10%)</title><rect x="178.2" y="67.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.10%)</title><rect x="178.2" y="83.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.2" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (4 samples, 0.10%)</title><rect x="178.2" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.2" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.10%)</title><rect x="178.2" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.2" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.10%)</title><rect x="178.2" y="131.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.2" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.10%)</title><rect x="178.2" y="147.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.2" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.10%)</title><rect x="178.2" y="163.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.2" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="178.2" y="179.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.2" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="178.2" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.2" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="178.2" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="178.2" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="178.2" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="178.2" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="178.2" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.2" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="178.2" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.2" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="178.2" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.2" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="178.2" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.2" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="178.2" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="178.2" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="178.2" y="371.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="178.2" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="178.2" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.2" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="178.2" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.2" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="178.2" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="178.2" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="178.2" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="178.2" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="178.2" y="499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="178.2" y="515.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="178.2" y="531.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (4 samples, 0.10%)</title><rect x="179.4" y="51.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.4" y="62.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.02%)</title><rect x="179.4" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.4" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="179.4" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.4" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="179.4" y="99.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.4" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="179.4" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.4" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="179.4" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.4" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="179.4" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="179.4" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.4" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="179.4" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.4" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="179.4" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="179.4" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="179.4" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="179.4" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="179.4" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="179.4" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="179.4" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.4" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="179.4" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="179.4" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="179.4" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="179.4" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="179.4" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="179.4" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.4" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="179.4" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.4" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="179.4" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="179.4" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="179.4" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="179.4" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="179.4" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="179.4" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="179.4" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="179.7" y="67.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.7" y="78.0"></text>
</g>
<g>
<title>java/lang/String.chars (3 samples, 0.07%)</title><rect x="179.7" y="83.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.7" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (3 samples, 0.07%)</title><rect x="179.7" y="99.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.7" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (3 samples, 0.07%)</title><rect x="179.7" y="115.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.7" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (3 samples, 0.07%)</title><rect x="179.7" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.7" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (3 samples, 0.07%)</title><rect x="179.7" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.7" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (3 samples, 0.07%)</title><rect x="179.7" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.7" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (3 samples, 0.07%)</title><rect x="179.7" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.7" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.07%)</title><rect x="179.7" y="195.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.7" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.07%)</title><rect x="179.7" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="179.7" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="179.7" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="179.7" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="179.7" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.7" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="179.7" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.7" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="179.7" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.7" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="179.7" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.7" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="179.7" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="179.7" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="179.7" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="179.7" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="179.7" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.7" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="179.7" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.7" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="179.7" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="179.7" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="179.7" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="179.7" y="483.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="179.7" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="179.7" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="179.7" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="180.5" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.5" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="180.5" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.5" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="180.5" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.5" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="180.5" y="99.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.5" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="180.5" y="115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.5" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="180.5" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="180.5" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="180.5" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.5" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="180.5" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="180.5" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="180.5" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="180.5" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="180.5" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="180.5" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="180.5" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="180.5" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.5" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="180.5" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="180.5" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="180.5" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="180.5" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.5" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="180.5" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.5" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="180.5" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.5" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="180.5" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="180.5" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="180.5" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="180.5" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="180.5" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="180.5" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="180.5" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29400.invoke (4 samples, 0.10%)</title><rect x="180.8" y="51.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.8" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2f800.invoke (4 samples, 0.10%)</title><rect x="180.8" y="67.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.8" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="180.8" y="83.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.8" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="180.8" y="99.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.8" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="180.8" y="115.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.8" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="180.8" y="131.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.8" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="180.8" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="180.8" y="163.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="180.8" y="179.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="180.8" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="180.8" y="211.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.8" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="180.8" y="227.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.8" y="238.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="180.8" y="243.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.8" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="180.8" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="180.8" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="180.8" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="180.8" y="307.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="180.8" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="180.8" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="180.8" y="355.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.8" y="366.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (38 samples, 0.94%)</title><rect x="182.0" y="51.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="62.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (38 samples, 0.94%)</title><rect x="182.0" y="67.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.0" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (38 samples, 0.94%)</title><rect x="182.0" y="83.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.0" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (38 samples, 0.94%)</title><rect x="182.0" y="99.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (38 samples, 0.94%)</title><rect x="182.0" y="115.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.0" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (38 samples, 0.94%)</title><rect x="182.0" y="131.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.format (38 samples, 0.94%)</title><rect x="182.0" y="147.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.0" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.94%)</title><rect x="182.0" y="163.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (38 samples, 0.94%)</title><rect x="182.0" y="179.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.94%)</title><rect x="182.0" y="195.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.0" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (38 samples, 0.94%)</title><rect x="182.0" y="211.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.0" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (38 samples, 0.94%)</title><rect x="182.0" y="227.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.0" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (38 samples, 0.94%)</title><rect x="182.0" y="243.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (38 samples, 0.94%)</title><rect x="182.0" y="259.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (38 samples, 0.94%)</title><rect x="182.0" y="275.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (38 samples, 0.94%)</title><rect x="182.0" y="291.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (38 samples, 0.94%)</title><rect x="182.0" y="307.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.0" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (38 samples, 0.94%)</title><rect x="182.0" y="323.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.0" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (38 samples, 0.94%)</title><rect x="182.0" y="339.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.0" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (38 samples, 0.94%)</title><rect x="182.0" y="355.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (38 samples, 0.94%)</title><rect x="182.0" y="371.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (38 samples, 0.94%)</title><rect x="182.0" y="387.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (38 samples, 0.94%)</title><rect x="182.0" y="403.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (38 samples, 0.94%)</title><rect x="182.0" y="419.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (38 samples, 0.94%)</title><rect x="182.0" y="435.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (38 samples, 0.94%)</title><rect x="182.0" y="451.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.0" y="462.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (41 samples, 1.02%)</title><rect x="193.1" y="51.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.1" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (41 samples, 1.02%)</title><rect x="193.1" y="67.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.1" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (41 samples, 1.02%)</title><rect x="193.1" y="83.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.1" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (41 samples, 1.02%)</title><rect x="193.1" y="99.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (41 samples, 1.02%)</title><rect x="193.1" y="115.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 1.02%)</title><rect x="193.1" y="131.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (41 samples, 1.02%)</title><rect x="193.1" y="147.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 1.02%)</title><rect x="193.1" y="163.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.1" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (41 samples, 1.02%)</title><rect x="193.1" y="179.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.1" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (41 samples, 1.02%)</title><rect x="193.1" y="195.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.1" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (41 samples, 1.02%)</title><rect x="193.1" y="211.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (41 samples, 1.02%)</title><rect x="193.1" y="227.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (41 samples, 1.02%)</title><rect x="193.1" y="243.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (41 samples, 1.02%)</title><rect x="193.1" y="259.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (41 samples, 1.02%)</title><rect x="193.1" y="275.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.1" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (41 samples, 1.02%)</title><rect x="193.1" y="291.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.1" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (41 samples, 1.02%)</title><rect x="193.1" y="307.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.1" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (41 samples, 1.02%)</title><rect x="193.1" y="323.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (41 samples, 1.02%)</title><rect x="193.1" y="339.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (41 samples, 1.02%)</title><rect x="193.1" y="355.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (41 samples, 1.02%)</title><rect x="193.1" y="371.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (41 samples, 1.02%)</title><rect x="193.1" y="387.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (41 samples, 1.02%)</title><rect x="193.1" y="403.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 1.02%)</title><rect x="193.1" y="419.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.1" y="430.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (28 samples, 0.69%)</title><rect x="205.1" y="51.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.1" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (16 samples, 0.40%)</title><rect x="205.1" y="67.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.1" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (16 samples, 0.40%)</title><rect x="205.1" y="83.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.1" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (16 samples, 0.40%)</title><rect x="205.1" y="99.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.1" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (16 samples, 0.40%)</title><rect x="205.1" y="115.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.1" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (16 samples, 0.40%)</title><rect x="205.1" y="131.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (16 samples, 0.40%)</title><rect x="205.1" y="147.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (16 samples, 0.40%)</title><rect x="205.1" y="163.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.40%)</title><rect x="205.1" y="179.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (16 samples, 0.40%)</title><rect x="205.1" y="195.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.40%)</title><rect x="205.1" y="211.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (16 samples, 0.40%)</title><rect x="205.1" y="227.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (16 samples, 0.40%)</title><rect x="205.1" y="243.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.1" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (16 samples, 0.40%)</title><rect x="205.1" y="259.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.1" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (16 samples, 0.40%)</title><rect x="205.1" y="275.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (16 samples, 0.40%)</title><rect x="205.1" y="291.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (16 samples, 0.40%)</title><rect x="205.1" y="307.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 0.40%)</title><rect x="205.1" y="323.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 0.40%)</title><rect x="205.1" y="339.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.1" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (16 samples, 0.40%)</title><rect x="205.1" y="355.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.1" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (16 samples, 0.40%)</title><rect x="205.1" y="371.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (16 samples, 0.40%)</title><rect x="205.1" y="387.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (16 samples, 0.40%)</title><rect x="205.1" y="403.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (16 samples, 0.40%)</title><rect x="205.1" y="419.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 0.40%)</title><rect x="205.1" y="435.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 0.40%)</title><rect x="205.1" y="451.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 0.40%)</title><rect x="205.1" y="467.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.1" y="478.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (12 samples, 0.30%)</title><rect x="209.8" y="67.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.8" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (12 samples, 0.30%)</title><rect x="209.8" y="83.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.format (12 samples, 0.30%)</title><rect x="209.8" y="99.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.30%)</title><rect x="209.8" y="115.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (12 samples, 0.30%)</title><rect x="209.8" y="131.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.30%)</title><rect x="209.8" y="147.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.8" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (12 samples, 0.30%)</title><rect x="209.8" y="163.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.8" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (12 samples, 0.30%)</title><rect x="209.8" y="179.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.8" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (12 samples, 0.30%)</title><rect x="209.8" y="195.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.8" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (12 samples, 0.30%)</title><rect x="209.8" y="211.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (12 samples, 0.30%)</title><rect x="209.8" y="227.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (12 samples, 0.30%)</title><rect x="209.8" y="243.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (12 samples, 0.30%)</title><rect x="209.8" y="259.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.8" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (12 samples, 0.30%)</title><rect x="209.8" y="275.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.8" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (12 samples, 0.30%)</title><rect x="209.8" y="291.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.8" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (12 samples, 0.30%)</title><rect x="209.8" y="307.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12 samples, 0.30%)</title><rect x="209.8" y="323.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (12 samples, 0.30%)</title><rect x="209.8" y="339.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12 samples, 0.30%)</title><rect x="209.8" y="355.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12 samples, 0.30%)</title><rect x="209.8" y="371.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12 samples, 0.30%)</title><rect x="209.8" y="387.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (12 samples, 0.30%)</title><rect x="209.8" y="403.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (7 samples, 0.17%)</title><rect x="213.3" y="51.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.3" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="213.3" y="67.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="213.3" y="83.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="213.3" y="99.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.3" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="213.3" y="115.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="213.3" y="131.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="213.3" y="147.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.3" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="213.3" y="163.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.3" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="213.3" y="179.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="213.3" y="195.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="213.3" y="211.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="213.3" y="227.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="213.3" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="213.3" y="259.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="213.3" y="275.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.3" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="213.3" y="291.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="213.3" y="307.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="213.3" y="323.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="213.3" y="339.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="213.3" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="213.3" y="371.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="213.3" y="387.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="213.3" y="403.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (4 samples, 0.10%)</title><rect x="215.3" y="51.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.3" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="215.3" y="67.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="215.3" y="83.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="215.3" y="99.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.3" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="215.3" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="215.3" y="131.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="215.3" y="147.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.3" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="215.3" y="163.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.3" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="215.3" y="179.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="215.3" y="195.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="215.3" y="211.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="215.3" y="227.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="215.3" y="243.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="215.3" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.3" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="215.3" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.3" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="215.3" y="291.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.3" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="215.3" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="215.3" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="215.3" y="339.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="215.3" y="355.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="215.3" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="215.3" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="215.3" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (156 samples, 3.87%)</title><rect x="216.5" y="51.0" width="45.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.5" y="62.0">java..</text>
</g>
<g>
<title>java/util/ArrayList.add (156 samples, 3.87%)</title><rect x="216.5" y="67.0" width="45.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.5" y="78.0">java..</text>
</g>
<g>
<title>java/util/Formatter.parse (156 samples, 3.87%)</title><rect x="216.5" y="83.0" width="45.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.5" y="94.0">java..</text>
</g>
<g>
<title>java/util/Formatter.format (156 samples, 3.87%)</title><rect x="216.5" y="99.0" width="45.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.5" y="110.0">java..</text>
</g>
<g>
<title>java/util/Formatter.format (156 samples, 3.87%)</title><rect x="216.5" y="115.0" width="45.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.5" y="126.0">java..</text>
</g>
<g>
<title>java/lang/String.format (156 samples, 3.87%)</title><rect x="216.5" y="131.0" width="45.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.5" y="142.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (156 samples, 3.87%)</title><rect x="216.5" y="147.0" width="45.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.5" y="158.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (156 samples, 3.87%)</title><rect x="216.5" y="163.0" width="45.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.5" y="174.0">java..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (156 samples, 3.87%)</title><rect x="216.5" y="179.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.5" y="190.0">java..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (156 samples, 3.87%)</title><rect x="216.5" y="195.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.5" y="206.0">pl/w..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (156 samples, 3.87%)</title><rect x="216.5" y="211.0" width="45.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.5" y="222.0">pl/w..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (156 samples, 3.87%)</title><rect x="216.5" y="227.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.5" y="238.0">pl/w..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (156 samples, 3.87%)</title><rect x="216.5" y="243.0" width="45.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.5" y="254.0">pl/w..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (156 samples, 3.87%)</title><rect x="216.5" y="259.0" width="45.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.5" y="270.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (156 samples, 3.87%)</title><rect x="216.5" y="275.0" width="45.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.5" y="286.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (156 samples, 3.87%)</title><rect x="216.5" y="291.0" width="45.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.5" y="302.0">jdk/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (156 samples, 3.87%)</title><rect x="216.5" y="307.0" width="45.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.5" y="318.0">java..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (156 samples, 3.87%)</title><rect x="216.5" y="323.0" width="45.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.5" y="334.0">org/..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (156 samples, 3.87%)</title><rect x="216.5" y="339.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.5" y="350.0">org/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (156 samples, 3.87%)</title><rect x="216.5" y="355.0" width="45.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.5" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (156 samples, 3.87%)</title><rect x="216.5" y="371.0" width="45.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.5" y="382.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (156 samples, 3.87%)</title><rect x="216.5" y="387.0" width="45.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.5" y="398.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (156 samples, 3.87%)</title><rect x="216.5" y="403.0" width="45.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.5" y="414.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (156 samples, 3.87%)</title><rect x="216.5" y="419.0" width="45.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.5" y="430.0">java..</text>
</g>
<g>
<title>java/lang/Thread.run (156 samples, 3.87%)</title><rect x="216.5" y="435.0" width="45.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.5" y="446.0">java..</text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 1.46%)</title><rect x="262.1" y="51.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.1" y="62.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 1.46%)</title><rect x="262.1" y="67.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.1" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 1.46%)</title><rect x="262.1" y="83.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 1.46%)</title><rect x="262.1" y="99.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.1" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (59 samples, 1.46%)</title><rect x="262.1" y="115.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.1" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (59 samples, 1.46%)</title><rect x="262.1" y="131.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.1" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (59 samples, 1.46%)</title><rect x="262.1" y="147.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (59 samples, 1.46%)</title><rect x="262.1" y="163.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 1.46%)</title><rect x="262.1" y="179.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (59 samples, 1.46%)</title><rect x="262.1" y="195.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 1.46%)</title><rect x="262.1" y="211.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (59 samples, 1.46%)</title><rect x="262.1" y="227.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (59 samples, 1.46%)</title><rect x="262.1" y="243.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.1" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (59 samples, 1.46%)</title><rect x="262.1" y="259.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.1" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (59 samples, 1.46%)</title><rect x="262.1" y="275.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (59 samples, 1.46%)</title><rect x="262.1" y="291.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (59 samples, 1.46%)</title><rect x="262.1" y="307.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (59 samples, 1.46%)</title><rect x="262.1" y="323.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (59 samples, 1.46%)</title><rect x="262.1" y="339.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.1" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (59 samples, 1.46%)</title><rect x="262.1" y="355.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.1" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (59 samples, 1.46%)</title><rect x="262.1" y="371.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (59 samples, 1.46%)</title><rect x="262.1" y="387.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (59 samples, 1.46%)</title><rect x="262.1" y="403.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (59 samples, 1.46%)</title><rect x="262.1" y="419.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (59 samples, 1.46%)</title><rect x="262.1" y="435.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (59 samples, 1.46%)</title><rect x="262.1" y="451.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (59 samples, 1.46%)</title><rect x="262.1" y="467.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="279.4" y="51.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.4" y="62.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="279.4" y="67.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.4" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="279.4" y="83.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="279.4" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="279.4" y="115.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.4" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="279.4" y="131.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.4" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="279.4" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="279.4" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="279.4" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="279.4" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="279.4" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="279.4" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.4" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="279.4" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.4" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="279.4" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="279.4" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="279.4" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="279.4" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="279.4" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="279.4" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.4" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="279.4" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.4" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="279.4" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.4" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="279.4" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="279.4" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="279.4" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="279.4" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="279.4" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="279.4" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="279.4" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.4" y="494.0"></text>
</g>
<g>
<title>java/util/Formatter$FixedString.&lt;init&gt; (6 samples, 0.15%)</title><rect x="280.0" y="51.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.0" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (6 samples, 0.15%)</title><rect x="280.0" y="67.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.0" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="280.0" y="83.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="280.0" y="99.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="280.0" y="115.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="280.0" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="280.0" y="147.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="280.0" y="163.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.0" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="280.0" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="280.0" y="195.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.0" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="280.0" y="211.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="280.0" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="280.0" y="243.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="280.0" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="280.0" y="275.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.0" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="280.0" y="291.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.0" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="280.0" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.0" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="280.0" y="323.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="280.0" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="280.0" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="280.0" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="280.0" y="387.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="280.0" y="403.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="280.0" y="419.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="430.0"></text>
</g>
<g>
<title>java/util/Formatter$Flags.contains (15 samples, 0.37%)</title><rect x="281.7" y="51.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.7" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.checkBadFlags (7 samples, 0.17%)</title><rect x="281.7" y="67.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.checkGeneral (7 samples, 0.17%)</title><rect x="281.7" y="83.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (7 samples, 0.17%)</title><rect x="281.7" y="99.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (7 samples, 0.17%)</title><rect x="281.7" y="115.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.7" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="281.7" y="131.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.7" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="281.7" y="147.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="281.7" y="163.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="281.7" y="179.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="281.7" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="281.7" y="211.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="281.7" y="227.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="281.7" y="243.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.7" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="281.7" y="259.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.7" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="281.7" y="275.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="281.7" y="291.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="281.7" y="307.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="281.7" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.7" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="281.7" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.7" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="281.7" y="355.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.7" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="281.7" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="281.7" y="387.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="281.7" y="403.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="281.7" y="419.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="281.7" y="435.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="281.7" y="451.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="281.7" y="467.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.7" y="478.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printString (8 samples, 0.20%)</title><rect x="283.8" y="67.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.8" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (8 samples, 0.20%)</title><rect x="283.8" y="83.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.20%)</title><rect x="283.8" y="99.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.8" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.20%)</title><rect x="283.8" y="115.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="283.8" y="131.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="283.8" y="147.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="283.8" y="163.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="283.8" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.8" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="283.8" y="195.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.8" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="283.8" y="211.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.8" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="283.8" y="227.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.8" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="283.8" y="243.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="283.8" y="259.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="283.8" y="275.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="283.8" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.8" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="283.8" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.8" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="283.8" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.8" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="283.8" y="339.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="283.8" y="355.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="283.8" y="371.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="283.8" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="283.8" y="403.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="283.8" y="419.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="283.8" y="435.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.8" y="446.0"></text>
</g>
<g>
<title>java/util/Formatter$Flags.parse (1 samples, 0.02%)</title><rect x="286.1" y="51.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.1" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.flags (1 samples, 0.02%)</title><rect x="286.1" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.1" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (1 samples, 0.02%)</title><rect x="286.1" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="286.1" y="99.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.1" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="286.1" y="115.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.1" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="286.1" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="286.1" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="286.1" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="286.1" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="286.1" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="286.1" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="286.1" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="286.1" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.1" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="286.1" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="286.1" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="286.1" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="286.1" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="286.1" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.1" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="286.1" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.1" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="286.1" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="286.1" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="286.1" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="286.1" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="286.1" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="286.1" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="286.1" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="462.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (3 samples, 0.07%)</title><rect x="286.4" y="51.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.4" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="286.4" y="67.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.4" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="286.4" y="83.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.4" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="286.4" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="286.4" y="115.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="286.4" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="286.4" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="286.4" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.4" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="286.4" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.4" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="286.4" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.4" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="286.4" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.4" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="286.4" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="286.4" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="286.4" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="286.4" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.4" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="286.4" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.4" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="286.4" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.4" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="286.4" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="286.4" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="286.4" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="286.4" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="286.4" y="387.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="286.4" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="286.4" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.4" y="430.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (3 samples, 0.07%)</title><rect x="287.3" y="51.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (3 samples, 0.07%)</title><rect x="287.3" y="67.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="287.3" y="83.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="287.3" y="99.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="287.3" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="287.3" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="287.3" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="287.3" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="287.3" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="287.3" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="287.3" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="287.3" y="227.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.3" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="287.3" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="287.3" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="287.3" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="287.3" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.3" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="287.3" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="287.3" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.3" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="287.3" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="287.3" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="287.3" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="287.3" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="287.3" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="287.3" y="419.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="287.3" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.3" y="446.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.flags (19 samples, 0.47%)</title><rect x="288.2" y="51.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.2" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (19 samples, 0.47%)</title><rect x="288.2" y="67.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.2" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (19 samples, 0.47%)</title><rect x="288.2" y="83.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.2" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (19 samples, 0.47%)</title><rect x="288.2" y="99.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.2" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (19 samples, 0.47%)</title><rect x="288.2" y="115.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (19 samples, 0.47%)</title><rect x="288.2" y="131.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.47%)</title><rect x="288.2" y="147.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (19 samples, 0.47%)</title><rect x="288.2" y="163.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.47%)</title><rect x="288.2" y="179.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.2" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (19 samples, 0.47%)</title><rect x="288.2" y="195.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (19 samples, 0.47%)</title><rect x="288.2" y="211.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.2" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (19 samples, 0.47%)</title><rect x="288.2" y="227.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.2" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (19 samples, 0.47%)</title><rect x="288.2" y="243.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (19 samples, 0.47%)</title><rect x="288.2" y="259.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (19 samples, 0.47%)</title><rect x="288.2" y="275.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (19 samples, 0.47%)</title><rect x="288.2" y="291.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.2" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (19 samples, 0.47%)</title><rect x="288.2" y="307.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.2" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (19 samples, 0.47%)</title><rect x="288.2" y="323.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (19 samples, 0.47%)</title><rect x="288.2" y="339.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (19 samples, 0.47%)</title><rect x="288.2" y="355.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (19 samples, 0.47%)</title><rect x="288.2" y="371.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (19 samples, 0.47%)</title><rect x="288.2" y="387.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19 samples, 0.47%)</title><rect x="288.2" y="403.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19 samples, 0.47%)</title><rect x="288.2" y="419.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 0.47%)</title><rect x="288.2" y="435.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.2" y="446.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (5 samples, 0.12%)</title><rect x="293.7" y="51.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.7" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printString (5 samples, 0.12%)</title><rect x="293.7" y="67.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (5 samples, 0.12%)</title><rect x="293.7" y="83.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="293.7" y="99.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="293.7" y="115.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="293.7" y="131.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="293.7" y="147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="293.7" y="163.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="293.7" y="179.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.7" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="293.7" y="195.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="293.7" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="293.7" y="227.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="293.7" y="243.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="293.7" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="293.7" y="275.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="293.7" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.7" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="293.7" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.7" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="293.7" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.7" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="293.7" y="339.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="293.7" y="355.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="293.7" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="293.7" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="293.7" y="403.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="293.7" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="293.7" y="435.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.7" y="446.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printString (6 samples, 0.15%)</title><rect x="295.2" y="51.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.2" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (6 samples, 0.15%)</title><rect x="295.2" y="67.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="295.2" y="83.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.2" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="295.2" y="99.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.2" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="295.2" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="295.2" y="131.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="295.2" y="147.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="295.2" y="163.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.2" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="295.2" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.2" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="295.2" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.2" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="295.2" y="211.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.2" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="295.2" y="227.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="295.2" y="243.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="295.2" y="259.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="295.2" y="275.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.2" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="295.2" y="291.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.2" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="295.2" y="307.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.2" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="295.2" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="295.2" y="339.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="295.2" y="355.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="295.2" y="371.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="295.2" y="387.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="295.2" y="403.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="295.2" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.2" y="430.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (83 samples, 2.06%)</title><rect x="297.0" y="51.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.0" y="62.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (83 samples, 2.06%)</title><rect x="297.0" y="67.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.0" y="78.0">j..</text>
</g>
<g>
<title>java/lang/String.format (83 samples, 2.06%)</title><rect x="297.0" y="83.0" width="24.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="94.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 2.06%)</title><rect x="297.0" y="99.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.0" y="110.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (83 samples, 2.06%)</title><rect x="297.0" y="115.0" width="24.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.0" y="126.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 2.06%)</title><rect x="297.0" y="131.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.0" y="142.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (83 samples, 2.06%)</title><rect x="297.0" y="147.0" width="24.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.0" y="158.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (83 samples, 2.06%)</title><rect x="297.0" y="163.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.0" y="174.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (83 samples, 2.06%)</title><rect x="297.0" y="179.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.0" y="190.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (83 samples, 2.06%)</title><rect x="297.0" y="195.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.0" y="206.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (83 samples, 2.06%)</title><rect x="297.0" y="211.0" width="24.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.0" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (83 samples, 2.06%)</title><rect x="297.0" y="227.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.0" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (83 samples, 2.06%)</title><rect x="297.0" y="243.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.0" y="254.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (83 samples, 2.06%)</title><rect x="297.0" y="259.0" width="24.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.0" y="270.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (83 samples, 2.06%)</title><rect x="297.0" y="275.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.0" y="286.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (83 samples, 2.06%)</title><rect x="297.0" y="291.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.0" y="302.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (83 samples, 2.06%)</title><rect x="297.0" y="307.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (83 samples, 2.06%)</title><rect x="297.0" y="323.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.0" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (83 samples, 2.06%)</title><rect x="297.0" y="339.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.0" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (83 samples, 2.06%)</title><rect x="297.0" y="355.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.0" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (83 samples, 2.06%)</title><rect x="297.0" y="371.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.0" y="382.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (83 samples, 2.06%)</title><rect x="297.0" y="387.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (78 samples, 1.93%)</title><rect x="321.2" y="51.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.2" y="62.0">j..</text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="321.2" y="67.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.2" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="321.2" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.2" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="321.2" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="321.2" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.2" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="321.2" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.2" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="321.2" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.2" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="321.2" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.2" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="321.2" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="321.2" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="321.2" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="321.2" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="321.2" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.2" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="321.2" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.2" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="321.2" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="321.2" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="321.2" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="321.2" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="321.2" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="321.2" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="321.2" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.2" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (77 samples, 1.91%)</title><rect x="321.5" y="67.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.5" y="78.0">j..</text>
</g>
<g>
<title>java/lang/String.format (77 samples, 1.91%)</title><rect x="321.5" y="83.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.5" y="94.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 1.91%)</title><rect x="321.5" y="99.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.5" y="110.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (77 samples, 1.91%)</title><rect x="321.5" y="115.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.5" y="126.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 1.91%)</title><rect x="321.5" y="131.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.5" y="142.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (77 samples, 1.91%)</title><rect x="321.5" y="147.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.5" y="158.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (77 samples, 1.91%)</title><rect x="321.5" y="163.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.5" y="174.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (77 samples, 1.91%)</title><rect x="321.5" y="179.0" width="22.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.5" y="190.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (77 samples, 1.91%)</title><rect x="321.5" y="195.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.5" y="206.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (77 samples, 1.91%)</title><rect x="321.5" y="211.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.5" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (77 samples, 1.91%)</title><rect x="321.5" y="227.0" width="22.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.5" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (77 samples, 1.91%)</title><rect x="321.5" y="243.0" width="22.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.5" y="254.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (77 samples, 1.91%)</title><rect x="321.5" y="259.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.5" y="270.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (77 samples, 1.91%)</title><rect x="321.5" y="275.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.5" y="286.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (77 samples, 1.91%)</title><rect x="321.5" y="291.0" width="22.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.5" y="302.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (77 samples, 1.91%)</title><rect x="321.5" y="307.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.5" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (77 samples, 1.91%)</title><rect x="321.5" y="323.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.5" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (77 samples, 1.91%)</title><rect x="321.5" y="339.0" width="22.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.5" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (77 samples, 1.91%)</title><rect x="321.5" y="355.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.5" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (77 samples, 1.91%)</title><rect x="321.5" y="371.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.5" y="382.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (77 samples, 1.91%)</title><rect x="321.5" y="387.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.5" y="398.0">j..</text>
</g>
<g>
<title>java/util/Formatter.getZero (6 samples, 0.15%)</title><rect x="344.1" y="51.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.1" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="344.1" y="67.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.1" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="344.1" y="83.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="344.1" y="99.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="347.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="344.1" y="115.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="344.1" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="344.1" y="147.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.1" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="344.1" y="163.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.1" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="344.1" y="179.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.1" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="344.1" y="195.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.1" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="344.1" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="344.1" y="227.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="347.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="344.1" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="344.1" y="259.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.1" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="344.1" y="275.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.1" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="344.1" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.1" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="344.1" y="307.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="344.1" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="344.1" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="344.1" y="355.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="344.1" y="371.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="344.1" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="344.1" y="403.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.1" y="414.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (33 samples, 0.82%)</title><rect x="345.8" y="51.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.8" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.format (33 samples, 0.82%)</title><rect x="345.8" y="67.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.8" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (33 samples, 0.82%)</title><rect x="345.8" y="83.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.format (33 samples, 0.82%)</title><rect x="345.8" y="99.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.82%)</title><rect x="345.8" y="115.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (33 samples, 0.82%)</title><rect x="345.8" y="131.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.82%)</title><rect x="345.8" y="147.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.8" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (33 samples, 0.82%)</title><rect x="345.8" y="163.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.8" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (33 samples, 0.82%)</title><rect x="345.8" y="179.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.8" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (33 samples, 0.82%)</title><rect x="345.8" y="195.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.8" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (33 samples, 0.82%)</title><rect x="345.8" y="211.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (33 samples, 0.82%)</title><rect x="345.8" y="227.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (33 samples, 0.82%)</title><rect x="345.8" y="243.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (33 samples, 0.82%)</title><rect x="345.8" y="259.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.8" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (33 samples, 0.82%)</title><rect x="345.8" y="275.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.8" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (33 samples, 0.82%)</title><rect x="345.8" y="291.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.8" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (33 samples, 0.82%)</title><rect x="345.8" y="307.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (33 samples, 0.82%)</title><rect x="345.8" y="323.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (33 samples, 0.82%)</title><rect x="345.8" y="339.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (33 samples, 0.82%)</title><rect x="345.8" y="355.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (33 samples, 0.82%)</title><rect x="345.8" y="371.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (33 samples, 0.82%)</title><rect x="345.8" y="387.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (33 samples, 0.82%)</title><rect x="345.8" y="403.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.8" y="414.0"></text>
</g>
<g>
<title>java/util/Locale.equals (79 samples, 1.96%)</title><rect x="355.5" y="51.0" width="23.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.5" y="62.0">j..</text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="355.5" y="67.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.5" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="355.5" y="83.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.5" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="355.5" y="99.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="355.5" y="115.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="355.5" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="355.5" y="147.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="355.5" y="163.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.5" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="355.5" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.5" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="355.5" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.5" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="355.5" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.5" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="355.5" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="355.5" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="355.5" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="355.5" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.5" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="355.5" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.5" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="355.5" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.5" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="355.5" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="355.5" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="355.5" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="355.5" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="355.5" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="355.5" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="355.5" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (75 samples, 1.86%)</title><rect x="356.6" y="67.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.6" y="78.0">j..</text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleResources (11 samples, 0.27%)</title><rect x="356.6" y="83.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.6" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (11 samples, 0.27%)</title><rect x="356.6" y="99.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (11 samples, 0.27%)</title><rect x="356.6" y="115.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.6" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (11 samples, 0.27%)</title><rect x="356.6" y="131.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (11 samples, 0.27%)</title><rect x="356.6" y="147.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (11 samples, 0.27%)</title><rect x="356.6" y="163.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.6" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="356.6" y="179.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.6" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (11 samples, 0.27%)</title><rect x="356.6" y="195.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (11 samples, 0.27%)</title><rect x="356.6" y="211.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.27%)</title><rect x="356.6" y="227.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (11 samples, 0.27%)</title><rect x="356.6" y="243.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.27%)</title><rect x="356.6" y="259.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (11 samples, 0.27%)</title><rect x="356.6" y="275.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (11 samples, 0.27%)</title><rect x="356.6" y="291.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (11 samples, 0.27%)</title><rect x="356.6" y="307.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.6" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (11 samples, 0.27%)</title><rect x="356.6" y="323.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (11 samples, 0.27%)</title><rect x="356.6" y="339.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="356.6" y="355.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.27%)</title><rect x="356.6" y="371.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.27%)</title><rect x="356.6" y="387.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.6" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="356.6" y="403.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.6" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (11 samples, 0.27%)</title><rect x="356.6" y="419.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="356.6" y="435.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (11 samples, 0.27%)</title><rect x="356.6" y="451.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11 samples, 0.27%)</title><rect x="356.6" y="467.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.27%)</title><rect x="356.6" y="483.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.27%)</title><rect x="356.6" y="499.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.27%)</title><rect x="356.6" y="515.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.6" y="526.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (64 samples, 1.59%)</title><rect x="359.8" y="83.0" width="18.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.8" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (43 samples, 1.07%)</title><rect x="359.8" y="99.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.8" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (43 samples, 1.07%)</title><rect x="359.8" y="115.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.8" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (43 samples, 1.07%)</title><rect x="359.8" y="131.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.8" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (43 samples, 1.07%)</title><rect x="359.8" y="147.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (43 samples, 1.07%)</title><rect x="359.8" y="163.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 1.07%)</title><rect x="359.8" y="179.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (43 samples, 1.07%)</title><rect x="359.8" y="195.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 1.07%)</title><rect x="359.8" y="211.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.8" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (43 samples, 1.07%)</title><rect x="359.8" y="227.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.8" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (43 samples, 1.07%)</title><rect x="359.8" y="243.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.8" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (43 samples, 1.07%)</title><rect x="359.8" y="259.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (43 samples, 1.07%)</title><rect x="359.8" y="275.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (43 samples, 1.07%)</title><rect x="359.8" y="291.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (43 samples, 1.07%)</title><rect x="359.8" y="307.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (43 samples, 1.07%)</title><rect x="359.8" y="323.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.8" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (43 samples, 1.07%)</title><rect x="359.8" y="339.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.8" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (43 samples, 1.07%)</title><rect x="359.8" y="355.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.8" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (43 samples, 1.07%)</title><rect x="359.8" y="371.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (43 samples, 1.07%)</title><rect x="359.8" y="387.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (43 samples, 1.07%)</title><rect x="359.8" y="403.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (43 samples, 1.07%)</title><rect x="359.8" y="419.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (43 samples, 1.07%)</title><rect x="359.8" y="435.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (43 samples, 1.07%)</title><rect x="359.8" y="451.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (43 samples, 1.07%)</title><rect x="359.8" y="467.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.8" y="478.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (21 samples, 0.52%)</title><rect x="372.4" y="99.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.4" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (21 samples, 0.52%)</title><rect x="372.4" y="115.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.4" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (21 samples, 0.52%)</title><rect x="372.4" y="131.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.4" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (21 samples, 0.52%)</title><rect x="372.4" y="147.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (21 samples, 0.52%)</title><rect x="372.4" y="163.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.4" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (21 samples, 0.52%)</title><rect x="372.4" y="179.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.4" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (21 samples, 0.52%)</title><rect x="372.4" y="195.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (21 samples, 0.52%)</title><rect x="372.4" y="211.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.52%)</title><rect x="372.4" y="227.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (21 samples, 0.52%)</title><rect x="372.4" y="243.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.52%)</title><rect x="372.4" y="259.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (21 samples, 0.52%)</title><rect x="372.4" y="275.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (21 samples, 0.52%)</title><rect x="372.4" y="291.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.4" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (21 samples, 0.52%)</title><rect x="372.4" y="307.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (21 samples, 0.52%)</title><rect x="372.4" y="323.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (21 samples, 0.52%)</title><rect x="372.4" y="339.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (21 samples, 0.52%)</title><rect x="372.4" y="355.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.52%)</title><rect x="372.4" y="371.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.52%)</title><rect x="372.4" y="387.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.4" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (21 samples, 0.52%)</title><rect x="372.4" y="403.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.4" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (21 samples, 0.52%)</title><rect x="372.4" y="419.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (21 samples, 0.52%)</title><rect x="372.4" y="435.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (21 samples, 0.52%)</title><rect x="372.4" y="451.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (21 samples, 0.52%)</title><rect x="372.4" y="467.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 0.52%)</title><rect x="372.4" y="483.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 0.52%)</title><rect x="372.4" y="499.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 0.52%)</title><rect x="372.4" y="515.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.4" y="526.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (8 samples, 0.20%)</title><rect x="378.6" y="51.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.6" y="62.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (8 samples, 0.20%)</title><rect x="378.6" y="67.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.6" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (8 samples, 0.20%)</title><rect x="378.6" y="83.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.6" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (8 samples, 0.20%)</title><rect x="378.6" y="99.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.6" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (8 samples, 0.20%)</title><rect x="378.6" y="115.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.6" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (8 samples, 0.20%)</title><rect x="378.6" y="131.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.6" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (8 samples, 0.20%)</title><rect x="378.6" y="147.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="378.6" y="163.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.6" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="378.6" y="179.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="378.6" y="195.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="378.6" y="211.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="378.6" y="227.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="378.6" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="378.6" y="259.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="378.6" y="275.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="378.6" y="291.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="378.6" y="307.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="378.6" y="323.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="378.6" y="339.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="378.6" y="355.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.6" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="378.6" y="371.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.6" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="378.6" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="378.6" y="403.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="378.6" y="419.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="378.6" y="435.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="378.6" y="451.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="378.6" y="467.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="378.6" y="483.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="378.6" y="499.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.6" y="510.0"></text>
</g>
<g>
<title>java/util/Locale.hasExtensions (8 samples, 0.20%)</title><rect x="380.9" y="51.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.9" y="62.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (8 samples, 0.20%)</title><rect x="380.9" y="67.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.9" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (8 samples, 0.20%)</title><rect x="380.9" y="83.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.9" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (8 samples, 0.20%)</title><rect x="380.9" y="99.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.9" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (8 samples, 0.20%)</title><rect x="380.9" y="115.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.9" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (8 samples, 0.20%)</title><rect x="380.9" y="131.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.9" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (8 samples, 0.20%)</title><rect x="380.9" y="147.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.9" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (8 samples, 0.20%)</title><rect x="380.9" y="163.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.9" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="380.9" y="179.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.9" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="380.9" y="195.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="380.9" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="380.9" y="227.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="380.9" y="243.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="380.9" y="259.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.9" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="380.9" y="275.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="380.9" y="291.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.9" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="380.9" y="307.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.9" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="380.9" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="380.9" y="339.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="380.9" y="355.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="380.9" y="371.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="380.9" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.9" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="380.9" y="403.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.9" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="380.9" y="419.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="380.9" y="435.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="380.9" y="451.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="380.9" y="467.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="380.9" y="483.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="380.9" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="380.9" y="515.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.9" y="526.0"></text>
</g>
<g>
<title>java/util/Locale.hashCode (2 samples, 0.05%)</title><rect x="383.2" y="51.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.2" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="383.2" y="67.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.2" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleResources (1 samples, 0.02%)</title><rect x="383.2" y="83.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.2" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="383.2" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.2" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="383.2" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.2" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="383.2" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.2" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="383.2" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.2" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="383.2" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.2" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="383.2" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.2" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="383.2" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="383.2" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="383.2" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="383.2" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="383.2" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.2" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="383.2" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.2" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="383.2" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.2" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="383.2" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.2" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="383.2" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="383.2" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="383.2" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="383.2" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.2" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="383.2" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.2" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="383.2" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.2" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="383.2" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="383.2" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="383.2" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="383.2" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="383.2" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="383.2" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="383.2" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.2" y="526.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.02%)</title><rect x="383.5" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.5" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="383.5" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.5" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="383.5" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.5" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="383.5" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.5" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="383.5" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="383.5" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="383.5" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.5" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="383.5" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="383.5" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="383.5" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="383.5" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="383.5" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="383.5" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="383.5" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.5" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="383.5" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.5" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="383.5" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="383.5" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="383.5" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="383.5" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.5" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="383.5" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="383.5" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.5" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="383.5" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="383.5" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="383.5" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="383.5" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="383.5" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="383.5" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="383.5" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="526.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (6 samples, 0.15%)</title><rect x="383.8" y="51.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.8" y="62.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (6 samples, 0.15%)</title><rect x="383.8" y="67.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.8" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (6 samples, 0.15%)</title><rect x="383.8" y="83.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.8" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (6 samples, 0.15%)</title><rect x="383.8" y="99.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.8" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (6 samples, 0.15%)</title><rect x="383.8" y="115.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.8" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (6 samples, 0.15%)</title><rect x="383.8" y="131.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.8" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (6 samples, 0.15%)</title><rect x="383.8" y="147.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.8" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (6 samples, 0.15%)</title><rect x="383.8" y="163.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.8" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="383.8" y="179.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.8" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.15%)</title><rect x="383.8" y="195.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="383.8" y="211.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="383.8" y="227.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="383.8" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="383.8" y="259.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="383.8" y="275.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="383.8" y="291.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="383.8" y="307.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="383.8" y="323.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="383.8" y="339.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="383.8" y="355.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="383.8" y="371.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.8" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="383.8" y="387.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.8" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="383.8" y="403.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.8" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="383.8" y="419.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="383.8" y="435.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="383.8" y="451.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="383.8" y="467.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="383.8" y="483.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="383.8" y="499.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="383.8" y="515.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.8" y="526.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="385.6" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.6" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="385.6" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="385.6" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="385.6" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="385.6" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.02%)</title><rect x="385.6" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="385.6" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.6" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="385.6" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.6" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="385.6" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.6" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="385.6" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.6" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="385.6" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.6" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="385.6" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.6" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="385.6" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.6" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="385.6" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="385.6" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="385.6" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="385.6" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="385.6" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.6" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="385.6" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.6" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="385.6" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.6" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="385.6" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.6" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="385.6" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="385.6" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="385.6" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="385.6" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.6" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="385.6" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.6" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="385.6" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.6" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="385.6" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="385.6" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="385.6" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="385.6" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="385.6" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="385.6" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="385.6" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.6" y="590.0"></text>
</g>
<g>
<title>java/util/OptionalInt.of (5 samples, 0.12%)</title><rect x="385.9" y="51.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.9" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.get (5 samples, 0.12%)</title><rect x="385.9" y="67.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.get (5 samples, 0.12%)</title><rect x="385.9" y="83.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.9" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.12%)</title><rect x="385.9" y="99.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="385.9" y="115.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (5 samples, 0.12%)</title><rect x="385.9" y="131.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.9" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (5 samples, 0.12%)</title><rect x="385.9" y="147.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.9" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (5 samples, 0.12%)</title><rect x="385.9" y="163.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.9" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (5 samples, 0.12%)</title><rect x="385.9" y="179.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.9" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (5 samples, 0.12%)</title><rect x="385.9" y="195.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.9" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (5 samples, 0.12%)</title><rect x="385.9" y="211.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.9" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (5 samples, 0.12%)</title><rect x="385.9" y="227.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.9" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="385.9" y="243.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.9" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="385.9" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="385.9" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="385.9" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="385.9" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="385.9" y="323.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="385.9" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.9" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="385.9" y="355.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.9" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="385.9" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.9" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="385.9" y="387.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="385.9" y="403.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="385.9" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="385.9" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="385.9" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="385.9" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.9" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="385.9" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="385.9" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="385.9" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="385.9" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="385.9" y="547.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="385.9" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="385.9" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (308 samples, 7.64%)</title><rect x="387.3" y="51.0" width="90.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.3" y="62.0">java/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleResources (28 samples, 0.69%)</title><rect x="387.3" y="67.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (28 samples, 0.69%)</title><rect x="387.3" y="83.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (28 samples, 0.69%)</title><rect x="387.3" y="99.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (28 samples, 0.69%)</title><rect x="387.3" y="115.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.3" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (28 samples, 0.69%)</title><rect x="387.3" y="131.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (28 samples, 0.69%)</title><rect x="387.3" y="147.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.3" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (28 samples, 0.69%)</title><rect x="387.3" y="163.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.3" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (28 samples, 0.69%)</title><rect x="387.3" y="179.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (28 samples, 0.69%)</title><rect x="387.3" y="195.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.69%)</title><rect x="387.3" y="211.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (28 samples, 0.69%)</title><rect x="387.3" y="227.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.69%)</title><rect x="387.3" y="243.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.3" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (28 samples, 0.69%)</title><rect x="387.3" y="259.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (28 samples, 0.69%)</title><rect x="387.3" y="275.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.3" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (28 samples, 0.69%)</title><rect x="387.3" y="291.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (28 samples, 0.69%)</title><rect x="387.3" y="307.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (28 samples, 0.69%)</title><rect x="387.3" y="323.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (28 samples, 0.69%)</title><rect x="387.3" y="339.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (28 samples, 0.69%)</title><rect x="387.3" y="355.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (28 samples, 0.69%)</title><rect x="387.3" y="371.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (28 samples, 0.69%)</title><rect x="387.3" y="387.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (28 samples, 0.69%)</title><rect x="387.3" y="403.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (28 samples, 0.69%)</title><rect x="387.3" y="419.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (28 samples, 0.69%)</title><rect x="387.3" y="435.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (28 samples, 0.69%)</title><rect x="387.3" y="451.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28 samples, 0.69%)</title><rect x="387.3" y="467.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28 samples, 0.69%)</title><rect x="387.3" y="483.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (28 samples, 0.69%)</title><rect x="387.3" y="499.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.3" y="510.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (253 samples, 6.27%)</title><rect x="395.5" y="67.0" width="74.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.5" y="78.0">sun/util..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (170 samples, 4.21%)</title><rect x="395.5" y="83.0" width="49.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.5" y="94.0">java/..</text>
</g>
<g>
<title>java/util/Formatter.getZero (170 samples, 4.21%)</title><rect x="395.5" y="99.0" width="49.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.5" y="110.0">java/..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (170 samples, 4.21%)</title><rect x="395.5" y="115.0" width="49.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.5" y="126.0">java/..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (170 samples, 4.21%)</title><rect x="395.5" y="131.0" width="49.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.5" y="142.0">java/..</text>
</g>
<g>
<title>java/lang/String.format (170 samples, 4.21%)</title><rect x="395.5" y="147.0" width="49.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.5" y="158.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (170 samples, 4.21%)</title><rect x="395.5" y="163.0" width="49.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.5" y="174.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (170 samples, 4.21%)</title><rect x="395.5" y="179.0" width="49.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.5" y="190.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (170 samples, 4.21%)</title><rect x="395.5" y="195.0" width="49.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.5" y="206.0">java/..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (170 samples, 4.21%)</title><rect x="395.5" y="211.0" width="49.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.5" y="222.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (170 samples, 4.21%)</title><rect x="395.5" y="227.0" width="49.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.5" y="238.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (170 samples, 4.21%)</title><rect x="395.5" y="243.0" width="49.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.5" y="254.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (170 samples, 4.21%)</title><rect x="395.5" y="259.0" width="49.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.5" y="270.0">pl/wy..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (170 samples, 4.21%)</title><rect x="395.5" y="275.0" width="49.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.5" y="286.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (170 samples, 4.21%)</title><rect x="395.5" y="291.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.5" y="302.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (170 samples, 4.21%)</title><rect x="395.5" y="307.0" width="49.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.5" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (170 samples, 4.21%)</title><rect x="395.5" y="323.0" width="49.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.5" y="334.0">java/..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (170 samples, 4.21%)</title><rect x="395.5" y="339.0" width="49.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.5" y="350.0">org/o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (170 samples, 4.21%)</title><rect x="395.5" y="355.0" width="49.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.5" y="366.0">org/o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (170 samples, 4.21%)</title><rect x="395.5" y="371.0" width="49.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.5" y="382.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (170 samples, 4.21%)</title><rect x="395.5" y="387.0" width="49.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.5" y="398.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (170 samples, 4.21%)</title><rect x="395.5" y="403.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.5" y="414.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (170 samples, 4.21%)</title><rect x="395.5" y="419.0" width="49.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.5" y="430.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (170 samples, 4.21%)</title><rect x="395.5" y="435.0" width="49.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.5" y="446.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.run (170 samples, 4.21%)</title><rect x="395.5" y="451.0" width="49.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.5" y="462.0">java/..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (83 samples, 2.06%)</title><rect x="445.3" y="83.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.3" y="94.0">j..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (83 samples, 2.06%)</title><rect x="445.3" y="99.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.3" y="110.0">j..</text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (83 samples, 2.06%)</title><rect x="445.3" y="115.0" width="24.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.3" y="126.0">s..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (83 samples, 2.06%)</title><rect x="445.3" y="131.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.3" y="142.0">j..</text>
</g>
<g>
<title>java/util/Formatter.getZero (83 samples, 2.06%)</title><rect x="445.3" y="147.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.3" y="158.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (83 samples, 2.06%)</title><rect x="445.3" y="163.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.3" y="174.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (83 samples, 2.06%)</title><rect x="445.3" y="179.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.3" y="190.0">j..</text>
</g>
<g>
<title>java/lang/String.format (83 samples, 2.06%)</title><rect x="445.3" y="195.0" width="24.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.3" y="206.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 2.06%)</title><rect x="445.3" y="211.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.3" y="222.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (83 samples, 2.06%)</title><rect x="445.3" y="227.0" width="24.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.3" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 2.06%)</title><rect x="445.3" y="243.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.3" y="254.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (83 samples, 2.06%)</title><rect x="445.3" y="259.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.3" y="270.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (83 samples, 2.06%)</title><rect x="445.3" y="275.0" width="24.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.3" y="286.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (83 samples, 2.06%)</title><rect x="445.3" y="291.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.3" y="302.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (83 samples, 2.06%)</title><rect x="445.3" y="307.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.3" y="318.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (83 samples, 2.06%)</title><rect x="445.3" y="323.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.3" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (83 samples, 2.06%)</title><rect x="445.3" y="339.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.3" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (83 samples, 2.06%)</title><rect x="445.3" y="355.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.3" y="366.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (83 samples, 2.06%)</title><rect x="445.3" y="371.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.3" y="382.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (83 samples, 2.06%)</title><rect x="445.3" y="387.0" width="24.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.3" y="398.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (83 samples, 2.06%)</title><rect x="445.3" y="403.0" width="24.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.3" y="414.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (83 samples, 2.06%)</title><rect x="445.3" y="419.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (83 samples, 2.06%)</title><rect x="445.3" y="435.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (83 samples, 2.06%)</title><rect x="445.3" y="451.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (83 samples, 2.06%)</title><rect x="445.3" y="467.0" width="24.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (83 samples, 2.06%)</title><rect x="445.3" y="483.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.3" y="494.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (83 samples, 2.06%)</title><rect x="445.3" y="499.0" width="24.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.3" y="510.0">j..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (27 samples, 0.67%)</title><rect x="469.5" y="67.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.5" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (27 samples, 0.67%)</title><rect x="469.5" y="83.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.5" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (27 samples, 0.67%)</title><rect x="469.5" y="99.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.5" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (27 samples, 0.67%)</title><rect x="469.5" y="115.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.5" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (27 samples, 0.67%)</title><rect x="469.5" y="131.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (27 samples, 0.67%)</title><rect x="469.5" y="147.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (27 samples, 0.67%)</title><rect x="469.5" y="163.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.5" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (27 samples, 0.67%)</title><rect x="469.5" y="179.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (27 samples, 0.67%)</title><rect x="469.5" y="195.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.67%)</title><rect x="469.5" y="211.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (27 samples, 0.67%)</title><rect x="469.5" y="227.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.67%)</title><rect x="469.5" y="243.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (27 samples, 0.67%)</title><rect x="469.5" y="259.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (27 samples, 0.67%)</title><rect x="469.5" y="275.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (27 samples, 0.67%)</title><rect x="469.5" y="291.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.5" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (27 samples, 0.67%)</title><rect x="469.5" y="307.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (27 samples, 0.67%)</title><rect x="469.5" y="323.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (27 samples, 0.67%)</title><rect x="469.5" y="339.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (27 samples, 0.67%)</title><rect x="469.5" y="355.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.5" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (27 samples, 0.67%)</title><rect x="469.5" y="371.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.5" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (27 samples, 0.67%)</title><rect x="469.5" y="387.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.5" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (27 samples, 0.67%)</title><rect x="469.5" y="403.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (27 samples, 0.67%)</title><rect x="469.5" y="419.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (27 samples, 0.67%)</title><rect x="469.5" y="435.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (27 samples, 0.67%)</title><rect x="469.5" y="451.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (27 samples, 0.67%)</title><rect x="469.5" y="467.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (27 samples, 0.67%)</title><rect x="469.5" y="483.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (27 samples, 0.67%)</title><rect x="469.5" y="499.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.spread (2 samples, 0.05%)</title><rect x="477.4" y="51.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="477.4" y="67.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.4" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (2 samples, 0.05%)</title><rect x="477.4" y="83.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.4" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.05%)</title><rect x="477.4" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.4" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.05%)</title><rect x="477.4" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.4" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.05%)</title><rect x="477.4" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.05%)</title><rect x="477.4" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.05%)</title><rect x="477.4" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.4" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="477.4" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.4" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="477.4" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="477.4" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="477.4" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="477.4" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="477.4" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="477.4" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="477.4" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.4" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="477.4" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="477.4" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="477.4" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="477.4" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="477.4" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="477.4" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.4" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="477.4" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.4" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="477.4" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="477.4" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="477.4" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="477.4" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="477.4" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="477.4" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="477.4" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (33 samples, 0.82%)</title><rect x="478.0" y="51.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (33 samples, 0.82%)</title><rect x="478.0" y="67.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.0" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (11 samples, 0.27%)</title><rect x="478.0" y="83.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.0" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (9 samples, 0.22%)</title><rect x="478.0" y="99.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.0" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (9 samples, 0.22%)</title><rect x="478.0" y="115.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.0" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="478.0" y="131.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.0" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="478.0" y="147.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="478.0" y="163.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="478.0" y="179.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="478.0" y="195.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="478.0" y="211.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.0" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="478.0" y="227.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.0" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="478.0" y="243.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="478.0" y="259.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="478.0" y="275.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="478.0" y="291.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="478.0" y="307.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="478.0" y="323.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.0" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="478.0" y="339.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.0" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="478.0" y="355.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.0" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="478.0" y="371.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="478.0" y="387.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="478.0" y="403.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="478.0" y="419.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="478.0" y="435.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="478.0" y="451.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="478.0" y="467.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.0" y="478.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.05%)</title><rect x="480.7" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.7" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.05%)</title><rect x="480.7" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.7" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.05%)</title><rect x="480.7" y="131.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.7" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.05%)</title><rect x="480.7" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.7" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.05%)</title><rect x="480.7" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.7" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="480.7" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.7" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="480.7" y="195.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="480.7" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="480.7" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="480.7" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="480.7" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.7" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="480.7" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.7" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="480.7" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.7" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="480.7" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.7" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="480.7" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="480.7" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="480.7" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="480.7" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.7" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="480.7" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.7" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="480.7" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.7" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="480.7" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="480.7" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="480.7" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="480.7" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="480.7" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="480.7" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="480.7" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.7" y="526.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (22 samples, 0.55%)</title><rect x="481.2" y="83.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.2" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (22 samples, 0.55%)</title><rect x="481.2" y="99.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.2" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (22 samples, 0.55%)</title><rect x="481.2" y="115.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.2" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (22 samples, 0.55%)</title><rect x="481.2" y="131.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.2" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (22 samples, 0.55%)</title><rect x="481.2" y="147.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.2" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (22 samples, 0.55%)</title><rect x="481.2" y="163.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.2" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (22 samples, 0.55%)</title><rect x="481.2" y="179.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.2" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (22 samples, 0.55%)</title><rect x="481.2" y="195.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (22 samples, 0.55%)</title><rect x="481.2" y="211.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.55%)</title><rect x="481.2" y="227.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (22 samples, 0.55%)</title><rect x="481.2" y="243.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.55%)</title><rect x="481.2" y="259.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.2" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (22 samples, 0.55%)</title><rect x="481.2" y="275.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.2" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (22 samples, 0.55%)</title><rect x="481.2" y="291.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.2" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (22 samples, 0.55%)</title><rect x="481.2" y="307.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.2" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (22 samples, 0.55%)</title><rect x="481.2" y="323.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (22 samples, 0.55%)</title><rect x="481.2" y="339.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (22 samples, 0.55%)</title><rect x="481.2" y="355.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (22 samples, 0.55%)</title><rect x="481.2" y="371.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.2" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (22 samples, 0.55%)</title><rect x="481.2" y="387.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.2" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (22 samples, 0.55%)</title><rect x="481.2" y="403.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.2" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (22 samples, 0.55%)</title><rect x="481.2" y="419.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (22 samples, 0.55%)</title><rect x="481.2" y="435.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (22 samples, 0.55%)</title><rect x="481.2" y="451.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (22 samples, 0.55%)</title><rect x="481.2" y="467.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22 samples, 0.55%)</title><rect x="481.2" y="483.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22 samples, 0.55%)</title><rect x="481.2" y="499.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 0.55%)</title><rect x="481.2" y="515.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.2" y="526.0"></text>
</g>
<g>
<title>java/util/regex/CharPredicates.lambda$ASCII_DIGIT$18 (1 samples, 0.02%)</title><rect x="487.7" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.7" y="62.0"></text>
</g>
<g>
<title>java/util/regex/CharPredicates$$Lambda$20.0x80000002a.is (1 samples, 0.02%)</title><rect x="487.7" y="67.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.7" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="487.7" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="487.7" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.7" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="487.7" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.7" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="487.7" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.7" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="487.7" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.7" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="487.7" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.7" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="487.7" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.7" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="487.7" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.7" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="487.7" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.7" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="487.7" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.7" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="487.7" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="487.7" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.7" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="487.7" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="487.7" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="487.7" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.7" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="487.7" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.7" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="487.7" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.7" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="487.7" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="487.7" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="487.7" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="487.7" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="487.7" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="487.7" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.7" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="487.7" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="487.7" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.7" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="487.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.7" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="487.7" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="487.7" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="487.7" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="487.7" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="487.7" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.7" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="487.7" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.7" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="487.7" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="487.7" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="487.7" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="487.7" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="487.7" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="487.7" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="487.7" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.7" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (84 samples, 2.08%)</title><rect x="488.0" y="51.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.0" y="62.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (84 samples, 2.08%)</title><rect x="488.0" y="67.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.0" y="78.0">j..</text>
</g>
<g>
<title>java/util/Formatter.parse (84 samples, 2.08%)</title><rect x="488.0" y="83.0" width="24.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.0" y="94.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (84 samples, 2.08%)</title><rect x="488.0" y="99.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.0" y="110.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (84 samples, 2.08%)</title><rect x="488.0" y="115.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.0" y="126.0">j..</text>
</g>
<g>
<title>java/lang/String.format (84 samples, 2.08%)</title><rect x="488.0" y="131.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.0" y="142.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 2.08%)</title><rect x="488.0" y="147.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.0" y="158.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (84 samples, 2.08%)</title><rect x="488.0" y="163.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.0" y="174.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 2.08%)</title><rect x="488.0" y="179.0" width="24.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.0" y="190.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (84 samples, 2.08%)</title><rect x="488.0" y="195.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.0" y="206.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (84 samples, 2.08%)</title><rect x="488.0" y="211.0" width="24.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.0" y="222.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (84 samples, 2.08%)</title><rect x="488.0" y="227.0" width="24.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.0" y="238.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (84 samples, 2.08%)</title><rect x="488.0" y="243.0" width="24.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.0" y="254.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (84 samples, 2.08%)</title><rect x="488.0" y="259.0" width="24.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.0" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (84 samples, 2.08%)</title><rect x="488.0" y="275.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.0" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (84 samples, 2.08%)</title><rect x="488.0" y="291.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.0" y="302.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (84 samples, 2.08%)</title><rect x="488.0" y="307.0" width="24.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.0" y="318.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (84 samples, 2.08%)</title><rect x="488.0" y="323.0" width="24.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.0" y="334.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (84 samples, 2.08%)</title><rect x="488.0" y="339.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.0" y="350.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (84 samples, 2.08%)</title><rect x="488.0" y="355.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.0" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (84 samples, 2.08%)</title><rect x="488.0" y="371.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.0" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (84 samples, 2.08%)</title><rect x="488.0" y="387.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84 samples, 2.08%)</title><rect x="488.0" y="403.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.0" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84 samples, 2.08%)</title><rect x="488.0" y="419.0" width="24.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.0" y="430.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (84 samples, 2.08%)</title><rect x="488.0" y="435.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.0" y="446.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.end (76 samples, 1.88%)</title><rect x="512.5" y="51.0" width="22.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.5" y="62.0">j..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (76 samples, 1.88%)</title><rect x="512.5" y="67.0" width="22.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.5" y="78.0">j..</text>
</g>
<g>
<title>java/util/Formatter.parse (76 samples, 1.88%)</title><rect x="512.5" y="83.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.5" y="94.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (76 samples, 1.88%)</title><rect x="512.5" y="99.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.5" y="110.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (76 samples, 1.88%)</title><rect x="512.5" y="115.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.5" y="126.0">j..</text>
</g>
<g>
<title>java/lang/String.format (76 samples, 1.88%)</title><rect x="512.5" y="131.0" width="22.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.5" y="142.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 1.88%)</title><rect x="512.5" y="147.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.5" y="158.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (76 samples, 1.88%)</title><rect x="512.5" y="163.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.5" y="174.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 1.88%)</title><rect x="512.5" y="179.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.5" y="190.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (76 samples, 1.88%)</title><rect x="512.5" y="195.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.5" y="206.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (76 samples, 1.88%)</title><rect x="512.5" y="211.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.5" y="222.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (76 samples, 1.88%)</title><rect x="512.5" y="227.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.5" y="238.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (76 samples, 1.88%)</title><rect x="512.5" y="243.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.5" y="254.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (76 samples, 1.88%)</title><rect x="512.5" y="259.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.5" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (76 samples, 1.88%)</title><rect x="512.5" y="275.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.5" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (76 samples, 1.88%)</title><rect x="512.5" y="291.0" width="22.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.5" y="302.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (76 samples, 1.88%)</title><rect x="512.5" y="307.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.5" y="318.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (76 samples, 1.88%)</title><rect x="512.5" y="323.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.5" y="334.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (76 samples, 1.88%)</title><rect x="512.5" y="339.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.5" y="350.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (76 samples, 1.88%)</title><rect x="512.5" y="355.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.5" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (76 samples, 1.88%)</title><rect x="512.5" y="371.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.5" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (76 samples, 1.88%)</title><rect x="512.5" y="387.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.5" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (76 samples, 1.88%)</title><rect x="512.5" y="403.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.5" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (76 samples, 1.88%)</title><rect x="512.5" y="419.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.5" y="430.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (76 samples, 1.88%)</title><rect x="512.5" y="435.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.5" y="446.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.find (105 samples, 2.60%)</title><rect x="534.8" y="51.0" width="30.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.8" y="62.0">ja..</text>
</g>
<g>
<title>java/util/Formatter.parse (105 samples, 2.60%)</title><rect x="534.8" y="67.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.8" y="78.0">ja..</text>
</g>
<g>
<title>java/util/Formatter.format (105 samples, 2.60%)</title><rect x="534.8" y="83.0" width="30.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.8" y="94.0">ja..</text>
</g>
<g>
<title>java/util/Formatter.format (105 samples, 2.60%)</title><rect x="534.8" y="99.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.8" y="110.0">ja..</text>
</g>
<g>
<title>java/lang/String.format (105 samples, 2.60%)</title><rect x="534.8" y="115.0" width="30.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.8" y="126.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 2.60%)</title><rect x="534.8" y="131.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.8" y="142.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (105 samples, 2.60%)</title><rect x="534.8" y="147.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.8" y="158.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 2.60%)</title><rect x="534.8" y="163.0" width="30.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.8" y="174.0">ja..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (105 samples, 2.60%)</title><rect x="534.8" y="179.0" width="30.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.8" y="190.0">pl..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (105 samples, 2.60%)</title><rect x="534.8" y="195.0" width="30.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.8" y="206.0">pl..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (105 samples, 2.60%)</title><rect x="534.8" y="211.0" width="30.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.8" y="222.0">pl..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (105 samples, 2.60%)</title><rect x="534.8" y="227.0" width="30.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.8" y="238.0">pl..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (105 samples, 2.60%)</title><rect x="534.8" y="243.0" width="30.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.8" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (105 samples, 2.60%)</title><rect x="534.8" y="259.0" width="30.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.8" y="270.0">jd..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (105 samples, 2.60%)</title><rect x="534.8" y="275.0" width="30.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.8" y="286.0">jd..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (105 samples, 2.60%)</title><rect x="534.8" y="291.0" width="30.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.8" y="302.0">ja..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (105 samples, 2.60%)</title><rect x="534.8" y="307.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.8" y="318.0">or..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (105 samples, 2.60%)</title><rect x="534.8" y="323.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.8" y="334.0">or..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (105 samples, 2.60%)</title><rect x="534.8" y="339.0" width="30.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.8" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (105 samples, 2.60%)</title><rect x="534.8" y="355.0" width="30.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.8" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (105 samples, 2.60%)</title><rect x="534.8" y="371.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.8" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (105 samples, 2.60%)</title><rect x="534.8" y="387.0" width="30.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.8" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (105 samples, 2.60%)</title><rect x="534.8" y="403.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.8" y="414.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.run (105 samples, 2.60%)</title><rect x="534.8" y="419.0" width="30.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.8" y="430.0">ja..</text>
</g>
<g>
<title>java/util/regex/Matcher.getTextLength (3 samples, 0.07%)</title><rect x="565.5" y="51.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.5" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="565.5" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="565.5" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.5" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="565.5" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.5" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="565.5" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="565.5" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="565.5" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="565.5" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="565.5" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.5" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="565.5" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.5" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="565.5" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="565.5" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.5" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="565.5" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="565.5" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="565.5" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="565.5" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.5" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="565.5" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.5" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="565.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.5" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="565.5" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="565.5" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="565.5" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="565.5" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="565.5" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="565.5" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="565.5" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.5" y="446.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (2 samples, 0.05%)</title><rect x="565.8" y="67.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.8" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="565.8" y="83.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.8" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (2 samples, 0.05%)</title><rect x="565.8" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.8" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="565.8" y="115.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.8" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="565.8" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.8" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="565.8" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="565.8" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="565.8" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="565.8" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="565.8" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.8" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="565.8" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.8" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="565.8" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.8" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="565.8" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="565.8" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="565.8" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="565.8" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="565.8" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.8" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="565.8" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.8" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="565.8" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.8" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="565.8" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="565.8" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="565.8" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="565.8" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="565.8" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="565.8" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="565.8" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.8" y="478.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.groupCount (9 samples, 0.22%)</title><rect x="566.4" y="51.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.4" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.start (9 samples, 0.22%)</title><rect x="566.4" y="67.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.4" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (9 samples, 0.22%)</title><rect x="566.4" y="83.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.4" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (9 samples, 0.22%)</title><rect x="566.4" y="99.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.4" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 0.22%)</title><rect x="566.4" y="115.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.4" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 0.22%)</title><rect x="566.4" y="131.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="566.4" y="147.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="566.4" y="163.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="566.4" y="179.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="566.4" y="195.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.4" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="566.4" y="211.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.4" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="566.4" y="227.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.4" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="566.4" y="243.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.4" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="566.4" y="259.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="566.4" y="275.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="566.4" y="291.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="566.4" y="307.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="566.4" y="323.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.4" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="566.4" y="339.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.4" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="566.4" y="355.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="566.4" y="371.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="566.4" y="387.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="566.4" y="403.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="566.4" y="419.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="566.4" y="435.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="566.4" y="451.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.4" y="462.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (168 samples, 4.16%)</title><rect x="569.0" y="51.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.0" y="62.0">java/..</text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (89 samples, 2.21%)</title><rect x="569.0" y="67.0" width="26.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.0" y="78.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (89 samples, 2.21%)</title><rect x="569.0" y="83.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.0" y="94.0">j..</text>
</g>
<g>
<title>java/util/Formatter.parse (89 samples, 2.21%)</title><rect x="569.0" y="99.0" width="26.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.0" y="110.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (89 samples, 2.21%)</title><rect x="569.0" y="115.0" width="26.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.0" y="126.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (89 samples, 2.21%)</title><rect x="569.0" y="131.0" width="26.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.0" y="142.0">j..</text>
</g>
<g>
<title>java/lang/String.format (89 samples, 2.21%)</title><rect x="569.0" y="147.0" width="26.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.0" y="158.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 2.21%)</title><rect x="569.0" y="163.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.0" y="174.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (89 samples, 2.21%)</title><rect x="569.0" y="179.0" width="26.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.0" y="190.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 2.21%)</title><rect x="569.0" y="195.0" width="26.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.0" y="206.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (89 samples, 2.21%)</title><rect x="569.0" y="211.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.0" y="222.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (89 samples, 2.21%)</title><rect x="569.0" y="227.0" width="26.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.0" y="238.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (89 samples, 2.21%)</title><rect x="569.0" y="243.0" width="26.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.0" y="254.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (89 samples, 2.21%)</title><rect x="569.0" y="259.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.0" y="270.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (89 samples, 2.21%)</title><rect x="569.0" y="275.0" width="26.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.0" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (89 samples, 2.21%)</title><rect x="569.0" y="291.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.0" y="302.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (89 samples, 2.21%)</title><rect x="569.0" y="307.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.0" y="318.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (89 samples, 2.21%)</title><rect x="569.0" y="323.0" width="26.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.0" y="334.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (89 samples, 2.21%)</title><rect x="569.0" y="339.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.0" y="350.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (89 samples, 2.21%)</title><rect x="569.0" y="355.0" width="26.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.0" y="366.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (89 samples, 2.21%)</title><rect x="569.0" y="371.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.0" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (89 samples, 2.21%)</title><rect x="569.0" y="387.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (89 samples, 2.21%)</title><rect x="569.0" y="403.0" width="26.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.0" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (89 samples, 2.21%)</title><rect x="569.0" y="419.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (89 samples, 2.21%)</title><rect x="569.0" y="435.0" width="26.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.0" y="446.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (89 samples, 2.21%)</title><rect x="569.0" y="451.0" width="26.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.0" y="462.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.find (79 samples, 1.96%)</title><rect x="595.0" y="67.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.0" y="78.0">j..</text>
</g>
<g>
<title>java/util/Formatter.parse (79 samples, 1.96%)</title><rect x="595.0" y="83.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.0" y="94.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (79 samples, 1.96%)</title><rect x="595.0" y="99.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.0" y="110.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (79 samples, 1.96%)</title><rect x="595.0" y="115.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.0" y="126.0">j..</text>
</g>
<g>
<title>java/lang/String.format (79 samples, 1.96%)</title><rect x="595.0" y="131.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.0" y="142.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 1.96%)</title><rect x="595.0" y="147.0" width="23.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.0" y="158.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (79 samples, 1.96%)</title><rect x="595.0" y="163.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.0" y="174.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 1.96%)</title><rect x="595.0" y="179.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.0" y="190.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (79 samples, 1.96%)</title><rect x="595.0" y="195.0" width="23.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.0" y="206.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (79 samples, 1.96%)</title><rect x="595.0" y="211.0" width="23.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.0" y="222.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (79 samples, 1.96%)</title><rect x="595.0" y="227.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.0" y="238.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (79 samples, 1.96%)</title><rect x="595.0" y="243.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.0" y="254.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (79 samples, 1.96%)</title><rect x="595.0" y="259.0" width="23.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.0" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (79 samples, 1.96%)</title><rect x="595.0" y="275.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.0" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (79 samples, 1.96%)</title><rect x="595.0" y="291.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.0" y="302.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (79 samples, 1.96%)</title><rect x="595.0" y="307.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.0" y="318.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (79 samples, 1.96%)</title><rect x="595.0" y="323.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.0" y="334.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (79 samples, 1.96%)</title><rect x="595.0" y="339.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.0" y="350.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (79 samples, 1.96%)</title><rect x="595.0" y="355.0" width="23.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.0" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (79 samples, 1.96%)</title><rect x="595.0" y="371.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.0" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (79 samples, 1.96%)</title><rect x="595.0" y="387.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (79 samples, 1.96%)</title><rect x="595.0" y="403.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.0" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (79 samples, 1.96%)</title><rect x="595.0" y="419.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.0" y="430.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (79 samples, 1.96%)</title><rect x="595.0" y="435.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.0" y="446.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.search (10 samples, 0.25%)</title><rect x="618.1" y="51.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.1" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (4 samples, 0.10%)</title><rect x="618.1" y="67.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.1" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (4 samples, 0.10%)</title><rect x="618.1" y="83.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.1" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="618.1" y="99.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.1" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="618.1" y="115.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="618.1" y="131.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="618.1" y="147.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="618.1" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="618.1" y="179.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.1" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="618.1" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.1" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="618.1" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="618.1" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="618.1" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="618.1" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="618.1" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="618.1" y="291.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.1" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="618.1" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.1" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="618.1" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.1" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="618.1" y="339.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="618.1" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="618.1" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="618.1" y="387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="618.1" y="403.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="618.1" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="618.1" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.1" y="446.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.start (5 samples, 0.12%)</title><rect x="619.3" y="67.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (5 samples, 0.12%)</title><rect x="619.3" y="83.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.3" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="619.3" y="99.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.3" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="619.3" y="115.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.3" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="619.3" y="131.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="619.3" y="147.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="619.3" y="163.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="619.3" y="179.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="619.3" y="195.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="619.3" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.3" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="619.3" y="227.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.3" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="619.3" y="243.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.3" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="619.3" y="259.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="619.3" y="275.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="619.3" y="291.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="619.3" y="307.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.3" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="619.3" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.3" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="619.3" y="339.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.3" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="619.3" y="355.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="619.3" y="371.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="619.3" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="619.3" y="403.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="619.3" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="619.3" y="435.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="619.3" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="620.8" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="620.8" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="620.8" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="620.8" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.8" y="126.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="620.8" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.8" y="142.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="620.8" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="158.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="620.8" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="620.8" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="620.8" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="620.8" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="620.8" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="620.8" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.8" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="620.8" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.8" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.start (33 samples, 0.82%)</title><rect x="621.1" y="51.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.1" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (29 samples, 0.72%)</title><rect x="621.1" y="67.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.1" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (29 samples, 0.72%)</title><rect x="621.1" y="83.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.1" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (29 samples, 0.72%)</title><rect x="621.1" y="99.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.1" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.format (29 samples, 0.72%)</title><rect x="621.1" y="115.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (29 samples, 0.72%)</title><rect x="621.1" y="131.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.72%)</title><rect x="621.1" y="147.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (29 samples, 0.72%)</title><rect x="621.1" y="163.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.72%)</title><rect x="621.1" y="179.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.1" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (29 samples, 0.72%)</title><rect x="621.1" y="195.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.1" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (29 samples, 0.72%)</title><rect x="621.1" y="211.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.1" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (29 samples, 0.72%)</title><rect x="621.1" y="227.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (29 samples, 0.72%)</title><rect x="621.1" y="243.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (29 samples, 0.72%)</title><rect x="621.1" y="259.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (29 samples, 0.72%)</title><rect x="621.1" y="275.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (29 samples, 0.72%)</title><rect x="621.1" y="291.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.1" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (29 samples, 0.72%)</title><rect x="621.1" y="307.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.1" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (29 samples, 0.72%)</title><rect x="621.1" y="323.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.1" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (29 samples, 0.72%)</title><rect x="621.1" y="339.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (29 samples, 0.72%)</title><rect x="621.1" y="355.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (29 samples, 0.72%)</title><rect x="621.1" y="371.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (29 samples, 0.72%)</title><rect x="621.1" y="387.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (29 samples, 0.72%)</title><rect x="621.1" y="403.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (29 samples, 0.72%)</title><rect x="621.1" y="419.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (29 samples, 0.72%)</title><rect x="621.1" y="435.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.1" y="446.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (4 samples, 0.10%)</title><rect x="629.5" y="67.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.5" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="629.5" y="83.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.5" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="629.5" y="99.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="629.5" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="629.5" y="131.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="629.5" y="147.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="629.5" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.5" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="629.5" y="179.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.5" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="629.5" y="195.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.5" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="629.5" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.5" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="629.5" y="227.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="629.5" y="243.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="629.5" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="629.5" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.5" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="629.5" y="291.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.5" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="629.5" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.5" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="629.5" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="629.5" y="339.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="629.5" y="355.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="629.5" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="629.5" y="387.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="629.5" y="403.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="629.5" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$$Lambda$19.0x800000026.is (179 samples, 4.44%)</title><rect x="630.7" y="51.0" width="52.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.7" y="62.0">java/..</text>
</g>
<g>
<title>java/lang/String.charAt (170 samples, 4.21%)</title><rect x="630.7" y="67.0" width="49.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.7" y="78.0">java/..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (170 samples, 4.21%)</title><rect x="630.7" y="83.0" width="49.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.7" y="94.0">java/..</text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (170 samples, 4.21%)</title><rect x="630.7" y="99.0" width="49.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.7" y="110.0">java/..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (170 samples, 4.21%)</title><rect x="630.7" y="115.0" width="49.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.7" y="126.0">java/..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (170 samples, 4.21%)</title><rect x="630.7" y="131.0" width="49.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.7" y="142.0">java/..</text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (170 samples, 4.21%)</title><rect x="630.7" y="147.0" width="49.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.7" y="158.0">java/..</text>
</g>
<g>
<title>java/util/regex/Matcher.search (170 samples, 4.21%)</title><rect x="630.7" y="163.0" width="49.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.7" y="174.0">java/..</text>
</g>
<g>
<title>java/util/regex/Matcher.find (170 samples, 4.21%)</title><rect x="630.7" y="179.0" width="49.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.7" y="190.0">java/..</text>
</g>
<g>
<title>java/util/Formatter.parse (170 samples, 4.21%)</title><rect x="630.7" y="195.0" width="49.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.7" y="206.0">java/..</text>
</g>
<g>
<title>java/util/Formatter.format (170 samples, 4.21%)</title><rect x="630.7" y="211.0" width="49.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.7" y="222.0">java/..</text>
</g>
<g>
<title>java/util/Formatter.format (170 samples, 4.21%)</title><rect x="630.7" y="227.0" width="49.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.7" y="238.0">java/..</text>
</g>
<g>
<title>java/lang/String.format (170 samples, 4.21%)</title><rect x="630.7" y="243.0" width="49.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.7" y="254.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (170 samples, 4.21%)</title><rect x="630.7" y="259.0" width="49.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.7" y="270.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (170 samples, 4.21%)</title><rect x="630.7" y="275.0" width="49.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.7" y="286.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (170 samples, 4.21%)</title><rect x="630.7" y="291.0" width="49.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.7" y="302.0">java/..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (170 samples, 4.21%)</title><rect x="630.7" y="307.0" width="49.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.7" y="318.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (170 samples, 4.21%)</title><rect x="630.7" y="323.0" width="49.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.7" y="334.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (170 samples, 4.21%)</title><rect x="630.7" y="339.0" width="49.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.7" y="350.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (170 samples, 4.21%)</title><rect x="630.7" y="355.0" width="49.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.7" y="366.0">pl/wy..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (170 samples, 4.21%)</title><rect x="630.7" y="371.0" width="49.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.7" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (170 samples, 4.21%)</title><rect x="630.7" y="387.0" width="49.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.7" y="398.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (170 samples, 4.21%)</title><rect x="630.7" y="403.0" width="49.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.7" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (170 samples, 4.21%)</title><rect x="630.7" y="419.0" width="49.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.7" y="430.0">java/..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (170 samples, 4.21%)</title><rect x="630.7" y="435.0" width="49.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.7" y="446.0">org/o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (170 samples, 4.21%)</title><rect x="630.7" y="451.0" width="49.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.7" y="462.0">org/o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (170 samples, 4.21%)</title><rect x="630.7" y="467.0" width="49.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.7" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (170 samples, 4.21%)</title><rect x="630.7" y="483.0" width="49.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.7" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (170 samples, 4.21%)</title><rect x="630.7" y="499.0" width="49.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.7" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (170 samples, 4.21%)</title><rect x="630.7" y="515.0" width="49.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.7" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (170 samples, 4.21%)</title><rect x="630.7" y="531.0" width="49.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.7" y="542.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.run (170 samples, 4.21%)</title><rect x="630.7" y="547.0" width="49.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.7" y="558.0">java/..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="680.4" y="67.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.4" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (9 samples, 0.22%)</title><rect x="680.4" y="83.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.4" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (9 samples, 0.22%)</title><rect x="680.4" y="99.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.4" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="680.4" y="115.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.4" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="680.4" y="131.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.4" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (9 samples, 0.22%)</title><rect x="680.4" y="147.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.4" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (9 samples, 0.22%)</title><rect x="680.4" y="163.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.4" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (9 samples, 0.22%)</title><rect x="680.4" y="179.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.4" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (9 samples, 0.22%)</title><rect x="680.4" y="195.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.4" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="680.4" y="211.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.4" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="680.4" y="227.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.4" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (9 samples, 0.22%)</title><rect x="680.4" y="243.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.4" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (9 samples, 0.22%)</title><rect x="680.4" y="259.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.4" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (9 samples, 0.22%)</title><rect x="680.4" y="275.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (9 samples, 0.22%)</title><rect x="680.4" y="291.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.4" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (9 samples, 0.22%)</title><rect x="680.4" y="307.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.4" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 0.22%)</title><rect x="680.4" y="323.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.4" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 0.22%)</title><rect x="680.4" y="339.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="680.4" y="355.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="680.4" y="371.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="680.4" y="387.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="680.4" y="403.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.4" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="680.4" y="419.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.4" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="680.4" y="435.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.4" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="680.4" y="451.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.4" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="680.4" y="467.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="680.4" y="483.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="680.4" y="499.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="680.4" y="515.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.4" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="680.4" y="531.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="680.4" y="547.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.4" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="680.4" y="563.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="680.4" y="579.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="680.4" y="595.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="680.4" y="611.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="680.4" y="627.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="680.4" y="643.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="680.4" y="659.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.4" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BitClass.is (15 samples, 0.37%)</title><rect x="683.1" y="51.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.1" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="683.1" y="67.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.1" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="683.1" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.1" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="683.1" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.1" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="683.1" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.1" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="683.1" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.1" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="683.1" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.1" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="683.1" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.1" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="683.1" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.1" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="683.1" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.1" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="683.1" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.1" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="683.1" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.1" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="683.1" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.1" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="683.1" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.1" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="683.1" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.1" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="683.1" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.1" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="683.1" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.1" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="683.1" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.1" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="683.1" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="683.1" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="683.1" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="683.1" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="683.1" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.1" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="683.1" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.1" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="683.1" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.1" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="683.1" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.1" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="683.1" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="683.1" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="683.1" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="683.1" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="683.1" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.1" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="683.1" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.1" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="683.1" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="683.1" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="683.1" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="683.1" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="683.1" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="683.1" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="683.1" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.1" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.12%)</title><rect x="683.4" y="67.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.4" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="683.4" y="83.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="683.4" y="99.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.4" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="683.4" y="115.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.4" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (5 samples, 0.12%)</title><rect x="683.4" y="131.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.4" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.12%)</title><rect x="683.4" y="147.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.4" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (5 samples, 0.12%)</title><rect x="683.4" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.4" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="683.4" y="179.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.4" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="683.4" y="195.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.4" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="683.4" y="211.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="683.4" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="683.4" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="683.4" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="683.4" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="683.4" y="291.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.4" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="683.4" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="683.4" y="323.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.4" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="683.4" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="683.4" y="355.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="683.4" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="683.4" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="683.4" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.4" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="683.4" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.4" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="683.4" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="683.4" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="683.4" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="683.4" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="683.4" y="499.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="683.4" y="515.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="683.4" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.4" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="684.8" y="67.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.8" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (9 samples, 0.22%)</title><rect x="684.8" y="83.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.8" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (9 samples, 0.22%)</title><rect x="684.8" y="99.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.8" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="684.8" y="115.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.8" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="684.8" y="131.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.8" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="684.8" y="147.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (9 samples, 0.22%)</title><rect x="684.8" y="163.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (9 samples, 0.22%)</title><rect x="684.8" y="179.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.8" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (9 samples, 0.22%)</title><rect x="684.8" y="195.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (9 samples, 0.22%)</title><rect x="684.8" y="211.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.8" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="684.8" y="227.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.8" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.22%)</title><rect x="684.8" y="243.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.8" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (9 samples, 0.22%)</title><rect x="684.8" y="259.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.8" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (9 samples, 0.22%)</title><rect x="684.8" y="275.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.8" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (9 samples, 0.22%)</title><rect x="684.8" y="291.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.8" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (9 samples, 0.22%)</title><rect x="684.8" y="307.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.8" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (9 samples, 0.22%)</title><rect x="684.8" y="323.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.8" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 0.22%)</title><rect x="684.8" y="339.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.8" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 0.22%)</title><rect x="684.8" y="355.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="684.8" y="371.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="684.8" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="684.8" y="403.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="684.8" y="419.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.8" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="684.8" y="435.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.8" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="684.8" y="451.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.8" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="684.8" y="467.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.8" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="684.8" y="483.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="684.8" y="499.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="684.8" y="515.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="684.8" y="531.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.8" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="684.8" y="547.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.8" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="684.8" y="563.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.8" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="684.8" y="579.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="684.8" y="595.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="684.8" y="611.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="684.8" y="627.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="684.8" y="643.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="684.8" y="659.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="684.8" y="675.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.8" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$22.0x80000002c.is (12 samples, 0.30%)</title><rect x="687.5" y="51.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.5" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (3 samples, 0.07%)</title><rect x="687.5" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.5" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$22.0x80000002c.is (3 samples, 0.07%)</title><rect x="687.5" y="83.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.5" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="687.5" y="99.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.5" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="687.5" y="115.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.5" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="687.5" y="131.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.5" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="687.5" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.5" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="687.5" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.5" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (3 samples, 0.07%)</title><rect x="687.5" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.5" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (3 samples, 0.07%)</title><rect x="687.5" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.5" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.07%)</title><rect x="687.5" y="211.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.5" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="687.5" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.5" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="687.5" y="243.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.5" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="687.5" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.5" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="687.5" y="275.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.5" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="687.5" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.5" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="687.5" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.5" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="687.5" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.5" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="687.5" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.5" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="687.5" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.5" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="687.5" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="687.5" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="687.5" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="687.5" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="687.5" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.5" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="687.5" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.5" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="687.5" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.5" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="687.5" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.5" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="687.5" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="687.5" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="687.5" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="687.5" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="687.5" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.5" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="687.5" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.5" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="687.5" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="687.5" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="687.5" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="687.5" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="687.5" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="687.5" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="687.5" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.5" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="688.3" y="67.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.3" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="688.3" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.3" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="688.3" y="99.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.3" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="688.3" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.3" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="688.3" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="688.3" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="688.3" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="688.3" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="688.3" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="688.3" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="688.3" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="688.3" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="688.3" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.3" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="688.3" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.3" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="688.3" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="688.3" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.3" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="688.3" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.3" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="688.3" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="688.3" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="688.3" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="688.3" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="688.3" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.3" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="688.3" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.3" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="688.3" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.3" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="688.3" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="688.3" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="688.3" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="688.3" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="688.3" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.3" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="688.3" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.3" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="688.3" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.3" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="688.3" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="688.3" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="688.3" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="688.3" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="688.3" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="688.3" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="688.3" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="688.6" y="67.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.6" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (8 samples, 0.20%)</title><rect x="688.6" y="83.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.6" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (8 samples, 0.20%)</title><rect x="688.6" y="99.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.6" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="688.6" y="115.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.6" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="688.6" y="131.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.6" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="688.6" y="147.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.6" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (8 samples, 0.20%)</title><rect x="688.6" y="163.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (8 samples, 0.20%)</title><rect x="688.6" y="179.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.6" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (8 samples, 0.20%)</title><rect x="688.6" y="195.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.6" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (8 samples, 0.20%)</title><rect x="688.6" y="211.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.6" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="688.6" y="227.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="688.6" y="243.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.6" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (8 samples, 0.20%)</title><rect x="688.6" y="259.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.6" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (8 samples, 0.20%)</title><rect x="688.6" y="275.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (8 samples, 0.20%)</title><rect x="688.6" y="291.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.6" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (8 samples, 0.20%)</title><rect x="688.6" y="307.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (8 samples, 0.20%)</title><rect x="688.6" y="323.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.6" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.20%)</title><rect x="688.6" y="339.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.6" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.20%)</title><rect x="688.6" y="355.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="688.6" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="688.6" y="387.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="688.6" y="403.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="688.6" y="419.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="688.6" y="435.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.6" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="688.6" y="451.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.6" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="688.6" y="467.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.6" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="688.6" y="483.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="688.6" y="499.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="688.6" y="515.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="688.6" y="531.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.6" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="688.6" y="547.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.6" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="688.6" y="563.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.6" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="688.6" y="579.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="688.6" y="595.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="688.6" y="611.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="688.6" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="688.6" y="643.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="688.6" y="659.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="688.6" y="675.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.6" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (2 samples, 0.05%)</title><rect x="691.0" y="51.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.0" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$22.0x80000002c.is (2 samples, 0.05%)</title><rect x="691.0" y="67.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.0" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (2 samples, 0.05%)</title><rect x="691.0" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (2 samples, 0.05%)</title><rect x="691.0" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.0" y="115.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.0" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.0" y="131.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.0" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.0" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.0" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (2 samples, 0.05%)</title><rect x="691.0" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.0" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (2 samples, 0.05%)</title><rect x="691.0" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.0" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (2 samples, 0.05%)</title><rect x="691.0" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.0" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (2 samples, 0.05%)</title><rect x="691.0" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.0" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.0" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.0" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.0" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.0" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (2 samples, 0.05%)</title><rect x="691.0" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.0" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (2 samples, 0.05%)</title><rect x="691.0" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.0" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (2 samples, 0.05%)</title><rect x="691.0" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.0" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="691.0" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.0" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="691.0" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.0" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="691.0" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.0" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="691.0" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="691.0" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="691.0" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="691.0" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="691.0" y="419.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.0" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="691.0" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.0" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="691.0" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.0" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="691.0" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.0" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="691.0" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="691.0" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="691.0" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="691.0" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.0" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="691.0" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.0" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="691.0" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.0" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="691.0" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="691.0" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="691.0" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="691.0" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="691.0" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="691.0" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="691.0" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.0" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (55 samples, 1.36%)</title><rect x="691.6" y="51.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.6" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (52 samples, 1.29%)</title><rect x="691.6" y="67.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.6" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (52 samples, 1.29%)</title><rect x="691.6" y="83.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.6" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (25 samples, 0.62%)</title><rect x="691.6" y="99.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.6" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="691.6" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.6" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="691.6" y="131.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.6" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.6" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.6" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (2 samples, 0.05%)</title><rect x="691.6" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.6" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (2 samples, 0.05%)</title><rect x="691.6" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.6" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (2 samples, 0.05%)</title><rect x="691.6" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.6" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (2 samples, 0.05%)</title><rect x="691.6" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.6" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.6" y="227.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.6" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="691.6" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.6" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (2 samples, 0.05%)</title><rect x="691.6" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.6" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (2 samples, 0.05%)</title><rect x="691.6" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.6" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (2 samples, 0.05%)</title><rect x="691.6" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.6" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="691.6" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.6" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="691.6" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.6" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="691.6" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.6" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="691.6" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="691.6" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="691.6" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="691.6" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="691.6" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.6" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="691.6" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.6" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="691.6" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.6" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="691.6" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.6" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="691.6" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="691.6" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="691.6" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="691.6" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.6" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="691.6" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.6" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="691.6" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.6" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="691.6" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="691.6" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="691.6" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="691.6" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="691.6" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="691.6" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="691.6" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.6" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="692.1" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.1" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="692.1" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.1" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="692.1" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.1" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="692.1" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.1" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="692.1" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="692.1" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.1" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="692.1" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.1" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="692.1" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="692.1" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.1" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="692.1" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.1" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="692.1" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.1" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="692.1" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="692.1" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="692.1" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="692.1" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="692.1" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="692.1" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="692.1" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.1" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="692.1" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.1" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="692.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="692.1" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="692.1" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="692.1" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="692.1" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="692.1" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.1" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="692.1" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="692.1" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="692.1" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="692.1" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="692.1" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="692.1" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="692.1" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="692.1" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.1" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (22 samples, 0.55%)</title><rect x="692.4" y="115.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.4" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (22 samples, 0.55%)</title><rect x="692.4" y="131.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.4" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (22 samples, 0.55%)</title><rect x="692.4" y="147.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (22 samples, 0.55%)</title><rect x="692.4" y="163.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.4" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (22 samples, 0.55%)</title><rect x="692.4" y="179.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.4" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (22 samples, 0.55%)</title><rect x="692.4" y="195.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (22 samples, 0.55%)</title><rect x="692.4" y="211.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.55%)</title><rect x="692.4" y="227.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (22 samples, 0.55%)</title><rect x="692.4" y="243.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.55%)</title><rect x="692.4" y="259.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (22 samples, 0.55%)</title><rect x="692.4" y="275.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (22 samples, 0.55%)</title><rect x="692.4" y="291.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.4" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (22 samples, 0.55%)</title><rect x="692.4" y="307.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (22 samples, 0.55%)</title><rect x="692.4" y="323.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (22 samples, 0.55%)</title><rect x="692.4" y="339.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (22 samples, 0.55%)</title><rect x="692.4" y="355.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (22 samples, 0.55%)</title><rect x="692.4" y="371.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (22 samples, 0.55%)</title><rect x="692.4" y="387.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.4" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (22 samples, 0.55%)</title><rect x="692.4" y="403.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.4" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (22 samples, 0.55%)</title><rect x="692.4" y="419.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (22 samples, 0.55%)</title><rect x="692.4" y="435.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (22 samples, 0.55%)</title><rect x="692.4" y="451.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (22 samples, 0.55%)</title><rect x="692.4" y="467.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22 samples, 0.55%)</title><rect x="692.4" y="483.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22 samples, 0.55%)</title><rect x="692.4" y="499.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 0.55%)</title><rect x="692.4" y="515.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.4" y="526.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (27 samples, 0.67%)</title><rect x="698.9" y="99.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.9" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (26 samples, 0.64%)</title><rect x="698.9" y="115.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.9" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (26 samples, 0.64%)</title><rect x="698.9" y="131.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.9" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (26 samples, 0.64%)</title><rect x="698.9" y="147.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.9" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (26 samples, 0.64%)</title><rect x="698.9" y="163.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (26 samples, 0.64%)</title><rect x="698.9" y="179.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.9" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (26 samples, 0.64%)</title><rect x="698.9" y="195.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.9" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (26 samples, 0.64%)</title><rect x="698.9" y="211.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (26 samples, 0.64%)</title><rect x="698.9" y="227.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.64%)</title><rect x="698.9" y="243.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (26 samples, 0.64%)</title><rect x="698.9" y="259.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.64%)</title><rect x="698.9" y="275.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (26 samples, 0.64%)</title><rect x="698.9" y="291.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.9" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (26 samples, 0.64%)</title><rect x="698.9" y="307.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (26 samples, 0.64%)</title><rect x="698.9" y="323.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (26 samples, 0.64%)</title><rect x="698.9" y="339.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (26 samples, 0.64%)</title><rect x="698.9" y="355.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (26 samples, 0.64%)</title><rect x="698.9" y="371.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (26 samples, 0.64%)</title><rect x="698.9" y="387.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (26 samples, 0.64%)</title><rect x="698.9" y="403.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.9" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (26 samples, 0.64%)</title><rect x="698.9" y="419.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.9" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (26 samples, 0.64%)</title><rect x="698.9" y="435.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (26 samples, 0.64%)</title><rect x="698.9" y="451.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (26 samples, 0.64%)</title><rect x="698.9" y="467.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (26 samples, 0.64%)</title><rect x="698.9" y="483.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (26 samples, 0.64%)</title><rect x="698.9" y="499.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (26 samples, 0.64%)</title><rect x="698.9" y="515.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (26 samples, 0.64%)</title><rect x="698.9" y="531.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.9" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="706.5" y="115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.5" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="706.5" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.5" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="706.5" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.5" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="706.5" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="709.5" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="706.5" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.5" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="706.5" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.5" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="706.5" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.5" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="706.5" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.5" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="706.5" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.5" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="706.5" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.5" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="706.5" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.5" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="706.5" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.5" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="706.5" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.5" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="706.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="706.5" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="706.5" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="706.5" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="706.5" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.5" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="706.5" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.5" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="706.5" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.5" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="706.5" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.5" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="706.5" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="706.5" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="706.5" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="706.5" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="706.5" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.5" y="526.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="706.5" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.5" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="706.5" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="706.5" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="706.5" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="706.5" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="706.5" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="706.5" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="706.5" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.5" y="654.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="706.8" y="67.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.8" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="706.8" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.8" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="706.8" y="99.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.8" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="706.8" y="115.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.8" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="706.8" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.8" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="706.8" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="706.8" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="706.8" y="179.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="706.8" y="195.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="706.8" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.8" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="706.8" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.8" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="706.8" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.8" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="706.8" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="706.8" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="706.8" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="706.8" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="706.8" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.8" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="706.8" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.8" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="706.8" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.8" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="706.8" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="706.8" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="706.8" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="706.8" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="706.8" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="706.8" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="706.8" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.8" y="478.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (230 samples, 5.70%)</title><rect x="707.6" y="51.0" width="67.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.6" y="62.0">java/ut..</text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (230 samples, 5.70%)</title><rect x="707.6" y="67.0" width="67.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.6" y="78.0">java/ut..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (230 samples, 5.70%)</title><rect x="707.6" y="83.0" width="67.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.6" y="94.0">java/ut..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (208 samples, 5.16%)</title><rect x="707.6" y="99.0" width="60.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.6" y="110.0">java/u..</text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (200 samples, 4.96%)</title><rect x="707.6" y="115.0" width="58.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.6" y="126.0">java/u..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (200 samples, 4.96%)</title><rect x="707.6" y="131.0" width="58.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.6" y="142.0">java/u..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (200 samples, 4.96%)</title><rect x="707.6" y="147.0" width="58.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.6" y="158.0">java/u..</text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (200 samples, 4.96%)</title><rect x="707.6" y="163.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.6" y="174.0">java/u..</text>
</g>
<g>
<title>java/util/regex/Matcher.search (200 samples, 4.96%)</title><rect x="707.6" y="179.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.6" y="190.0">java/u..</text>
</g>
<g>
<title>java/util/regex/Matcher.find (200 samples, 4.96%)</title><rect x="707.6" y="195.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.6" y="206.0">java/u..</text>
</g>
<g>
<title>java/util/Formatter.parse (200 samples, 4.96%)</title><rect x="707.6" y="211.0" width="58.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.6" y="222.0">java/u..</text>
</g>
<g>
<title>java/util/Formatter.format (200 samples, 4.96%)</title><rect x="707.6" y="227.0" width="58.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.6" y="238.0">java/u..</text>
</g>
<g>
<title>java/util/Formatter.format (200 samples, 4.96%)</title><rect x="707.6" y="243.0" width="58.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.6" y="254.0">java/u..</text>
</g>
<g>
<title>java/lang/String.format (200 samples, 4.96%)</title><rect x="707.6" y="259.0" width="58.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.6" y="270.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (200 samples, 4.96%)</title><rect x="707.6" y="275.0" width="58.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.6" y="286.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (200 samples, 4.96%)</title><rect x="707.6" y="291.0" width="58.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.6" y="302.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (200 samples, 4.96%)</title><rect x="707.6" y="307.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.6" y="318.0">java/l..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (200 samples, 4.96%)</title><rect x="707.6" y="323.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.6" y="334.0">pl/wyh..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (200 samples, 4.96%)</title><rect x="707.6" y="339.0" width="58.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.6" y="350.0">pl/wyh..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (200 samples, 4.96%)</title><rect x="707.6" y="355.0" width="58.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.6" y="366.0">pl/wyh..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (200 samples, 4.96%)</title><rect x="707.6" y="371.0" width="58.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.6" y="382.0">pl/wyh..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (200 samples, 4.96%)</title><rect x="707.6" y="387.0" width="58.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.6" y="398.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (200 samples, 4.96%)</title><rect x="707.6" y="403.0" width="58.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.6" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (200 samples, 4.96%)</title><rect x="707.6" y="419.0" width="58.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.6" y="430.0">jdk/in..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (200 samples, 4.96%)</title><rect x="707.6" y="435.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.6" y="446.0">java/l..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (200 samples, 4.96%)</title><rect x="707.6" y="451.0" width="58.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.6" y="462.0">org/op..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (200 samples, 4.96%)</title><rect x="707.6" y="467.0" width="58.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.6" y="478.0">org/op..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (200 samples, 4.96%)</title><rect x="707.6" y="483.0" width="58.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.6" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (200 samples, 4.96%)</title><rect x="707.6" y="499.0" width="58.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.6" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (200 samples, 4.96%)</title><rect x="707.6" y="515.0" width="58.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.6" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (200 samples, 4.96%)</title><rect x="707.6" y="531.0" width="58.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.6" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (200 samples, 4.96%)</title><rect x="707.6" y="547.0" width="58.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.6" y="558.0">java/u..</text>
</g>
<g>
<title>java/lang/Thread.run (200 samples, 4.96%)</title><rect x="707.6" y="563.0" width="58.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.6" y="574.0">java/l..</text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (8 samples, 0.20%)</title><rect x="766.1" y="115.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.1" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (8 samples, 0.20%)</title><rect x="766.1" y="131.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.1" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (8 samples, 0.20%)</title><rect x="766.1" y="147.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.1" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (8 samples, 0.20%)</title><rect x="766.1" y="163.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.1" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.20%)</title><rect x="766.1" y="179.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.1" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.20%)</title><rect x="766.1" y="195.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="766.1" y="211.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="766.1" y="227.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="766.1" y="243.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="766.1" y="259.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.1" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="766.1" y="275.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.1" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="766.1" y="291.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.1" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="766.1" y="307.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.1" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="766.1" y="323.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="766.1" y="339.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="766.1" y="355.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="766.1" y="371.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.1" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="766.1" y="387.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.1" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="766.1" y="403.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.1" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="766.1" y="419.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="766.1" y="435.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="766.1" y="451.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="766.1" y="467.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="766.1" y="483.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="766.1" y="499.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="766.1" y="515.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="526.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (22 samples, 0.55%)</title><rect x="768.5" y="99.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.5" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (22 samples, 0.55%)</title><rect x="768.5" y="115.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.5" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (8 samples, 0.20%)</title><rect x="768.5" y="131.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.5" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="768.5" y="147.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.5" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="768.5" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.5" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="768.5" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.5" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (3 samples, 0.07%)</title><rect x="768.5" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.5" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (3 samples, 0.07%)</title><rect x="768.5" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.5" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.07%)</title><rect x="768.5" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.5" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="768.5" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.5" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="768.5" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.5" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="768.5" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.5" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="768.5" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.5" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="768.5" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.5" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="768.5" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.5" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="768.5" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.5" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="768.5" y="355.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.5" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="768.5" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.5" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="768.5" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="768.5" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="768.5" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="768.5" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="768.5" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.5" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="768.5" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.5" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="768.5" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.5" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="768.5" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.5" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="768.5" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="768.5" y="531.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="768.5" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="768.5" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.5" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="768.5" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.5" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="768.5" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.5" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="768.5" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="768.5" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="768.5" y="643.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="768.5" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="768.5" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="768.5" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="768.5" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.5" y="718.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (5 samples, 0.12%)</title><rect x="769.4" y="163.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.4" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (5 samples, 0.12%)</title><rect x="769.4" y="179.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.4" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.12%)</title><rect x="769.4" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.4" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="769.4" y="211.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.4" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="769.4" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.4" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="769.4" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.4" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="769.4" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.4" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (5 samples, 0.12%)</title><rect x="769.4" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.4" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.12%)</title><rect x="769.4" y="291.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.4" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (5 samples, 0.12%)</title><rect x="769.4" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.4" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="769.4" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.4" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="769.4" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.4" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="769.4" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="769.4" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="769.4" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="769.4" y="403.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="769.4" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.4" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="769.4" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.4" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="769.4" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.4" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="769.4" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.4" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="769.4" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="769.4" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="769.4" y="515.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="769.4" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.4" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="769.4" y="547.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.4" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="769.4" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.4" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="769.4" y="579.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="769.4" y="595.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="769.4" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="769.4" y="627.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="769.4" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="769.4" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="769.4" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.4" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (14 samples, 0.35%)</title><rect x="770.8" y="131.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.8" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (14 samples, 0.35%)</title><rect x="770.8" y="147.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (14 samples, 0.35%)</title><rect x="770.8" y="163.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.8" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (14 samples, 0.35%)</title><rect x="770.8" y="179.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.8" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (14 samples, 0.35%)</title><rect x="770.8" y="195.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.8" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (14 samples, 0.35%)</title><rect x="770.8" y="211.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (14 samples, 0.35%)</title><rect x="770.8" y="227.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.35%)</title><rect x="770.8" y="243.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (14 samples, 0.35%)</title><rect x="770.8" y="259.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.35%)</title><rect x="770.8" y="275.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (14 samples, 0.35%)</title><rect x="770.8" y="291.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.8" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (14 samples, 0.35%)</title><rect x="770.8" y="307.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (14 samples, 0.35%)</title><rect x="770.8" y="323.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (14 samples, 0.35%)</title><rect x="770.8" y="339.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (14 samples, 0.35%)</title><rect x="770.8" y="355.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="770.8" y="371.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="770.8" y="387.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.8" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.35%)</title><rect x="770.8" y="403.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.8" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="770.8" y="419.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.8" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="770.8" y="435.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="770.8" y="451.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (14 samples, 0.35%)</title><rect x="770.8" y="467.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="770.8" y="483.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.35%)</title><rect x="770.8" y="499.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.35%)</title><rect x="770.8" y="515.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.35%)</title><rect x="770.8" y="531.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.8" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (154 samples, 3.82%)</title><rect x="774.9" y="51.0" width="45.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.9" y="62.0">java..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (45 samples, 1.12%)</title><rect x="774.9" y="67.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (30 samples, 0.74%)</title><rect x="774.9" y="83.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.9" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (30 samples, 0.74%)</title><rect x="774.9" y="99.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.9" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (25 samples, 0.62%)</title><rect x="774.9" y="115.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (22 samples, 0.55%)</title><rect x="774.9" y="131.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.9" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (22 samples, 0.55%)</title><rect x="774.9" y="147.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.9" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (17 samples, 0.42%)</title><rect x="774.9" y="163.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.9" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="774.9" y="179.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.9" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (10 samples, 0.25%)</title><rect x="774.9" y="195.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.9" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (10 samples, 0.25%)</title><rect x="774.9" y="211.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.9" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (10 samples, 0.25%)</title><rect x="774.9" y="227.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.9" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (10 samples, 0.25%)</title><rect x="774.9" y="243.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.9" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="774.9" y="259.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.9" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="774.9" y="275.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.9" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (10 samples, 0.25%)</title><rect x="774.9" y="291.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.9" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (10 samples, 0.25%)</title><rect x="774.9" y="307.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.9" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (10 samples, 0.25%)</title><rect x="774.9" y="323.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.9" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (10 samples, 0.25%)</title><rect x="774.9" y="339.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.9" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (10 samples, 0.25%)</title><rect x="774.9" y="355.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.9" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (10 samples, 0.25%)</title><rect x="774.9" y="371.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (10 samples, 0.25%)</title><rect x="774.9" y="387.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.format (10 samples, 0.25%)</title><rect x="774.9" y="403.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.25%)</title><rect x="774.9" y="419.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (10 samples, 0.25%)</title><rect x="774.9" y="435.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.25%)</title><rect x="774.9" y="451.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.9" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (10 samples, 0.25%)</title><rect x="774.9" y="467.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.9" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (10 samples, 0.25%)</title><rect x="774.9" y="483.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.9" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (10 samples, 0.25%)</title><rect x="774.9" y="499.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.9" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (10 samples, 0.25%)</title><rect x="774.9" y="515.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (10 samples, 0.25%)</title><rect x="774.9" y="531.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="774.9" y="547.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="774.9" y="563.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.9" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.25%)</title><rect x="774.9" y="579.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.9" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="774.9" y="595.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.9" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="774.9" y="611.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="774.9" y="627.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (10 samples, 0.25%)</title><rect x="774.9" y="643.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="774.9" y="659.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.25%)</title><rect x="774.9" y="675.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.25%)</title><rect x="774.9" y="691.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.25%)</title><rect x="774.9" y="707.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.9" y="718.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (7 samples, 0.17%)</title><rect x="777.8" y="179.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.8" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (7 samples, 0.17%)</title><rect x="777.8" y="195.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (7 samples, 0.17%)</title><rect x="777.8" y="211.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.8" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (7 samples, 0.17%)</title><rect x="777.8" y="227.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.8" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (7 samples, 0.17%)</title><rect x="777.8" y="243.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.8" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (7 samples, 0.17%)</title><rect x="777.8" y="259.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.8" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (7 samples, 0.17%)</title><rect x="777.8" y="275.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.8" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (7 samples, 0.17%)</title><rect x="777.8" y="291.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.8" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (7 samples, 0.17%)</title><rect x="777.8" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.8" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (7 samples, 0.17%)</title><rect x="777.8" y="323.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.8" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (7 samples, 0.17%)</title><rect x="777.8" y="339.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.8" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="777.8" y="355.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.8" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="777.8" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="777.8" y="387.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="777.8" y="403.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="777.8" y="419.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="777.8" y="435.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.8" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="777.8" y="451.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.8" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="777.8" y="467.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.8" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="777.8" y="483.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.8" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="777.8" y="499.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="777.8" y="515.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="777.8" y="531.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="777.8" y="547.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.8" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="777.8" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.8" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="777.8" y="579.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.8" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="777.8" y="595.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="777.8" y="611.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="777.8" y="627.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="777.8" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="777.8" y="659.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="777.8" y="675.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="777.8" y="691.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.8" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (5 samples, 0.12%)</title><rect x="779.9" y="163.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.9" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (5 samples, 0.12%)</title><rect x="779.9" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.9" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.12%)</title><rect x="779.9" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.9" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="779.9" y="211.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.9" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="779.9" y="227.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.9" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="779.9" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.9" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="779.9" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.9" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (5 samples, 0.12%)</title><rect x="779.9" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.9" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.12%)</title><rect x="779.9" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.9" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (5 samples, 0.12%)</title><rect x="779.9" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.9" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="779.9" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.9" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="779.9" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.9" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="779.9" y="355.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="779.9" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="779.9" y="387.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="779.9" y="403.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="779.9" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.9" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="779.9" y="435.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.9" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="779.9" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.9" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="779.9" y="467.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.9" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="779.9" y="483.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="779.9" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="779.9" y="515.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="779.9" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.9" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="779.9" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.9" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="779.9" y="563.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.9" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="779.9" y="579.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="779.9" y="595.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="779.9" y="611.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="779.9" y="627.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="779.9" y="643.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="779.9" y="659.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="779.9" y="675.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.9" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="781.4" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.4" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="781.4" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.4" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="781.4" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.4" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="781.4" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.4" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="781.4" y="195.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.4" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="781.4" y="211.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="781.4" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="781.4" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="781.4" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="781.4" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="781.4" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.4" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="781.4" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="781.4" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.4" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="781.4" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="781.4" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="781.4" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="781.4" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="781.4" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.4" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="781.4" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.4" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="781.4" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="781.4" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="781.4" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="781.4" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="781.4" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="781.4" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="781.4" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.4" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="782.2" y="115.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.2" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="782.2" y="131.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.2" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (5 samples, 0.12%)</title><rect x="782.2" y="147.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.2" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (5 samples, 0.12%)</title><rect x="782.2" y="163.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.2" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.12%)</title><rect x="782.2" y="179.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.2" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="782.2" y="195.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.2" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="782.2" y="211.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.2" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="782.2" y="227.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.2" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="782.2" y="243.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.2" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (5 samples, 0.12%)</title><rect x="782.2" y="259.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.2" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.12%)</title><rect x="782.2" y="275.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (5 samples, 0.12%)</title><rect x="782.2" y="291.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.2" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="782.2" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.2" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="782.2" y="323.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.2" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="782.2" y="339.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="782.2" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="782.2" y="371.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="782.2" y="387.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="782.2" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.2" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="782.2" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.2" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="782.2" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.2" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="782.2" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.2" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="782.2" y="467.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="782.2" y="483.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="782.2" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="782.2" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.2" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="782.2" y="531.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.2" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="782.2" y="547.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.2" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="782.2" y="563.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="782.2" y="579.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="782.2" y="595.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="785.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="782.2" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="782.2" y="627.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="782.2" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="782.2" y="659.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.2" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (15 samples, 0.37%)</title><rect x="783.7" y="83.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.7" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (15 samples, 0.37%)</title><rect x="783.7" y="99.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.7" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (15 samples, 0.37%)</title><rect x="783.7" y="115.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.7" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (15 samples, 0.37%)</title><rect x="783.7" y="131.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.7" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="783.7" y="147.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.7" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="783.7" y="163.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (15 samples, 0.37%)</title><rect x="783.7" y="179.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.37%)</title><rect x="783.7" y="195.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (15 samples, 0.37%)</title><rect x="783.7" y="211.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.37%)</title><rect x="783.7" y="227.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (15 samples, 0.37%)</title><rect x="783.7" y="243.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.7" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (15 samples, 0.37%)</title><rect x="783.7" y="259.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.7" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (15 samples, 0.37%)</title><rect x="783.7" y="275.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.7" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (15 samples, 0.37%)</title><rect x="783.7" y="291.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 0.37%)</title><rect x="783.7" y="307.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="783.7" y="323.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="783.7" y="339.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.7" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="783.7" y="355.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.7" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="783.7" y="371.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.7" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="783.7" y="387.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="783.7" y="403.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (15 samples, 0.37%)</title><rect x="783.7" y="419.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="783.7" y="435.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.37%)</title><rect x="783.7" y="451.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.37%)</title><rect x="783.7" y="467.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.37%)</title><rect x="783.7" y="483.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.7" y="494.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (64 samples, 1.59%)</title><rect x="788.1" y="67.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.1" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (20 samples, 0.50%)</title><rect x="788.1" y="83.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.1" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="788.1" y="99.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.1" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="788.1" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.1" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="788.1" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.1" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="788.1" y="147.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.1" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (3 samples, 0.07%)</title><rect x="788.1" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.1" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (3 samples, 0.07%)</title><rect x="788.1" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.07%)</title><rect x="788.1" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="788.1" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.1" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="788.1" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.1" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="788.1" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.1" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="788.1" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.1" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="788.1" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.1" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="788.1" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.1" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="788.1" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.1" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="788.1" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.1" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="788.1" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.1" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="788.1" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="788.1" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="788.1" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="788.1" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="788.1" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="788.1" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.1" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="788.1" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.1" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="788.1" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.1" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="788.1" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="788.1" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="788.1" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="788.1" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.1" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="788.1" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.1" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="788.1" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.1" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="788.1" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="788.1" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="788.1" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="788.1" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="788.1" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="788.1" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="788.1" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.1" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (17 samples, 0.42%)</title><rect x="789.0" y="99.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (17 samples, 0.42%)</title><rect x="789.0" y="115.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.0" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (17 samples, 0.42%)</title><rect x="789.0" y="131.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.0" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (17 samples, 0.42%)</title><rect x="789.0" y="147.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.0" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (17 samples, 0.42%)</title><rect x="789.0" y="163.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (17 samples, 0.42%)</title><rect x="789.0" y="179.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (17 samples, 0.42%)</title><rect x="789.0" y="195.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.42%)</title><rect x="789.0" y="211.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (17 samples, 0.42%)</title><rect x="789.0" y="227.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.42%)</title><rect x="789.0" y="243.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (17 samples, 0.42%)</title><rect x="789.0" y="259.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (17 samples, 0.42%)</title><rect x="789.0" y="275.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (17 samples, 0.42%)</title><rect x="789.0" y="291.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (17 samples, 0.42%)</title><rect x="789.0" y="307.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (17 samples, 0.42%)</title><rect x="789.0" y="323.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (17 samples, 0.42%)</title><rect x="789.0" y="339.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 0.42%)</title><rect x="789.0" y="355.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 0.42%)</title><rect x="789.0" y="371.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.0" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (17 samples, 0.42%)</title><rect x="789.0" y="387.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.0" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (17 samples, 0.42%)</title><rect x="789.0" y="403.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17 samples, 0.42%)</title><rect x="789.0" y="419.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (17 samples, 0.42%)</title><rect x="789.0" y="435.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17 samples, 0.42%)</title><rect x="789.0" y="451.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 0.42%)</title><rect x="789.0" y="467.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 0.42%)</title><rect x="789.0" y="483.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 0.42%)</title><rect x="789.0" y="499.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.0" y="510.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (15 samples, 0.37%)</title><rect x="793.9" y="83.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.9" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (15 samples, 0.37%)</title><rect x="793.9" y="99.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.9" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (15 samples, 0.37%)</title><rect x="793.9" y="115.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.9" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (15 samples, 0.37%)</title><rect x="793.9" y="131.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.9" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (15 samples, 0.37%)</title><rect x="793.9" y="147.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.9" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (15 samples, 0.37%)</title><rect x="793.9" y="163.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.9" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (15 samples, 0.37%)</title><rect x="793.9" y="179.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.9" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (15 samples, 0.37%)</title><rect x="793.9" y="195.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.9" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (15 samples, 0.37%)</title><rect x="793.9" y="211.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.9" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (15 samples, 0.37%)</title><rect x="793.9" y="227.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.9" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (15 samples, 0.37%)</title><rect x="793.9" y="243.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.9" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (15 samples, 0.37%)</title><rect x="793.9" y="259.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.9" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="793.9" y="275.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.9" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="793.9" y="291.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.format (15 samples, 0.37%)</title><rect x="793.9" y="307.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.37%)</title><rect x="793.9" y="323.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (15 samples, 0.37%)</title><rect x="793.9" y="339.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.37%)</title><rect x="793.9" y="355.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.9" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (15 samples, 0.37%)</title><rect x="793.9" y="371.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.9" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (15 samples, 0.37%)</title><rect x="793.9" y="387.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.9" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (15 samples, 0.37%)</title><rect x="793.9" y="403.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.9" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (15 samples, 0.37%)</title><rect x="793.9" y="419.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 0.37%)</title><rect x="793.9" y="435.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="793.9" y="451.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="793.9" y="467.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.9" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="793.9" y="483.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.9" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="793.9" y="499.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.9" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="793.9" y="515.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="793.9" y="531.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (15 samples, 0.37%)</title><rect x="793.9" y="547.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="793.9" y="563.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.37%)</title><rect x="793.9" y="579.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.37%)</title><rect x="793.9" y="595.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.37%)</title><rect x="793.9" y="611.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.9" y="622.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (29 samples, 0.72%)</title><rect x="798.3" y="83.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.3" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (29 samples, 0.72%)</title><rect x="798.3" y="99.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (29 samples, 0.72%)</title><rect x="798.3" y="115.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.3" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (29 samples, 0.72%)</title><rect x="798.3" y="131.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (29 samples, 0.72%)</title><rect x="798.3" y="147.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (29 samples, 0.72%)</title><rect x="798.3" y="163.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (29 samples, 0.72%)</title><rect x="798.3" y="179.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (29 samples, 0.72%)</title><rect x="798.3" y="195.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (29 samples, 0.72%)</title><rect x="798.3" y="211.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (29 samples, 0.72%)</title><rect x="798.3" y="227.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (29 samples, 0.72%)</title><rect x="798.3" y="243.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.3" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (29 samples, 0.72%)</title><rect x="798.3" y="259.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.format (29 samples, 0.72%)</title><rect x="798.3" y="275.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (29 samples, 0.72%)</title><rect x="798.3" y="291.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.72%)</title><rect x="798.3" y="307.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (29 samples, 0.72%)</title><rect x="798.3" y="323.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.72%)</title><rect x="798.3" y="339.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.3" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (29 samples, 0.72%)</title><rect x="798.3" y="355.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.3" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (29 samples, 0.72%)</title><rect x="798.3" y="371.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.3" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (29 samples, 0.72%)</title><rect x="798.3" y="387.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.3" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (29 samples, 0.72%)</title><rect x="798.3" y="403.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (29 samples, 0.72%)</title><rect x="798.3" y="419.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (29 samples, 0.72%)</title><rect x="798.3" y="435.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (29 samples, 0.72%)</title><rect x="798.3" y="451.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.3" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (29 samples, 0.72%)</title><rect x="798.3" y="467.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.3" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (29 samples, 0.72%)</title><rect x="798.3" y="483.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.3" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (29 samples, 0.72%)</title><rect x="798.3" y="499.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (29 samples, 0.72%)</title><rect x="798.3" y="515.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (29 samples, 0.72%)</title><rect x="798.3" y="531.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (29 samples, 0.72%)</title><rect x="798.3" y="547.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (29 samples, 0.72%)</title><rect x="798.3" y="563.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (29 samples, 0.72%)</title><rect x="798.3" y="579.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (29 samples, 0.72%)</title><rect x="798.3" y="595.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.3" y="606.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (45 samples, 1.12%)</title><rect x="806.8" y="67.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.8" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (45 samples, 1.12%)</title><rect x="806.8" y="83.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.8" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (45 samples, 1.12%)</title><rect x="806.8" y="99.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.8" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (45 samples, 1.12%)</title><rect x="806.8" y="115.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.8" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (45 samples, 1.12%)</title><rect x="806.8" y="131.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.8" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (45 samples, 1.12%)</title><rect x="806.8" y="147.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (45 samples, 1.12%)</title><rect x="806.8" y="163.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (45 samples, 1.12%)</title><rect x="806.8" y="179.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.8" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (45 samples, 1.12%)</title><rect x="806.8" y="195.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (45 samples, 1.12%)</title><rect x="806.8" y="211.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.8" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (45 samples, 1.12%)</title><rect x="806.8" y="227.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.8" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.format (45 samples, 1.12%)</title><rect x="806.8" y="243.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.8" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (45 samples, 1.12%)</title><rect x="806.8" y="259.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (45 samples, 1.12%)</title><rect x="806.8" y="275.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 1.12%)</title><rect x="806.8" y="291.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (45 samples, 1.12%)</title><rect x="806.8" y="307.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 1.12%)</title><rect x="806.8" y="323.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (45 samples, 1.12%)</title><rect x="806.8" y="339.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.8" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (45 samples, 1.12%)</title><rect x="806.8" y="355.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.8" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (45 samples, 1.12%)</title><rect x="806.8" y="371.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.8" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (45 samples, 1.12%)</title><rect x="806.8" y="387.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (45 samples, 1.12%)</title><rect x="806.8" y="403.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (45 samples, 1.12%)</title><rect x="806.8" y="419.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (45 samples, 1.12%)</title><rect x="806.8" y="435.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (45 samples, 1.12%)</title><rect x="806.8" y="451.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.8" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (45 samples, 1.12%)</title><rect x="806.8" y="467.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.8" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (45 samples, 1.12%)</title><rect x="806.8" y="483.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (45 samples, 1.12%)</title><rect x="806.8" y="499.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (45 samples, 1.12%)</title><rect x="806.8" y="515.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (45 samples, 1.12%)</title><rect x="806.8" y="531.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (45 samples, 1.12%)</title><rect x="806.8" y="547.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (45 samples, 1.12%)</title><rect x="806.8" y="563.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (45 samples, 1.12%)</title><rect x="806.8" y="579.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.8" y="590.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (6 samples, 0.15%)</title><rect x="820.0" y="51.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.0" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="820.0" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.0" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="820.0" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="820.0" y="99.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="820.0" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.0" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="820.0" y="131.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.0" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="820.0" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.0" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="820.0" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="820.0" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.0" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="820.0" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="820.0" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="820.0" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="820.0" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="820.0" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="820.0" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="820.0" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="820.0" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="820.0" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="820.0" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="820.0" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="820.0" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.0" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="820.0" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.0" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="820.0" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.0" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="820.0" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="820.0" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="820.0" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="820.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="820.0" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="820.0" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="820.0" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.0" y="526.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (5 samples, 0.12%)</title><rect x="820.3" y="67.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.3" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.12%)</title><rect x="820.3" y="83.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.3" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.12%)</title><rect x="820.3" y="99.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.3" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="820.3" y="115.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.3" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="820.3" y="131.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.12%)</title><rect x="820.3" y="147.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (5 samples, 0.12%)</title><rect x="820.3" y="163.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.12%)</title><rect x="820.3" y="179.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (5 samples, 0.12%)</title><rect x="820.3" y="195.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.3" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (5 samples, 0.12%)</title><rect x="820.3" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.3" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="820.3" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.3" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="820.3" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="820.3" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="820.3" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="820.3" y="291.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="820.3" y="307.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.3" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="820.3" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.3" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="820.3" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="820.3" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.3" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="820.3" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="820.3" y="387.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="820.3" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="820.3" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.3" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="820.3" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.3" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="820.3" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.3" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="820.3" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="820.3" y="483.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="820.3" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="820.3" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="820.3" y="531.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="820.3" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="820.3" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.3" y="574.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (83 samples, 2.06%)</title><rect x="821.7" y="51.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.7" y="62.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (83 samples, 2.06%)</title><rect x="821.7" y="67.0" width="24.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.7" y="78.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (59 samples, 1.46%)</title><rect x="821.7" y="83.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.7" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (42 samples, 1.04%)</title><rect x="821.7" y="99.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.7" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (42 samples, 1.04%)</title><rect x="821.7" y="115.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.7" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (26 samples, 0.64%)</title><rect x="821.7" y="131.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.7" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (26 samples, 0.64%)</title><rect x="821.7" y="147.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.7" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (26 samples, 0.64%)</title><rect x="821.7" y="163.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.7" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (26 samples, 0.64%)</title><rect x="821.7" y="179.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.7" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (26 samples, 0.64%)</title><rect x="821.7" y="195.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.7" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (26 samples, 0.64%)</title><rect x="821.7" y="211.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.7" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (26 samples, 0.64%)</title><rect x="821.7" y="227.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (26 samples, 0.64%)</title><rect x="821.7" y="243.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.64%)</title><rect x="821.7" y="259.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (26 samples, 0.64%)</title><rect x="821.7" y="275.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.64%)</title><rect x="821.7" y="291.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.7" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (26 samples, 0.64%)</title><rect x="821.7" y="307.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.7" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (26 samples, 0.64%)</title><rect x="821.7" y="323.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.7" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (26 samples, 0.64%)</title><rect x="821.7" y="339.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.7" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (26 samples, 0.64%)</title><rect x="821.7" y="355.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (26 samples, 0.64%)</title><rect x="821.7" y="371.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (26 samples, 0.64%)</title><rect x="821.7" y="387.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (26 samples, 0.64%)</title><rect x="821.7" y="403.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (26 samples, 0.64%)</title><rect x="821.7" y="419.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.7" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (26 samples, 0.64%)</title><rect x="821.7" y="435.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.7" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (26 samples, 0.64%)</title><rect x="821.7" y="451.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (26 samples, 0.64%)</title><rect x="821.7" y="467.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (26 samples, 0.64%)</title><rect x="821.7" y="483.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (26 samples, 0.64%)</title><rect x="821.7" y="499.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (26 samples, 0.64%)</title><rect x="821.7" y="515.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (26 samples, 0.64%)</title><rect x="821.7" y="531.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (26 samples, 0.64%)</title><rect x="821.7" y="547.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.7" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (16 samples, 0.40%)</title><rect x="829.3" y="131.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="829.3" y="147.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (10 samples, 0.25%)</title><rect x="829.3" y="163.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (10 samples, 0.25%)</title><rect x="829.3" y="179.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (10 samples, 0.25%)</title><rect x="829.3" y="195.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (10 samples, 0.25%)</title><rect x="829.3" y="211.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="829.3" y="227.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.3" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 0.25%)</title><rect x="829.3" y="243.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.3" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (10 samples, 0.25%)</title><rect x="829.3" y="259.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (10 samples, 0.25%)</title><rect x="829.3" y="275.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.3" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (10 samples, 0.25%)</title><rect x="829.3" y="291.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (10 samples, 0.25%)</title><rect x="829.3" y="307.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.3" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (10 samples, 0.25%)</title><rect x="829.3" y="323.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.3" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (10 samples, 0.25%)</title><rect x="829.3" y="339.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.3" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (10 samples, 0.25%)</title><rect x="829.3" y="355.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (10 samples, 0.25%)</title><rect x="829.3" y="371.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.25%)</title><rect x="829.3" y="387.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (10 samples, 0.25%)</title><rect x="829.3" y="403.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.25%)</title><rect x="829.3" y="419.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.3" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (10 samples, 0.25%)</title><rect x="829.3" y="435.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.3" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (10 samples, 0.25%)</title><rect x="829.3" y="451.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (10 samples, 0.25%)</title><rect x="829.3" y="467.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.3" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (10 samples, 0.25%)</title><rect x="829.3" y="483.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (10 samples, 0.25%)</title><rect x="829.3" y="499.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="829.3" y="515.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="829.3" y="531.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.3" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.25%)</title><rect x="829.3" y="547.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.3" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="829.3" y="563.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.3" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="829.3" y="579.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="829.3" y="595.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="832.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (10 samples, 0.25%)</title><rect x="829.3" y="611.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="829.3" y="627.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.25%)</title><rect x="829.3" y="643.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.25%)</title><rect x="829.3" y="659.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.25%)</title><rect x="829.3" y="675.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.3" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (6 samples, 0.15%)</title><rect x="832.3" y="147.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (6 samples, 0.15%)</title><rect x="832.3" y="163.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (6 samples, 0.15%)</title><rect x="832.3" y="179.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (6 samples, 0.15%)</title><rect x="832.3" y="195.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (6 samples, 0.15%)</title><rect x="832.3" y="211.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (6 samples, 0.15%)</title><rect x="832.3" y="227.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.3" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (6 samples, 0.15%)</title><rect x="832.3" y="243.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.3" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (6 samples, 0.15%)</title><rect x="832.3" y="259.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.3" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (6 samples, 0.15%)</title><rect x="832.3" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.3" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (6 samples, 0.15%)</title><rect x="832.3" y="291.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.3" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (6 samples, 0.15%)</title><rect x="832.3" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.3" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="832.3" y="323.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="832.3" y="339.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="832.3" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="832.3" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="832.3" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="832.3" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="832.3" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.3" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="832.3" y="435.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.3" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="832.3" y="451.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="832.3" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="832.3" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="832.3" y="499.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="832.3" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.3" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="832.3" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.3" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="832.3" y="547.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.3" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="832.3" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="832.3" y="579.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="832.3" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="832.3" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="832.3" y="627.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="832.3" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="832.3" y="659.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.3" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (17 samples, 0.42%)</title><rect x="834.0" y="99.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (17 samples, 0.42%)</title><rect x="834.0" y="115.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.0" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (17 samples, 0.42%)</title><rect x="834.0" y="131.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.0" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (17 samples, 0.42%)</title><rect x="834.0" y="147.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.0" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (17 samples, 0.42%)</title><rect x="834.0" y="163.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (17 samples, 0.42%)</title><rect x="834.0" y="179.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (17 samples, 0.42%)</title><rect x="834.0" y="195.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.42%)</title><rect x="834.0" y="211.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (17 samples, 0.42%)</title><rect x="834.0" y="227.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.42%)</title><rect x="834.0" y="243.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (17 samples, 0.42%)</title><rect x="834.0" y="259.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (17 samples, 0.42%)</title><rect x="834.0" y="275.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (17 samples, 0.42%)</title><rect x="834.0" y="291.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (17 samples, 0.42%)</title><rect x="834.0" y="307.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (17 samples, 0.42%)</title><rect x="834.0" y="323.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (17 samples, 0.42%)</title><rect x="834.0" y="339.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 0.42%)</title><rect x="834.0" y="355.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 0.42%)</title><rect x="834.0" y="371.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.0" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (17 samples, 0.42%)</title><rect x="834.0" y="387.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.0" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (17 samples, 0.42%)</title><rect x="834.0" y="403.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17 samples, 0.42%)</title><rect x="834.0" y="419.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (17 samples, 0.42%)</title><rect x="834.0" y="435.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17 samples, 0.42%)</title><rect x="834.0" y="451.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 0.42%)</title><rect x="834.0" y="467.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 0.42%)</title><rect x="834.0" y="483.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 0.42%)</title><rect x="834.0" y="499.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.0" y="510.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (24 samples, 0.59%)</title><rect x="839.0" y="83.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (15 samples, 0.37%)</title><rect x="839.0" y="99.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (15 samples, 0.37%)</title><rect x="839.0" y="115.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.0" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (15 samples, 0.37%)</title><rect x="839.0" y="131.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.0" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (15 samples, 0.37%)</title><rect x="839.0" y="147.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.0" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (15 samples, 0.37%)</title><rect x="839.0" y="163.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="839.0" y="179.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.0" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="839.0" y="195.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (15 samples, 0.37%)</title><rect x="839.0" y="211.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.37%)</title><rect x="839.0" y="227.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (15 samples, 0.37%)</title><rect x="839.0" y="243.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.37%)</title><rect x="839.0" y="259.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (15 samples, 0.37%)</title><rect x="839.0" y="275.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (15 samples, 0.37%)</title><rect x="839.0" y="291.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (15 samples, 0.37%)</title><rect x="839.0" y="307.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (15 samples, 0.37%)</title><rect x="839.0" y="323.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 0.37%)</title><rect x="839.0" y="339.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="839.0" y="355.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="839.0" y="371.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.0" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="839.0" y="387.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.0" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="839.0" y="403.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.0" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="839.0" y="419.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="839.0" y="435.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (15 samples, 0.37%)</title><rect x="839.0" y="451.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="839.0" y="467.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.37%)</title><rect x="839.0" y="483.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.37%)</title><rect x="839.0" y="499.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.37%)</title><rect x="839.0" y="515.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.0" y="526.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.12%)</title><rect x="843.4" y="99.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.4" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="843.4" y="115.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.4" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (3 samples, 0.07%)</title><rect x="843.4" y="131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.4" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (3 samples, 0.07%)</title><rect x="843.4" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.4" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.07%)</title><rect x="843.4" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.4" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="843.4" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.4" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="843.4" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.4" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="843.4" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.4" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="843.4" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.4" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="843.4" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.4" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="843.4" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.4" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="843.4" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.4" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="843.4" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.4" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="843.4" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.4" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="843.4" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="843.4" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="843.4" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="843.4" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="843.4" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.4" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="843.4" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.4" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="843.4" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.4" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="843.4" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.4" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="843.4" y="451.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="843.4" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="843.4" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="843.4" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="843.4" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.4" y="526.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="843.4" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.4" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="843.4" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="843.4" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="843.4" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="843.4" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="843.4" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="843.4" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="843.4" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.4" y="654.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (2 samples, 0.05%)</title><rect x="844.2" y="115.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.2" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (2 samples, 0.05%)</title><rect x="844.2" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.2" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (2 samples, 0.05%)</title><rect x="844.2" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.2" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (2 samples, 0.05%)</title><rect x="844.2" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.2" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="844.2" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.2" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="844.2" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.2" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (2 samples, 0.05%)</title><rect x="844.2" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.2" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (2 samples, 0.05%)</title><rect x="844.2" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.2" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (2 samples, 0.05%)</title><rect x="844.2" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.2" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="844.2" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.2" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="844.2" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.2" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="844.2" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.2" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="844.2" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="844.2" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="844.2" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="844.2" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="844.2" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.2" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="844.2" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.2" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="844.2" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.2" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="844.2" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.2" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="844.2" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="844.2" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="844.2" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="844.2" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="844.2" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.2" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="844.2" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.2" y="526.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="844.2" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="844.2" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="844.2" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="844.2" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="844.2" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="844.2" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="844.2" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.2" y="638.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (4 samples, 0.10%)</title><rect x="844.8" y="99.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.8" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (4 samples, 0.10%)</title><rect x="844.8" y="115.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.8" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (4 samples, 0.10%)</title><rect x="844.8" y="131.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.8" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (4 samples, 0.10%)</title><rect x="844.8" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (4 samples, 0.10%)</title><rect x="844.8" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (4 samples, 0.10%)</title><rect x="844.8" y="179.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.8" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (4 samples, 0.10%)</title><rect x="844.8" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (4 samples, 0.10%)</title><rect x="844.8" y="211.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.8" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (4 samples, 0.10%)</title><rect x="844.8" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.8" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (4 samples, 0.10%)</title><rect x="844.8" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.8" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (4 samples, 0.10%)</title><rect x="844.8" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.8" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="844.8" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.8" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="844.8" y="291.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="844.8" y="307.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="844.8" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="844.8" y="339.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="844.8" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.8" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="844.8" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.8" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="844.8" y="387.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.8" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="844.8" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.8" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="844.8" y="419.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="844.8" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="844.8" y="451.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="844.8" y="467.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="844.8" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.8" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="844.8" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.8" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="844.8" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="844.8" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="844.8" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="844.8" y="563.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="844.8" y="579.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="844.8" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="844.8" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.8" y="622.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (95 samples, 2.35%)</title><rect x="846.0" y="51.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.0" y="62.0">j..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (44 samples, 1.09%)</title><rect x="846.0" y="67.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.0" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (41 samples, 1.02%)</title><rect x="846.0" y="83.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (41 samples, 1.02%)</title><rect x="846.0" y="99.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (35 samples, 0.87%)</title><rect x="846.0" y="115.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.0" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (35 samples, 0.87%)</title><rect x="846.0" y="131.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.0" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (35 samples, 0.87%)</title><rect x="846.0" y="147.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.0" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (35 samples, 0.87%)</title><rect x="846.0" y="163.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (35 samples, 0.87%)</title><rect x="846.0" y="179.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.0" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (35 samples, 0.87%)</title><rect x="846.0" y="195.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.0" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (35 samples, 0.87%)</title><rect x="846.0" y="211.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (35 samples, 0.87%)</title><rect x="846.0" y="227.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.87%)</title><rect x="846.0" y="243.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (35 samples, 0.87%)</title><rect x="846.0" y="259.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.87%)</title><rect x="846.0" y="275.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (35 samples, 0.87%)</title><rect x="846.0" y="291.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (35 samples, 0.87%)</title><rect x="846.0" y="307.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (35 samples, 0.87%)</title><rect x="846.0" y="323.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.0" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (35 samples, 0.87%)</title><rect x="846.0" y="339.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (35 samples, 0.87%)</title><rect x="846.0" y="355.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (35 samples, 0.87%)</title><rect x="846.0" y="371.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (35 samples, 0.87%)</title><rect x="846.0" y="387.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (35 samples, 0.87%)</title><rect x="846.0" y="403.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.0" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (35 samples, 0.87%)</title><rect x="846.0" y="419.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.0" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (35 samples, 0.87%)</title><rect x="846.0" y="435.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (35 samples, 0.87%)</title><rect x="846.0" y="451.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (35 samples, 0.87%)</title><rect x="846.0" y="467.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (35 samples, 0.87%)</title><rect x="846.0" y="483.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (35 samples, 0.87%)</title><rect x="846.0" y="499.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (35 samples, 0.87%)</title><rect x="846.0" y="515.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (35 samples, 0.87%)</title><rect x="846.0" y="531.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.0" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (6 samples, 0.15%)</title><rect x="856.2" y="115.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.2" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (6 samples, 0.15%)</title><rect x="856.2" y="131.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.2" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="856.2" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.2" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="856.2" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.2" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="856.2" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.2" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="856.2" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.2" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (3 samples, 0.07%)</title><rect x="856.2" y="211.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.2" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (3 samples, 0.07%)</title><rect x="856.2" y="227.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.2" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.07%)</title><rect x="856.2" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.2" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="856.2" y="259.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.2" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="856.2" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.2" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="856.2" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.2" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="856.2" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.2" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="856.2" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.2" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="856.2" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.2" y="350.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="856.2" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.2" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="856.2" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.2" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="856.2" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.2" y="398.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="856.2" y="403.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="856.2" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="856.2" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="856.2" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="856.2" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.2" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="856.2" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.2" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="856.2" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.2" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="856.2" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.2" y="526.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="856.2" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="856.2" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="856.2" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="859.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="856.2" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.2" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="856.2" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.2" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="856.2" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.2" y="622.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="856.2" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="856.2" y="643.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="856.2" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="856.2" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="856.2" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="856.2" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="856.2" y="723.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.2" y="734.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="857.1" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.1" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="857.1" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.1" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="857.1" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.1" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="857.1" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.1" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="857.1" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.1" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="857.1" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="857.1" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="857.1" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="857.1" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="857.1" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.1" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="857.1" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.1" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="857.1" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.1" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="857.1" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.1" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="857.1" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="857.1" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="857.1" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="857.1" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="857.1" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.1" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="857.1" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.1" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="857.1" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="857.1" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="857.1" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="857.1" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="857.1" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="857.1" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="857.1" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.1" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="858.0" y="83.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="858.0" y="99.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.0" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="858.0" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.0" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="858.0" y="131.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.0" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="858.0" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.0" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="858.0" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="858.0" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="858.0" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="858.0" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="858.0" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.0" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="858.0" y="243.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="858.0" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="858.0" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="858.0" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="858.0" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="858.0" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="858.0" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="858.0" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.0" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="858.0" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.0" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="858.0" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="858.0" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="858.0" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="858.0" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="858.0" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="858.0" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="858.0" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.0" y="494.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (51 samples, 1.26%)</title><rect x="858.9" y="67.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.9" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (51 samples, 1.26%)</title><rect x="858.9" y="83.0" width="14.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.9" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (51 samples, 1.26%)</title><rect x="858.9" y="99.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.9" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (50 samples, 1.24%)</title><rect x="858.9" y="115.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.9" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (49 samples, 1.21%)</title><rect x="858.9" y="131.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.9" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (49 samples, 1.21%)</title><rect x="858.9" y="147.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.9" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (39 samples, 0.97%)</title><rect x="858.9" y="163.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.9" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (39 samples, 0.97%)</title><rect x="858.9" y="179.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.9" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (39 samples, 0.97%)</title><rect x="858.9" y="195.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.9" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (39 samples, 0.97%)</title><rect x="858.9" y="211.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.9" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (39 samples, 0.97%)</title><rect x="858.9" y="227.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.9" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.format (39 samples, 0.97%)</title><rect x="858.9" y="243.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.9" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.format (39 samples, 0.97%)</title><rect x="858.9" y="259.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (39 samples, 0.97%)</title><rect x="858.9" y="275.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.97%)</title><rect x="858.9" y="291.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (39 samples, 0.97%)</title><rect x="858.9" y="307.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.97%)</title><rect x="858.9" y="323.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (39 samples, 0.97%)</title><rect x="858.9" y="339.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.9" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (39 samples, 0.97%)</title><rect x="858.9" y="355.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.9" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (39 samples, 0.97%)</title><rect x="858.9" y="371.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.9" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (39 samples, 0.97%)</title><rect x="858.9" y="387.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (39 samples, 0.97%)</title><rect x="858.9" y="403.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (39 samples, 0.97%)</title><rect x="858.9" y="419.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (39 samples, 0.97%)</title><rect x="858.9" y="435.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (39 samples, 0.97%)</title><rect x="858.9" y="451.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.9" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (39 samples, 0.97%)</title><rect x="858.9" y="467.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.9" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (39 samples, 0.97%)</title><rect x="858.9" y="483.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (39 samples, 0.97%)</title><rect x="858.9" y="499.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (39 samples, 0.97%)</title><rect x="858.9" y="515.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (39 samples, 0.97%)</title><rect x="858.9" y="531.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (39 samples, 0.97%)</title><rect x="858.9" y="547.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (39 samples, 0.97%)</title><rect x="858.9" y="563.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (39 samples, 0.97%)</title><rect x="858.9" y="579.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.9" y="590.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (8 samples, 0.20%)</title><rect x="870.3" y="163.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (7 samples, 0.17%)</title><rect x="870.3" y="179.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (7 samples, 0.17%)</title><rect x="870.3" y="195.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (7 samples, 0.17%)</title><rect x="870.3" y="211.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (7 samples, 0.17%)</title><rect x="870.3" y="227.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.3" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (7 samples, 0.17%)</title><rect x="870.3" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.3" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (7 samples, 0.17%)</title><rect x="870.3" y="259.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.3" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (7 samples, 0.17%)</title><rect x="870.3" y="275.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.3" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (7 samples, 0.17%)</title><rect x="870.3" y="291.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.3" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (7 samples, 0.17%)</title><rect x="870.3" y="307.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.3" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (7 samples, 0.17%)</title><rect x="870.3" y="323.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.3" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (7 samples, 0.17%)</title><rect x="870.3" y="339.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.3" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (7 samples, 0.17%)</title><rect x="870.3" y="355.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.3" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="870.3" y="371.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.3" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (7 samples, 0.17%)</title><rect x="870.3" y="387.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="870.3" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="870.3" y="419.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="870.3" y="435.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="870.3" y="451.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="870.3" y="467.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.3" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="870.3" y="483.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.3" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="870.3" y="499.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.3" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="870.3" y="515.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="870.3" y="531.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="870.3" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="870.3" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.3" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="870.3" y="579.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.3" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="870.3" y="595.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.3" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="870.3" y="611.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="870.3" y="627.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="870.3" y="643.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="870.3" y="659.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="870.3" y="675.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="870.3" y="691.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="870.3" y="707.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.3" y="718.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="872.3" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="872.3" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="872.3" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="872.3" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.3" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="872.3" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.3" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="872.3" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.3" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="872.3" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.3" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="872.3" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.3" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="872.3" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.3" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="872.3" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.3" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="872.3" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.3" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="872.3" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.3" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="872.3" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="872.3" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="872.3" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="872.3" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="872.3" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.3" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="872.3" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.3" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="872.3" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.3" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="872.3" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.3" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="872.3" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="872.3" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="872.3" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="872.3" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.3" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="872.3" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.3" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="872.3" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.3" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="872.3" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="872.3" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="872.3" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="872.3" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="872.3" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="872.3" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="872.3" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.3" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (2 samples, 0.05%)</title><rect x="872.6" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.6" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (2 samples, 0.05%)</title><rect x="872.6" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.6" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (2 samples, 0.05%)</title><rect x="872.6" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.6" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (2 samples, 0.05%)</title><rect x="872.6" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.6" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="872.6" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.6" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 0.05%)</title><rect x="872.6" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.6" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (2 samples, 0.05%)</title><rect x="872.6" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.6" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (2 samples, 0.05%)</title><rect x="872.6" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.6" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (2 samples, 0.05%)</title><rect x="872.6" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.6" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (2 samples, 0.05%)</title><rect x="872.6" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.05%)</title><rect x="872.6" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.6" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="872.6" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.6" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.05%)</title><rect x="872.6" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="872.6" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="872.6" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="872.6" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="872.6" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.6" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="872.6" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.6" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="872.6" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="872.6" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.6" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="872.6" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="872.6" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="872.6" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="872.6" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.6" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="872.6" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.6" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="872.6" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="872.6" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="872.6" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="872.6" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="872.6" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="872.6" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="872.6" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="872.6" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.6" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="873.2" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.2" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="873.2" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.2" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="873.2" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.2" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="873.2" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.2" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="873.2" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.2" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="873.2" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="873.2" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="873.2" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="873.2" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="873.2" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.2" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="873.2" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.2" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="873.2" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.2" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="873.2" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.2" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="873.2" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="873.2" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="873.2" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="873.2" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="873.2" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.2" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="873.2" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.2" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="873.2" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="873.2" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="873.2" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="873.2" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="873.2" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="873.2" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="873.2" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.2" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.5" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.5" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="873.5" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.5" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="873.5" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.5" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.5" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.5" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="873.5" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.5" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="873.5" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.5" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="873.5" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.5" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="873.5" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.5" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.5" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.5" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.5" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.5" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="873.5" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.5" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="873.5" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.5" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="873.5" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.5" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="873.5" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.5" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="873.5" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.5" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="873.5" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.5" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="873.5" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="873.5" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="873.5" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="873.5" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="873.5" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.5" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="873.5" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.5" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="873.5" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.5" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="873.5" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.5" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="873.5" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="873.5" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="873.5" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="873.5" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="873.5" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.5" y="574.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="873.5" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.5" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="873.5" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="873.5" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="873.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="873.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="873.5" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="873.5" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="873.5" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.5" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$LastNode.match (5 samples, 0.12%)</title><rect x="873.8" y="51.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.8" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (5 samples, 0.12%)</title><rect x="873.8" y="67.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.8" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="873.8" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.8" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="873.8" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.8" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.8" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.8" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.8" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.8" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="873.8" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.8" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="873.8" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.8" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.8" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="873.8" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="873.8" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="873.8" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.8" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="873.8" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.8" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.8" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.8" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="873.8" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.8" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="873.8" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="873.8" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.8" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="873.8" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.8" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="873.8" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.8" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="873.8" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.8" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="873.8" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.8" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="873.8" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="873.8" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="873.8" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="873.8" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="873.8" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.8" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="873.8" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.8" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="873.8" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.8" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="873.8" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.8" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="873.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="873.8" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="873.8" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="873.8" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.8" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="873.8" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.8" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="873.8" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="873.8" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="873.8" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="873.8" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="873.8" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="873.8" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="873.8" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="873.8" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="718.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (4 samples, 0.10%)</title><rect x="874.1" y="83.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.1" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (4 samples, 0.10%)</title><rect x="874.1" y="99.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.1" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (4 samples, 0.10%)</title><rect x="874.1" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.1" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (4 samples, 0.10%)</title><rect x="874.1" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.1" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (4 samples, 0.10%)</title><rect x="874.1" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.1" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (4 samples, 0.10%)</title><rect x="874.1" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.1" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (4 samples, 0.10%)</title><rect x="874.1" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.1" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="874.1" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.1" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (3 samples, 0.07%)</title><rect x="874.1" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.1" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (3 samples, 0.07%)</title><rect x="874.1" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.1" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.07%)</title><rect x="874.1" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.1" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.07%)</title><rect x="874.1" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.1" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="874.1" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.1" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.07%)</title><rect x="874.1" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.1" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.07%)</title><rect x="874.1" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.1" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.07%)</title><rect x="874.1" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.1" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.07%)</title><rect x="874.1" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.1" y="350.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.07%)</title><rect x="874.1" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.1" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="874.1" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.1" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="874.1" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.1" y="398.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.07%)</title><rect x="874.1" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="874.1" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="874.1" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="874.1" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="874.1" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.1" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="874.1" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.1" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="874.1" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.1" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="874.1" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.1" y="526.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="874.1" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="874.1" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="874.1" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="874.1" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.1" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="874.1" y="595.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.1" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="874.1" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.1" y="622.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="874.1" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="874.1" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="874.1" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="874.1" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="874.1" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="874.1" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="874.1" y="723.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.1" y="734.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="875.0" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.0" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="875.0" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.0" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="875.0" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.0" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="875.0" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.0" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.0" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.0" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.0" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.0" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="875.0" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.0" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="875.0" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.0" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="875.0" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.0" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="875.0" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.0" y="350.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="875.0" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.0" y="366.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="875.0" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.0" y="382.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="875.0" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="875.0" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="875.0" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="875.0" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="875.0" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.0" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="875.0" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.0" y="478.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="875.0" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.0" y="494.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="875.0" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.0" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="875.0" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="875.0" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="875.0" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="875.0" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.0" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="875.0" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.0" y="590.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="875.0" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.0" y="606.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="875.0" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="875.0" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="875.0" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="875.0" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="875.0" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="875.0" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="875.0" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.0" y="718.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.inRange (1 samples, 0.02%)</title><rect x="875.3" y="51.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.3" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.lambda$Range$10 (1 samples, 0.02%)</title><rect x="875.3" y="67.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.3" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$$Lambda$21.0x80000002b.is (1 samples, 0.02%)</title><rect x="875.3" y="83.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.3" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (1 samples, 0.02%)</title><rect x="875.3" y="99.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.3" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$22.0x80000002c.is (1 samples, 0.02%)</title><rect x="875.3" y="115.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (1 samples, 0.02%)</title><rect x="875.3" y="131.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$22.0x80000002c.is (1 samples, 0.02%)</title><rect x="875.3" y="147.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="875.3" y="163.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="875.3" y="179.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.3" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.3" y="195.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.3" y="211.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.3" y="222.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.3" y="227.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.3" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.02%)</title><rect x="875.3" y="243.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.3" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.02%)</title><rect x="875.3" y="259.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.3" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.02%)</title><rect x="875.3" y="275.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.3" y="286.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.02%)</title><rect x="875.3" y="291.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.3" y="302.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.3" y="307.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.3" y="318.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.02%)</title><rect x="875.3" y="323.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.3" y="334.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.02%)</title><rect x="875.3" y="339.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.3" y="350.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.02%)</title><rect x="875.3" y="355.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.3" y="366.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.02%)</title><rect x="875.3" y="371.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.3" y="382.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.02%)</title><rect x="875.3" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.3" y="398.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.02%)</title><rect x="875.3" y="403.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.3" y="414.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="875.3" y="419.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.3" y="430.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.02%)</title><rect x="875.3" y="435.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="875.3" y="451.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="875.3" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="875.3" y="483.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="875.3" y="499.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="510.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="875.3" y="515.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.3" y="526.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="875.3" y="531.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.3" y="542.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="875.3" y="547.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.3" y="558.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="875.3" y="563.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="875.3" y="579.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="875.3" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="875.3" y="611.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="875.3" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.3" y="638.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="875.3" y="643.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.3" y="654.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="875.3" y="659.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="875.3" y="675.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="875.3" y="691.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="875.3" y="707.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="875.3" y="723.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="875.3" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="875.3" y="755.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.3" y="766.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.lambda$Single$7 (6 samples, 0.15%)</title><rect x="875.5" y="51.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.5" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$$Lambda$19.0x800000026.is (6 samples, 0.15%)</title><rect x="875.5" y="67.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.5" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (6 samples, 0.15%)</title><rect x="875.5" y="83.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.5" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (6 samples, 0.15%)</title><rect x="875.5" y="99.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.5" y="110.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (6 samples, 0.15%)</title><rect x="875.5" y="115.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.5" y="126.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (6 samples, 0.15%)</title><rect x="875.5" y="131.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (6 samples, 0.15%)</title><rect x="875.5" y="147.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="875.5" y="163.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.5" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="875.5" y="179.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="875.5" y="195.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="875.5" y="211.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="875.5" y="227.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="875.5" y="243.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="875.5" y="259.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="875.5" y="275.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="875.5" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.5" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="875.5" y="307.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="875.5" y="323.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="875.5" y="339.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="875.5" y="355.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="875.5" y="371.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.5" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="875.5" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.5" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="875.5" y="403.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="875.5" y="419.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="875.5" y="435.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="875.5" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="875.5" y="467.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="875.5" y="483.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="875.5" y="499.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.5" y="510.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (15 samples, 0.37%)</title><rect x="877.3" y="51.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.3" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (15 samples, 0.37%)</title><rect x="877.3" y="67.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="877.3" y="83.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.3" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (15 samples, 0.37%)</title><rect x="877.3" y="99.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (15 samples, 0.37%)</title><rect x="877.3" y="115.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.37%)</title><rect x="877.3" y="131.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (15 samples, 0.37%)</title><rect x="877.3" y="147.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.37%)</title><rect x="877.3" y="163.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.3" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (15 samples, 0.37%)</title><rect x="877.3" y="179.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (15 samples, 0.37%)</title><rect x="877.3" y="195.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (15 samples, 0.37%)</title><rect x="877.3" y="211.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.3" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (15 samples, 0.37%)</title><rect x="877.3" y="227.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 0.37%)</title><rect x="877.3" y="243.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="877.3" y="259.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="877.3" y="275.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.3" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="877.3" y="291.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.3" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="877.3" y="307.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.3" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="877.3" y="323.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="877.3" y="339.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (15 samples, 0.37%)</title><rect x="877.3" y="355.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="877.3" y="371.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.37%)</title><rect x="877.3" y="387.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.37%)</title><rect x="877.3" y="403.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.37%)</title><rect x="877.3" y="419.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (17 samples, 0.42%)</title><rect x="881.7" y="51.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.7" y="62.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.&lt;init&gt; (17 samples, 0.42%)</title><rect x="881.7" y="67.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$Head.&lt;init&gt; (9 samples, 0.22%)</title><rect x="881.7" y="83.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.7" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (9 samples, 0.22%)</title><rect x="881.7" y="99.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.chars (9 samples, 0.22%)</title><rect x="881.7" y="115.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.7" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (9 samples, 0.22%)</title><rect x="881.7" y="131.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.7" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (9 samples, 0.22%)</title><rect x="881.7" y="147.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.7" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (9 samples, 0.22%)</title><rect x="881.7" y="163.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.7" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (9 samples, 0.22%)</title><rect x="881.7" y="179.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.7" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (9 samples, 0.22%)</title><rect x="881.7" y="195.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.7" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (9 samples, 0.22%)</title><rect x="881.7" y="211.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.7" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="881.7" y="227.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.7" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="881.7" y="243.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="881.7" y="259.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="881.7" y="275.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="881.7" y="291.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="881.7" y="307.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.7" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="881.7" y="323.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="881.7" y="339.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="881.7" y="355.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.7" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="881.7" y="371.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="881.7" y="387.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="881.7" y="403.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="881.7" y="419.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.7" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="881.7" y="435.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.7" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="881.7" y="451.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.7" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="881.7" y="467.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="881.7" y="483.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="881.7" y="499.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="881.7" y="515.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="881.7" y="531.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="881.7" y="547.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="881.7" y="563.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$StatelessOp.&lt;init&gt; (8 samples, 0.20%)</title><rect x="884.3" y="83.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10.&lt;init&gt; (8 samples, 0.20%)</title><rect x="884.3" y="99.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.filter (8 samples, 0.20%)</title><rect x="884.3" y="115.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.3" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (8 samples, 0.20%)</title><rect x="884.3" y="131.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.3" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (8 samples, 0.20%)</title><rect x="884.3" y="147.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.3" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (8 samples, 0.20%)</title><rect x="884.3" y="163.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.3" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (8 samples, 0.20%)</title><rect x="884.3" y="179.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.3" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (8 samples, 0.20%)</title><rect x="884.3" y="195.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.3" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (8 samples, 0.20%)</title><rect x="884.3" y="211.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.3" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="884.3" y="227.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="884.3" y="243.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="884.3" y="259.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="884.3" y="275.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="884.3" y="291.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="884.3" y="307.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.3" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="884.3" y="323.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.3" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="884.3" y="339.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.3" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="884.3" y="355.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.3" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="884.3" y="371.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="884.3" y="387.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="884.3" y="403.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="884.3" y="419.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.3" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="884.3" y="435.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.3" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="884.3" y="451.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.3" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="884.3" y="467.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="884.3" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="884.3" y="499.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="884.3" y="515.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="884.3" y="531.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="884.3" y="547.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="884.3" y="563.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (35 samples, 0.87%)</title><rect x="886.7" y="51.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.7" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (31 samples, 0.77%)</title><rect x="886.7" y="67.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (31 samples, 0.77%)</title><rect x="886.7" y="83.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.7" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (31 samples, 0.77%)</title><rect x="886.7" y="99.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (31 samples, 0.77%)</title><rect x="886.7" y="115.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (31 samples, 0.77%)</title><rect x="886.7" y="131.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (31 samples, 0.77%)</title><rect x="886.7" y="147.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.7" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (31 samples, 0.77%)</title><rect x="886.7" y="163.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.7" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (31 samples, 0.77%)</title><rect x="886.7" y="179.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.7" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (31 samples, 0.77%)</title><rect x="886.7" y="195.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.7" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (31 samples, 0.77%)</title><rect x="886.7" y="211.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.7" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (31 samples, 0.77%)</title><rect x="886.7" y="227.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.7" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (31 samples, 0.77%)</title><rect x="886.7" y="243.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.7" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (31 samples, 0.77%)</title><rect x="886.7" y="259.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (31 samples, 0.77%)</title><rect x="886.7" y="275.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.77%)</title><rect x="886.7" y="291.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (31 samples, 0.77%)</title><rect x="886.7" y="307.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.77%)</title><rect x="886.7" y="323.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.7" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (31 samples, 0.77%)</title><rect x="886.7" y="339.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (31 samples, 0.77%)</title><rect x="886.7" y="355.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (31 samples, 0.77%)</title><rect x="886.7" y="371.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (31 samples, 0.77%)</title><rect x="886.7" y="387.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (31 samples, 0.77%)</title><rect x="886.7" y="403.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (31 samples, 0.77%)</title><rect x="886.7" y="419.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (31 samples, 0.77%)</title><rect x="886.7" y="435.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.7" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (31 samples, 0.77%)</title><rect x="886.7" y="451.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (31 samples, 0.77%)</title><rect x="886.7" y="467.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.7" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (31 samples, 0.77%)</title><rect x="886.7" y="483.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (31 samples, 0.77%)</title><rect x="886.7" y="499.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (31 samples, 0.77%)</title><rect x="886.7" y="515.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (31 samples, 0.77%)</title><rect x="886.7" y="531.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (31 samples, 0.77%)</title><rect x="886.7" y="547.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (31 samples, 0.77%)</title><rect x="886.7" y="563.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (31 samples, 0.77%)</title><rect x="886.7" y="579.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.10%)</title><rect x="895.7" y="67.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.10%)</title><rect x="895.7" y="83.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.7" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.10%)</title><rect x="895.7" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (4 samples, 0.10%)</title><rect x="895.7" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.7" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (4 samples, 0.10%)</title><rect x="895.7" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.7" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.10%)</title><rect x="895.7" y="147.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.7" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.10%)</title><rect x="895.7" y="163.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.7" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.10%)</title><rect x="895.7" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.7" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.10%)</title><rect x="895.7" y="195.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.7" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="895.7" y="211.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.7" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="895.7" y="227.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.7" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="895.7" y="243.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="895.7" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="895.7" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="895.7" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="895.7" y="307.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.7" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="895.7" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.7" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="895.7" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.7" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="895.7" y="355.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.7" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="895.7" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="895.7" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="895.7" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="895.7" y="419.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.7" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="895.7" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.7" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="895.7" y="451.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.7" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="895.7" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="895.7" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="895.7" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="895.7" y="515.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="895.7" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="895.7" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="895.7" y="563.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.50%)</title><rect x="896.9" y="51.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.9" y="62.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (20 samples, 0.50%)</title><rect x="896.9" y="67.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.9" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (20 samples, 0.50%)</title><rect x="896.9" y="83.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.9" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (20 samples, 0.50%)</title><rect x="896.9" y="99.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (20 samples, 0.50%)</title><rect x="896.9" y="115.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.9" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (20 samples, 0.50%)</title><rect x="896.9" y="131.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.9" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (20 samples, 0.50%)</title><rect x="896.9" y="147.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.9" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (20 samples, 0.50%)</title><rect x="896.9" y="163.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.9" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (20 samples, 0.50%)</title><rect x="896.9" y="179.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.9" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (20 samples, 0.50%)</title><rect x="896.9" y="195.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (20 samples, 0.50%)</title><rect x="896.9" y="211.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.50%)</title><rect x="896.9" y="227.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (20 samples, 0.50%)</title><rect x="896.9" y="243.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.50%)</title><rect x="896.9" y="259.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.9" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (20 samples, 0.50%)</title><rect x="896.9" y="275.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (20 samples, 0.50%)</title><rect x="896.9" y="291.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.9" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (20 samples, 0.50%)</title><rect x="896.9" y="307.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.9" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (20 samples, 0.50%)</title><rect x="896.9" y="323.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (20 samples, 0.50%)</title><rect x="896.9" y="339.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (20 samples, 0.50%)</title><rect x="896.9" y="355.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (20 samples, 0.50%)</title><rect x="896.9" y="371.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (20 samples, 0.50%)</title><rect x="896.9" y="387.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.9" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (20 samples, 0.50%)</title><rect x="896.9" y="403.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (20 samples, 0.50%)</title><rect x="896.9" y="419.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (20 samples, 0.50%)</title><rect x="896.9" y="435.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (20 samples, 0.50%)</title><rect x="896.9" y="451.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (20 samples, 0.50%)</title><rect x="896.9" y="467.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 0.50%)</title><rect x="896.9" y="483.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 0.50%)</title><rect x="896.9" y="499.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 0.50%)</title><rect x="896.9" y="515.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.getStreamAndOpFlags (1 samples, 0.02%)</title><rect x="902.8" y="51.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.8" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="902.8" y="67.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.8" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="902.8" y="83.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.8" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="902.8" y="99.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="902.8" y="115.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.02%)</title><rect x="902.8" y="131.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.8" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="902.8" y="147.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.8" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="902.8" y="163.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.8" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="902.8" y="179.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.8" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="902.8" y="195.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.8" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="902.8" y="211.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.8" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="902.8" y="227.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.8" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="902.8" y="243.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.8" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="902.8" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="902.8" y="275.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="902.8" y="291.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="902.8" y="307.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="902.8" y="323.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="902.8" y="339.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.8" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="902.8" y="355.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.8" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="902.8" y="371.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.8" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="902.8" y="387.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="902.8" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="902.8" y="419.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="902.8" y="435.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="902.8" y="451.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.8" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="902.8" y="467.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.8" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="902.8" y="483.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="902.8" y="499.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="902.8" y="515.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="902.8" y="531.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="902.8" y="547.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="902.8" y="563.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="902.8" y="579.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.isParallel (2 samples, 0.05%)</title><rect x="903.0" y="51.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.0" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="903.0" y="67.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (2 samples, 0.05%)</title><rect x="903.0" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.0" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (2 samples, 0.05%)</title><rect x="903.0" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.05%)</title><rect x="903.0" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.0" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.05%)</title><rect x="903.0" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.05%)</title><rect x="903.0" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.05%)</title><rect x="903.0" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.05%)</title><rect x="903.0" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.0" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="903.0" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.0" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="903.0" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="903.0" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="903.0" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="903.0" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="903.0" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="903.0" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="903.0" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="903.0" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.0" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="903.0" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="903.0" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="903.0" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="903.0" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="903.0" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="903.0" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.0" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="903.0" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="903.0" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="903.0" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="903.0" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="903.0" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="903.0" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="903.0" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (82 samples, 2.03%)</title><rect x="903.6" y="51.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.6" y="62.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (82 samples, 2.03%)</title><rect x="903.6" y="67.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="78.0">j..</text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (82 samples, 2.03%)</title><rect x="903.6" y="83.0" width="24.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.6" y="94.0">j..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (82 samples, 2.03%)</title><rect x="903.6" y="99.0" width="24.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.6" y="110.0">j..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (82 samples, 2.03%)</title><rect x="903.6" y="115.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.6" y="126.0">j..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (82 samples, 2.03%)</title><rect x="903.6" y="131.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.6" y="142.0">j..</text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (82 samples, 2.03%)</title><rect x="903.6" y="147.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.6" y="158.0">s..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (82 samples, 2.03%)</title><rect x="903.6" y="163.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/Formatter.getZero (82 samples, 2.03%)</title><rect x="903.6" y="179.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (82 samples, 2.03%)</title><rect x="903.6" y="195.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.6" y="206.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (82 samples, 2.03%)</title><rect x="903.6" y="211.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.6" y="222.0">j..</text>
</g>
<g>
<title>java/lang/String.format (82 samples, 2.03%)</title><rect x="903.6" y="227.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.6" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 2.03%)</title><rect x="903.6" y="243.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="254.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (82 samples, 2.03%)</title><rect x="903.6" y="259.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.6" y="270.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 2.03%)</title><rect x="903.6" y="275.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.6" y="286.0">j..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (82 samples, 2.03%)</title><rect x="903.6" y="291.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.6" y="302.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (82 samples, 2.03%)</title><rect x="903.6" y="307.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.6" y="318.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (82 samples, 2.03%)</title><rect x="903.6" y="323.0" width="24.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.6" y="334.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (82 samples, 2.03%)</title><rect x="903.6" y="339.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="350.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (82 samples, 2.03%)</title><rect x="903.6" y="355.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.6" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (82 samples, 2.03%)</title><rect x="903.6" y="371.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.6" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (82 samples, 2.03%)</title><rect x="903.6" y="387.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.6" y="398.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (82 samples, 2.03%)</title><rect x="903.6" y="403.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.6" y="414.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (82 samples, 2.03%)</title><rect x="903.6" y="419.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.6" y="430.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (82 samples, 2.03%)</title><rect x="903.6" y="435.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.6" y="446.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (82 samples, 2.03%)</title><rect x="903.6" y="451.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (82 samples, 2.03%)</title><rect x="903.6" y="467.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (82 samples, 2.03%)</title><rect x="903.6" y="483.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (82 samples, 2.03%)</title><rect x="903.6" y="499.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (82 samples, 2.03%)</title><rect x="903.6" y="515.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.6" y="526.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (82 samples, 2.03%)</title><rect x="903.6" y="531.0" width="24.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.6" y="542.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.10%)</title><rect x="927.6" y="51.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.6" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.10%)</title><rect x="927.6" y="67.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.10%)</title><rect x="927.6" y="83.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (4 samples, 0.10%)</title><rect x="927.6" y="99.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (4 samples, 0.10%)</title><rect x="927.6" y="115.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.6" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.10%)</title><rect x="927.6" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.10%)</title><rect x="927.6" y="147.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.6" y="158.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.10%)</title><rect x="927.6" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.6" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.10%)</title><rect x="927.6" y="179.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.6" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="927.6" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.6" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="927.6" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.6" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="927.6" y="227.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="927.6" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="927.6" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="927.6" y="275.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="927.6" y="291.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="927.6" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.6" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="927.6" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.6" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="927.6" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.6" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="927.6" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="927.6" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="927.6" y="387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="927.6" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="927.6" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="930.6" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="927.6" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.6" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="927.6" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="927.6" y="467.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="927.6" y="483.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="930.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="927.6" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="927.6" y="515.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="927.6" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="927.6" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (45 samples, 1.12%)</title><rect x="928.8" y="51.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.8" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (45 samples, 1.12%)</title><rect x="928.8" y="67.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.8" y="78.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (45 samples, 1.12%)</title><rect x="928.8" y="83.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.8" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (45 samples, 1.12%)</title><rect x="928.8" y="99.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (45 samples, 1.12%)</title><rect x="928.8" y="115.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.8" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (45 samples, 1.12%)</title><rect x="928.8" y="131.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.8" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (45 samples, 1.12%)</title><rect x="928.8" y="147.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.8" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (45 samples, 1.12%)</title><rect x="928.8" y="163.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.8" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (45 samples, 1.12%)</title><rect x="928.8" y="179.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.8" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (45 samples, 1.12%)</title><rect x="928.8" y="195.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.8" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (45 samples, 1.12%)</title><rect x="928.8" y="211.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.8" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (45 samples, 1.12%)</title><rect x="928.8" y="227.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.8" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (45 samples, 1.12%)</title><rect x="928.8" y="243.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (45 samples, 1.12%)</title><rect x="928.8" y="259.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 1.12%)</title><rect x="928.8" y="275.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (45 samples, 1.12%)</title><rect x="928.8" y="291.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 1.12%)</title><rect x="928.8" y="307.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.8" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (45 samples, 1.12%)</title><rect x="928.8" y="323.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.8" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (45 samples, 1.12%)</title><rect x="928.8" y="339.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.8" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (45 samples, 1.12%)</title><rect x="928.8" y="355.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.8" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (45 samples, 1.12%)</title><rect x="928.8" y="371.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (45 samples, 1.12%)</title><rect x="928.8" y="387.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (45 samples, 1.12%)</title><rect x="928.8" y="403.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (45 samples, 1.12%)</title><rect x="928.8" y="419.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.8" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (45 samples, 1.12%)</title><rect x="928.8" y="435.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="931.8" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (45 samples, 1.12%)</title><rect x="928.8" y="451.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.8" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (45 samples, 1.12%)</title><rect x="928.8" y="467.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (45 samples, 1.12%)</title><rect x="928.8" y="483.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (45 samples, 1.12%)</title><rect x="928.8" y="499.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (45 samples, 1.12%)</title><rect x="928.8" y="515.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (45 samples, 1.12%)</title><rect x="928.8" y="531.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (45 samples, 1.12%)</title><rect x="928.8" y="547.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (45 samples, 1.12%)</title><rect x="928.8" y="563.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.17%)</title><rect x="941.9" y="51.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.9" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.17%)</title><rect x="941.9" y="67.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (7 samples, 0.17%)</title><rect x="941.9" y="83.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.9" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (7 samples, 0.17%)</title><rect x="941.9" y="99.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.9" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (7 samples, 0.17%)</title><rect x="941.9" y="115.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.9" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (7 samples, 0.17%)</title><rect x="941.9" y="131.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.9" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (7 samples, 0.17%)</title><rect x="941.9" y="147.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.9" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (7 samples, 0.17%)</title><rect x="941.9" y="163.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.9" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (7 samples, 0.17%)</title><rect x="941.9" y="179.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.9" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="941.9" y="195.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="941.9" y="211.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="941.9" y="227.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="941.9" y="243.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="944.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="941.9" y="259.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="941.9" y="275.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="941.9" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.9" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="941.9" y="307.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.9" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="941.9" y="323.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="941.9" y="339.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="941.9" y="355.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="941.9" y="371.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="941.9" y="387.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="941.9" y="403.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.9" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="941.9" y="419.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.9" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="941.9" y="435.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="941.9" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="941.9" y="467.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="941.9" y="483.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="941.9" y="499.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="941.9" y="515.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="941.9" y="531.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt$$Lambda$62.0x800000062.get (5 samples, 0.12%)</title><rect x="944.0" y="51.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.0" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.12%)</title><rect x="944.0" y="67.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="944.0" y="83.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (5 samples, 0.12%)</title><rect x="944.0" y="99.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.0" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (5 samples, 0.12%)</title><rect x="944.0" y="115.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.0" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (5 samples, 0.12%)</title><rect x="944.0" y="131.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.0" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (5 samples, 0.12%)</title><rect x="944.0" y="147.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.0" y="158.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (5 samples, 0.12%)</title><rect x="944.0" y="163.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.0" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (5 samples, 0.12%)</title><rect x="944.0" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.0" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (5 samples, 0.12%)</title><rect x="944.0" y="195.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.0" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="944.0" y="211.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.0" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="944.0" y="227.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="944.0" y="243.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="944.0" y="259.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="944.0" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="944.0" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="944.0" y="307.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="944.0" y="323.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.0" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="944.0" y="339.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.0" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="944.0" y="355.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="944.0" y="371.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="944.0" y="387.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="944.0" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.0" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="944.0" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.0" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="944.0" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.0" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="944.0" y="451.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="944.0" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="944.0" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="947.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="944.0" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="944.0" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="944.0" y="531.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="944.0" y="547.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.accept (376 samples, 9.32%)</title><rect x="945.5" y="51.0" width="109.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.5" y="62.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/IntPipeline$10$1.accept (376 samples, 9.32%)</title><rect x="945.5" y="67.0" width="109.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.5" y="78.0">java/util/str..</text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.tryAdvance (8 samples, 0.20%)</title><rect x="945.5" y="83.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (8 samples, 0.20%)</title><rect x="945.5" y="99.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (8 samples, 0.20%)</title><rect x="945.5" y="115.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.20%)</title><rect x="945.5" y="131.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.20%)</title><rect x="945.5" y="147.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.20%)</title><rect x="945.5" y="163.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.20%)</title><rect x="945.5" y="179.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (8 samples, 0.20%)</title><rect x="945.5" y="195.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.5" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (8 samples, 0.20%)</title><rect x="945.5" y="211.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.5" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (8 samples, 0.20%)</title><rect x="945.5" y="227.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.5" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (8 samples, 0.20%)</title><rect x="945.5" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.5" y="254.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (8 samples, 0.20%)</title><rect x="945.5" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.5" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (8 samples, 0.20%)</title><rect x="945.5" y="275.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.5" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (8 samples, 0.20%)</title><rect x="945.5" y="291.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.5" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="945.5" y="307.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.5" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (8 samples, 0.20%)</title><rect x="945.5" y="323.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.20%)</title><rect x="945.5" y="339.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.20%)</title><rect x="945.5" y="355.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (8 samples, 0.20%)</title><rect x="945.5" y="371.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.20%)</title><rect x="945.5" y="387.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.5" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (8 samples, 0.20%)</title><rect x="945.5" y="403.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.5" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (8 samples, 0.20%)</title><rect x="945.5" y="419.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.5" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (8 samples, 0.20%)</title><rect x="945.5" y="435.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.5" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (8 samples, 0.20%)</title><rect x="945.5" y="451.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.20%)</title><rect x="945.5" y="467.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="945.5" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.20%)</title><rect x="945.5" y="499.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.20%)</title><rect x="945.5" y="515.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.5" y="526.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="945.5" y="531.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.5" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (8 samples, 0.20%)</title><rect x="945.5" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="945.5" y="563.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (8 samples, 0.20%)</title><rect x="945.5" y="579.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (8 samples, 0.20%)</title><rect x="945.5" y="595.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="948.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.20%)</title><rect x="945.5" y="611.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.20%)</title><rect x="945.5" y="627.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.20%)</title><rect x="945.5" y="643.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (368 samples, 9.12%)</title><rect x="947.8" y="83.0" width="107.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.8" y="94.0">java/lang/Str..</text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (368 samples, 9.12%)</title><rect x="947.8" y="99.0" width="107.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.8" y="110.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (368 samples, 9.12%)</title><rect x="947.8" y="115.0" width="107.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.8" y="126.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (368 samples, 9.12%)</title><rect x="947.8" y="131.0" width="107.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.8" y="142.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (368 samples, 9.12%)</title><rect x="947.8" y="147.0" width="107.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.8" y="158.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (368 samples, 9.12%)</title><rect x="947.8" y="163.0" width="107.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.8" y="174.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (368 samples, 9.12%)</title><rect x="947.8" y="179.0" width="107.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.8" y="190.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (368 samples, 9.12%)</title><rect x="947.8" y="195.0" width="107.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.8" y="206.0">java/util/str..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (368 samples, 9.12%)</title><rect x="947.8" y="211.0" width="107.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.8" y="222.0">java/text/Dec..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (368 samples, 9.12%)</title><rect x="947.8" y="227.0" width="107.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.8" y="238.0">java/text/Dec..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (368 samples, 9.12%)</title><rect x="947.8" y="243.0" width="107.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.8" y="254.0">java/text/Dec..</text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (368 samples, 9.12%)</title><rect x="947.8" y="259.0" width="107.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.8" y="270.0">sun/util/loca..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (368 samples, 9.12%)</title><rect x="947.8" y="275.0" width="107.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.8" y="286.0">java/text/Dec..</text>
</g>
<g>
<title>java/util/Formatter.getZero (368 samples, 9.12%)</title><rect x="947.8" y="291.0" width="107.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.8" y="302.0">java/util/For..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (368 samples, 9.12%)</title><rect x="947.8" y="307.0" width="107.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.8" y="318.0">java/util/For..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (368 samples, 9.12%)</title><rect x="947.8" y="323.0" width="107.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.8" y="334.0">java/util/For..</text>
</g>
<g>
<title>java/lang/String.format (368 samples, 9.12%)</title><rect x="947.8" y="339.0" width="107.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.8" y="350.0">java/lang/Str..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (368 samples, 9.12%)</title><rect x="947.8" y="355.0" width="107.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.8" y="366.0">java/lang/inv..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (368 samples, 9.12%)</title><rect x="947.8" y="371.0" width="107.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.8" y="382.0">java/lang/inv..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (368 samples, 9.12%)</title><rect x="947.8" y="387.0" width="107.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.8" y="398.0">java/lang/inv..</text>
</g>
<g>
<title>pl/wyhasany/Record.toString (368 samples, 9.12%)</title><rect x="947.8" y="403.0" width="107.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.8" y="414.0">pl/wyhasany/R..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (368 samples, 9.12%)</title><rect x="947.8" y="419.0" width="107.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.8" y="430.0">pl/wyhasany/M..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (368 samples, 9.12%)</title><rect x="947.8" y="435.0" width="107.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.8" y="446.0">pl/wyhasany/j..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (368 samples, 9.12%)</title><rect x="947.8" y="451.0" width="107.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.8" y="462.0">pl/wyhasany/j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (368 samples, 9.12%)</title><rect x="947.8" y="467.0" width="107.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.8" y="478.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (368 samples, 9.12%)</title><rect x="947.8" y="483.0" width="107.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.8" y="494.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (368 samples, 9.12%)</title><rect x="947.8" y="499.0" width="107.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.8" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (368 samples, 9.12%)</title><rect x="947.8" y="515.0" width="107.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.8" y="526.0">java/lang/ref..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (368 samples, 9.12%)</title><rect x="947.8" y="531.0" width="107.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.8" y="542.0">org/openjdk/j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (368 samples, 9.12%)</title><rect x="947.8" y="547.0" width="107.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.8" y="558.0">org/openjdk/j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (368 samples, 9.12%)</title><rect x="947.8" y="563.0" width="107.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.8" y="574.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (368 samples, 9.12%)</title><rect x="947.8" y="579.0" width="107.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.8" y="590.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (368 samples, 9.12%)</title><rect x="947.8" y="595.0" width="107.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.8" y="606.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (368 samples, 9.12%)</title><rect x="947.8" y="611.0" width="107.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.8" y="622.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (368 samples, 9.12%)</title><rect x="947.8" y="627.0" width="107.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.8" y="638.0">java/util/con..</text>
</g>
<g>
<title>java/lang/Thread.run (368 samples, 9.12%)</title><rect x="947.8" y="643.0" width="107.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.8" y="654.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.get (5 samples, 0.12%)</title><rect x="1055.4" y="51.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.4" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.get (5 samples, 0.12%)</title><rect x="1055.4" y="67.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.12%)</title><rect x="1055.4" y="83.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="1055.4" y="99.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.4" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (5 samples, 0.12%)</title><rect x="1055.4" y="115.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.4" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (5 samples, 0.12%)</title><rect x="1055.4" y="131.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.4" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (5 samples, 0.12%)</title><rect x="1055.4" y="147.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.4" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1055.4" y="163.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.4" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (5 samples, 0.12%)</title><rect x="1055.4" y="179.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.4" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (5 samples, 0.12%)</title><rect x="1055.4" y="195.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.4" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (5 samples, 0.12%)</title><rect x="1055.4" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.4" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1055.4" y="227.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.4" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1055.4" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="1055.4" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="1055.4" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="1055.4" y="291.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="1055.4" y="307.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.4" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="1055.4" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.4" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="1055.4" y="339.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1058.4" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="1055.4" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.4" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="1055.4" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="1055.4" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1055.4" y="403.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1055.4" y="419.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="1055.4" y="435.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.4" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="1055.4" y="451.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.4" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="1055.4" y="467.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="1055.4" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="1055.4" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="1055.4" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="1055.4" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="1055.4" y="547.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="1055.4" y="563.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.accept (15 samples, 0.37%)</title><rect x="1056.9" y="51.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.9" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.accept (15 samples, 0.37%)</title><rect x="1056.9" y="67.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10$1.accept (15 samples, 0.37%)</title><rect x="1056.9" y="83.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.tryAdvance (14 samples, 0.35%)</title><rect x="1056.9" y="99.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (14 samples, 0.35%)</title><rect x="1056.9" y="115.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (14 samples, 0.35%)</title><rect x="1056.9" y="131.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (14 samples, 0.35%)</title><rect x="1056.9" y="147.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.35%)</title><rect x="1056.9" y="163.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (14 samples, 0.35%)</title><rect x="1056.9" y="179.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.35%)</title><rect x="1056.9" y="195.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (14 samples, 0.35%)</title><rect x="1056.9" y="211.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.9" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (14 samples, 0.35%)</title><rect x="1056.9" y="227.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.9" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (14 samples, 0.35%)</title><rect x="1056.9" y="243.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.9" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (14 samples, 0.35%)</title><rect x="1056.9" y="259.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.9" y="270.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (14 samples, 0.35%)</title><rect x="1056.9" y="275.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.9" y="286.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (14 samples, 0.35%)</title><rect x="1056.9" y="291.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.9" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (14 samples, 0.35%)</title><rect x="1056.9" y="307.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.9" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (14 samples, 0.35%)</title><rect x="1056.9" y="323.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.9" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (14 samples, 0.35%)</title><rect x="1056.9" y="339.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (14 samples, 0.35%)</title><rect x="1056.9" y="355.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.35%)</title><rect x="1056.9" y="371.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (14 samples, 0.35%)</title><rect x="1056.9" y="387.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.35%)</title><rect x="1056.9" y="403.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.9" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (14 samples, 0.35%)</title><rect x="1056.9" y="419.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.9" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (14 samples, 0.35%)</title><rect x="1056.9" y="435.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.9" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (14 samples, 0.35%)</title><rect x="1056.9" y="451.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.9" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (14 samples, 0.35%)</title><rect x="1056.9" y="467.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (14 samples, 0.35%)</title><rect x="1056.9" y="483.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="1056.9" y="499.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="1056.9" y="515.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.35%)</title><rect x="1056.9" y="531.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.9" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="1056.9" y="547.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.9" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="1056.9" y="563.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="1056.9" y="579.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (14 samples, 0.35%)</title><rect x="1056.9" y="595.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="1056.9" y="611.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.35%)</title><rect x="1056.9" y="627.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.35%)</title><rect x="1056.9" y="643.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.35%)</title><rect x="1056.9" y="659.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="1061.0" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="1061.0" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="1061.0" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="1061.0" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="1061.0" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="1061.0" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="1061.0" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.02%)</title><rect x="1061.0" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.0" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="1061.0" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.0" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="1061.0" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.0" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1061.0" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.0" y="270.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="1061.0" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.0" y="286.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="1061.0" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.0" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="1061.0" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.0" y="318.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1061.0" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.0" y="334.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1061.0" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="1061.0" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1061.0" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="1061.0" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1061.0" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.0" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="1061.0" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.0" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="1061.0" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.0" y="446.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="1061.0" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.0" y="462.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="1061.0" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="1061.0" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1061.0" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1061.0" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1061.0" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.0" y="542.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1061.0" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.0" y="558.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1061.0" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1061.0" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="1061.0" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1061.0" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="1061.0" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="1061.0" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="1061.0" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.cancellationRequested (1 samples, 0.02%)</title><rect x="1061.3" y="51.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.3" y="62.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedInt.cancellationRequested (1 samples, 0.02%)</title><rect x="1061.3" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.3" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="1061.3" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="1061.3" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="1061.3" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="1061.3" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="1061.3" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="1061.3" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.02%)</title><rect x="1061.3" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.3" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="1061.3" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.3" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="1061.3" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.3" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1061.3" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.3" y="238.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="1061.3" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.3" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="1061.3" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.3" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="1061.3" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.3" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1061.3" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.3" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1061.3" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="1061.3" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1061.3" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="1061.3" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1061.3" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.3" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="1061.3" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.3" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="1061.3" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.3" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="1061.3" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.3" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="1061.3" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="1061.3" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1061.3" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1061.3" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.3" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1061.3" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.3" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1061.3" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.3" y="526.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1061.3" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1061.3" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="1061.3" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1061.3" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="1061.3" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="1061.3" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="1061.3" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10$1.accept (5 samples, 0.12%)</title><rect x="1061.6" y="51.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="62.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.tryAdvance (5 samples, 0.12%)</title><rect x="1061.6" y="67.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (5 samples, 0.12%)</title><rect x="1061.6" y="83.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.12%)</title><rect x="1061.6" y="99.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.12%)</title><rect x="1061.6" y="115.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.12%)</title><rect x="1061.6" y="131.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.12%)</title><rect x="1061.6" y="147.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="1061.6" y="163.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (5 samples, 0.12%)</title><rect x="1061.6" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (5 samples, 0.12%)</title><rect x="1061.6" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.6" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (5 samples, 0.12%)</title><rect x="1061.6" y="211.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.6" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1061.6" y="227.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.6" y="238.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (5 samples, 0.12%)</title><rect x="1061.6" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.6" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (5 samples, 0.12%)</title><rect x="1061.6" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (5 samples, 0.12%)</title><rect x="1061.6" y="275.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.6" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1061.6" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.6" y="302.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1061.6" y="307.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.12%)</title><rect x="1061.6" y="323.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="1061.6" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (5 samples, 0.12%)</title><rect x="1061.6" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="1061.6" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (5 samples, 0.12%)</title><rect x="1061.6" y="387.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (5 samples, 0.12%)</title><rect x="1061.6" y="403.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.6" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="1061.6" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.6" y="430.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (5 samples, 0.12%)</title><rect x="1061.6" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="1061.6" y="451.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1061.6" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1061.6" y="483.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.6" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="1061.6" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.6" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="1061.6" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.6" y="526.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="1061.6" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="1061.6" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="1061.6" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="1061.6" y="579.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="1061.6" y="595.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="1061.6" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="1061.6" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10$1.begin (2 samples, 0.05%)</title><rect x="1063.0" y="51.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.0" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.05%)</title><rect x="1063.0" y="67.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="1063.0" y="83.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="1063.0" y="99.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="1063.0" y="115.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="1063.0" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (2 samples, 0.05%)</title><rect x="1063.0" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.0" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (2 samples, 0.05%)</title><rect x="1063.0" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.0" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.05%)</title><rect x="1063.0" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.0" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1063.0" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.0" y="206.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.05%)</title><rect x="1063.0" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.0" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.05%)</title><rect x="1063.0" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.0" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.05%)</title><rect x="1063.0" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.0" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1063.0" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.0" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1063.0" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="1063.0" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1063.0" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="1063.0" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1063.0" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.0" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="1063.0" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.0" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="1063.0" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.0" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="1063.0" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.0" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="1063.0" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="1063.0" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1063.0" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1063.0" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.0" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="1063.0" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.0" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="1063.0" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.0" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="1063.0" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="1063.0" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="1063.0" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="1063.0" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="1063.0" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="1063.0" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="1063.0" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$10.opWrapSink (9 samples, 0.22%)</title><rect x="1063.6" y="51.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.6" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.22%)</title><rect x="1063.6" y="67.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.22%)</title><rect x="1063.6" y="83.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.22%)</title><rect x="1063.6" y="99.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.22%)</title><rect x="1063.6" y="115.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (9 samples, 0.22%)</title><rect x="1063.6" y="131.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (9 samples, 0.22%)</title><rect x="1063.6" y="147.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.6" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (9 samples, 0.22%)</title><rect x="1063.6" y="163.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.6" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1063.6" y="179.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.6" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (9 samples, 0.22%)</title><rect x="1063.6" y="195.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.6" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (9 samples, 0.22%)</title><rect x="1063.6" y="211.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.6" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (9 samples, 0.22%)</title><rect x="1063.6" y="227.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1066.6" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1063.6" y="243.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.6" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1063.6" y="259.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="1063.6" y="275.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="1063.6" y="291.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="1063.6" y="307.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="1063.6" y="323.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.6" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="1063.6" y="339.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.6" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="1063.6" y="355.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.6" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="1063.6" y="371.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.6" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="1063.6" y="387.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="1063.6" y="403.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="1063.6" y="419.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="1063.6" y="435.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.6" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="1063.6" y="451.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.6" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="1063.6" y="467.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.6" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="1063.6" y="483.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="1063.6" y="499.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="1063.6" y="515.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="1063.6" y="531.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="1063.6" y="547.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="1063.6" y="563.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="1063.6" y="579.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$Head.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1066.3" y="51.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1069.3" y="62.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (1 samples, 0.02%)</title><rect x="1066.3" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.3" y="78.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.02%)</title><rect x="1066.3" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.3" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.02%)</title><rect x="1066.3" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.3" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.02%)</title><rect x="1066.3" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.3" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1066.3" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.3" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.02%)</title><rect x="1066.3" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.3" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.02%)</title><rect x="1066.3" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.3" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.02%)</title><rect x="1066.3" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.3" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1066.3" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.3" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1066.3" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.02%)</title><rect x="1066.3" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1066.3" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (1 samples, 0.02%)</title><rect x="1066.3" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1066.3" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.3" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (1 samples, 0.02%)</title><rect x="1066.3" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.3" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="1066.3" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.3" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="1066.3" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.3" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="1066.3" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="1066.3" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1066.3" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1066.3" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1066.3" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.3" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1066.3" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.3" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1066.3" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1066.3" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="1066.3" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1066.3" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="1066.3" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="1066.3" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="1066.3" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (7 samples, 0.17%)</title><rect x="1066.6" y="51.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1069.6" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (7 samples, 0.17%)</title><rect x="1066.6" y="67.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.6" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (7 samples, 0.17%)</title><rect x="1066.6" y="83.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.6" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1066.6" y="99.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.6" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (7 samples, 0.17%)</title><rect x="1066.6" y="115.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.6" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (7 samples, 0.17%)</title><rect x="1066.6" y="131.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.6" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (7 samples, 0.17%)</title><rect x="1066.6" y="147.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1066.6" y="163.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.6" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1066.6" y="179.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="1066.6" y="195.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="1066.6" y="211.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="1066.6" y="227.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="1066.6" y="243.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="1066.6" y="259.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="1066.6" y="275.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="1066.6" y="291.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="1066.6" y="307.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="1066.6" y="323.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1066.6" y="339.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1066.6" y="355.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.6" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="1066.6" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.6" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1066.6" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.6" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1066.6" y="403.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1066.6" y="419.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="1066.6" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1066.6" y="451.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="1066.6" y="467.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="1066.6" y="483.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="1066.6" y="499.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (3 samples, 0.07%)</title><rect x="1068.6" y="51.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.6" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.07%)</title><rect x="1068.6" y="67.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.07%)</title><rect x="1068.6" y="83.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.07%)</title><rect x="1068.6" y="99.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.07%)</title><rect x="1068.6" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.07%)</title><rect x="1068.6" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (3 samples, 0.07%)</title><rect x="1068.6" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.6" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (3 samples, 0.07%)</title><rect x="1068.6" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.6" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (3 samples, 0.07%)</title><rect x="1068.6" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.6" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1068.6" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.6" y="206.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (3 samples, 0.07%)</title><rect x="1068.6" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.6" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (3 samples, 0.07%)</title><rect x="1068.6" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.6" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (3 samples, 0.07%)</title><rect x="1068.6" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.6" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1068.6" y="259.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.6" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1068.6" y="275.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="1068.6" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="1068.6" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="1068.6" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="1068.6" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.6" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="1068.6" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.6" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="1068.6" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.6" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="1068.6" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.6" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="1068.6" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="1068.6" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="1068.6" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="1068.6" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.6" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="1068.6" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.6" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="1068.6" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.6" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="1068.6" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="1068.6" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="1068.6" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="1068.6" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="1068.6" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="1068.6" y="579.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="1068.6" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedInt.cancellationRequested (38 samples, 0.94%)</title><rect x="1069.5" y="51.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.5" y="62.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (38 samples, 0.94%)</title><rect x="1069.5" y="67.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (38 samples, 0.94%)</title><rect x="1069.5" y="83.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (38 samples, 0.94%)</title><rect x="1069.5" y="99.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (38 samples, 0.94%)</title><rect x="1069.5" y="115.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (38 samples, 0.94%)</title><rect x="1069.5" y="131.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1072.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (38 samples, 0.94%)</title><rect x="1069.5" y="147.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (38 samples, 0.94%)</title><rect x="1069.5" y="163.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.5" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (38 samples, 0.94%)</title><rect x="1069.5" y="179.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.5" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (38 samples, 0.94%)</title><rect x="1069.5" y="195.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.5" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (38 samples, 0.94%)</title><rect x="1069.5" y="211.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.5" y="222.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (38 samples, 0.94%)</title><rect x="1069.5" y="227.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.5" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (38 samples, 0.94%)</title><rect x="1069.5" y="243.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.5" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (38 samples, 0.94%)</title><rect x="1069.5" y="259.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.5" y="270.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (38 samples, 0.94%)</title><rect x="1069.5" y="275.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.5" y="286.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (38 samples, 0.94%)</title><rect x="1069.5" y="291.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.format (38 samples, 0.94%)</title><rect x="1069.5" y="307.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.94%)</title><rect x="1069.5" y="323.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (38 samples, 0.94%)</title><rect x="1069.5" y="339.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.94%)</title><rect x="1069.5" y="355.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.5" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (38 samples, 0.94%)</title><rect x="1069.5" y="371.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.5" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (38 samples, 0.94%)</title><rect x="1069.5" y="387.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.5" y="398.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (38 samples, 0.94%)</title><rect x="1069.5" y="403.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.5" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (38 samples, 0.94%)</title><rect x="1069.5" y="419.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (38 samples, 0.94%)</title><rect x="1069.5" y="435.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (38 samples, 0.94%)</title><rect x="1069.5" y="451.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (38 samples, 0.94%)</title><rect x="1069.5" y="467.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (38 samples, 0.94%)</title><rect x="1069.5" y="483.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.5" y="494.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (38 samples, 0.94%)</title><rect x="1069.5" y="499.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.5" y="510.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (38 samples, 0.94%)</title><rect x="1069.5" y="515.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (38 samples, 0.94%)</title><rect x="1069.5" y="531.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1072.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (38 samples, 0.94%)</title><rect x="1069.5" y="547.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (38 samples, 0.94%)</title><rect x="1069.5" y="563.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (38 samples, 0.94%)</title><rect x="1069.5" y="579.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (38 samples, 0.94%)</title><rect x="1069.5" y="595.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (38 samples, 0.94%)</title><rect x="1069.5" y="611.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (7 samples, 0.17%)</title><rect x="1080.6" y="51.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1083.6" y="62.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (7 samples, 0.17%)</title><rect x="1080.6" y="67.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.6" y="78.0"></text>
</g>
<g>
<title>java/lang/String.chars (7 samples, 0.17%)</title><rect x="1080.6" y="83.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.6" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (7 samples, 0.17%)</title><rect x="1080.6" y="99.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (7 samples, 0.17%)</title><rect x="1080.6" y="115.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.6" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1080.6" y="131.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.6" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (7 samples, 0.17%)</title><rect x="1080.6" y="147.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.6" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (7 samples, 0.17%)</title><rect x="1080.6" y="163.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.6" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (7 samples, 0.17%)</title><rect x="1080.6" y="179.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.6" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1080.6" y="195.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.6" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1080.6" y="211.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="1080.6" y="227.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="1080.6" y="243.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="1080.6" y="259.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="1080.6" y="275.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="1080.6" y="291.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.6" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="1080.6" y="307.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.6" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="1080.6" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.6" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="1080.6" y="339.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="1080.6" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1080.6" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1080.6" y="387.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="1080.6" y="403.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.6" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1080.6" y="419.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.6" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1080.6" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1080.6" y="451.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="1080.6" y="467.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1080.6" y="483.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="1080.6" y="499.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="1080.6" y="515.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="1080.6" y="531.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (25 samples, 0.62%)</title><rect x="1082.6" y="51.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.6" y="62.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (25 samples, 0.62%)</title><rect x="1082.6" y="67.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (25 samples, 0.62%)</title><rect x="1082.6" y="83.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (25 samples, 0.62%)</title><rect x="1082.6" y="99.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 0.62%)</title><rect x="1082.6" y="115.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (25 samples, 0.62%)</title><rect x="1082.6" y="131.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (25 samples, 0.62%)</title><rect x="1082.6" y="147.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.6" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (25 samples, 0.62%)</title><rect x="1082.6" y="163.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (25 samples, 0.62%)</title><rect x="1082.6" y="179.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.6" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (25 samples, 0.62%)</title><rect x="1082.6" y="195.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.6" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (25 samples, 0.62%)</title><rect x="1082.6" y="211.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.6" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (25 samples, 0.62%)</title><rect x="1082.6" y="227.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.6" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (25 samples, 0.62%)</title><rect x="1082.6" y="243.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.6" y="254.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (25 samples, 0.62%)</title><rect x="1082.6" y="259.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.format (25 samples, 0.62%)</title><rect x="1082.6" y="275.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.62%)</title><rect x="1082.6" y="291.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (25 samples, 0.62%)</title><rect x="1082.6" y="307.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.62%)</title><rect x="1082.6" y="323.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.6" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (25 samples, 0.62%)</title><rect x="1082.6" y="339.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.6" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (25 samples, 0.62%)</title><rect x="1082.6" y="355.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.6" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (25 samples, 0.62%)</title><rect x="1082.6" y="371.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.6" y="382.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (25 samples, 0.62%)</title><rect x="1082.6" y="387.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (25 samples, 0.62%)</title><rect x="1082.6" y="403.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (25 samples, 0.62%)</title><rect x="1082.6" y="419.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (25 samples, 0.62%)</title><rect x="1082.6" y="435.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1085.6" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (25 samples, 0.62%)</title><rect x="1082.6" y="451.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.6" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (25 samples, 0.62%)</title><rect x="1082.6" y="467.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.6" y="478.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (25 samples, 0.62%)</title><rect x="1082.6" y="483.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (25 samples, 0.62%)</title><rect x="1082.6" y="499.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (25 samples, 0.62%)</title><rect x="1082.6" y="515.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (25 samples, 0.62%)</title><rect x="1082.6" y="531.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (25 samples, 0.62%)</title><rect x="1082.6" y="547.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (25 samples, 0.62%)</title><rect x="1082.6" y="563.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (25 samples, 0.62%)</title><rect x="1082.6" y="579.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (7 samples, 0.17%)</title><rect x="1090.0" y="51.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.0" y="62.0"></text>
</g>
<g>
<title>java/lang/String.chars (7 samples, 0.17%)</title><rect x="1090.0" y="67.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.0" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (7 samples, 0.17%)</title><rect x="1090.0" y="83.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.0" y="94.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (7 samples, 0.17%)</title><rect x="1090.0" y="99.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.0" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1090.0" y="115.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.0" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (7 samples, 0.17%)</title><rect x="1090.0" y="131.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.0" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (7 samples, 0.17%)</title><rect x="1090.0" y="147.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.0" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (7 samples, 0.17%)</title><rect x="1090.0" y="163.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.0" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1090.0" y="179.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.0" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1090.0" y="195.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.format (7 samples, 0.17%)</title><rect x="1090.0" y="211.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="1090.0" y="227.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (7 samples, 0.17%)</title><rect x="1090.0" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="1090.0" y="259.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="1090.0" y="275.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (7 samples, 0.17%)</title><rect x="1090.0" y="291.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="1090.0" y="307.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="1090.0" y="323.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="1090.0" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1090.0" y="355.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1090.0" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.0" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="1090.0" y="387.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.0" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1090.0" y="403.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.0" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1090.0" y="419.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1090.0" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="1090.0" y="451.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1090.0" y="467.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="1090.0" y="483.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="1090.0" y="499.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="1090.0" y="515.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.0" y="526.0"></text>
</g>
<g>
<title>jbyte_arraycopy (6 samples, 0.15%)</title><rect x="1092.0" y="51.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1095.0" y="62.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (6 samples, 0.15%)</title><rect x="1092.0" y="67.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.0" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (6 samples, 0.15%)</title><rect x="1092.0" y="83.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (6 samples, 0.15%)</title><rect x="1092.0" y="99.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.0" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (6 samples, 0.15%)</title><rect x="1092.0" y="115.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.0" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="1092.0" y="131.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.0" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="1092.0" y="147.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="1092.0" y="163.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="1092.0" y="179.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="1092.0" y="195.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="1092.0" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.0" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="1092.0" y="227.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.0" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="1092.0" y="243.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="1092.0" y="259.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="1092.0" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="1092.0" y="291.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="1092.0" y="307.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="1092.0" y="323.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.0" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="1092.0" y="339.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.0" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="1092.0" y="355.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.0" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="1092.0" y="371.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="1092.0" y="387.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="1092.0" y="403.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="1092.0" y="419.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="1092.0" y="435.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="1092.0" y="451.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="1092.0" y="467.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.0" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (49 samples, 1.21%)</title><rect x="1093.8" y="51.0" width="14.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1096.8" y="62.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.15%)</title><rect x="1093.8" y="67.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.8" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.15%)</title><rect x="1093.8" y="83.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.8" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.15%)</title><rect x="1093.8" y="99.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.8" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.15%)</title><rect x="1093.8" y="115.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.8" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (6 samples, 0.15%)</title><rect x="1093.8" y="131.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.8" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="1093.8" y="147.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.8" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (6 samples, 0.15%)</title><rect x="1093.8" y="163.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.15%)</title><rect x="1093.8" y="179.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.15%)</title><rect x="1093.8" y="195.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (6 samples, 0.15%)</title><rect x="1093.8" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.15%)</title><rect x="1093.8" y="227.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.8" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (6 samples, 0.15%)</title><rect x="1093.8" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.8" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (6 samples, 0.15%)</title><rect x="1093.8" y="259.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (6 samples, 0.15%)</title><rect x="1093.8" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (6 samples, 0.15%)</title><rect x="1093.8" y="291.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="1093.8" y="307.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="1093.8" y="323.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="1093.8" y="339.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.8" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="1093.8" y="355.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.8" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="1093.8" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.8" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (6 samples, 0.15%)</title><rect x="1093.8" y="387.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="1093.8" y="403.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.15%)</title><rect x="1093.8" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (6 samples, 0.15%)</title><rect x="1093.8" y="435.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.15%)</title><rect x="1093.8" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.15%)</title><rect x="1093.8" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.15%)</title><rect x="1093.8" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.8" y="494.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (43 samples, 1.07%)</title><rect x="1095.5" y="67.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.5" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (43 samples, 1.07%)</title><rect x="1095.5" y="83.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.5" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (43 samples, 1.07%)</title><rect x="1095.5" y="99.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.5" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (43 samples, 1.07%)</title><rect x="1095.5" y="115.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.5" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.format (43 samples, 1.07%)</title><rect x="1095.5" y="131.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (43 samples, 1.07%)</title><rect x="1095.5" y="147.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.format (43 samples, 1.07%)</title><rect x="1095.5" y="163.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 1.07%)</title><rect x="1095.5" y="179.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (43 samples, 1.07%)</title><rect x="1095.5" y="195.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 1.07%)</title><rect x="1095.5" y="211.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.5" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (43 samples, 1.07%)</title><rect x="1095.5" y="227.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.5" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (43 samples, 1.07%)</title><rect x="1095.5" y="243.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (43 samples, 1.07%)</title><rect x="1095.5" y="259.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (43 samples, 1.07%)</title><rect x="1095.5" y="275.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (43 samples, 1.07%)</title><rect x="1095.5" y="291.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (43 samples, 1.07%)</title><rect x="1095.5" y="307.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (43 samples, 1.07%)</title><rect x="1095.5" y="323.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.5" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (43 samples, 1.07%)</title><rect x="1095.5" y="339.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.5" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (43 samples, 1.07%)</title><rect x="1095.5" y="355.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.5" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (43 samples, 1.07%)</title><rect x="1095.5" y="371.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (43 samples, 1.07%)</title><rect x="1095.5" y="387.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (43 samples, 1.07%)</title><rect x="1095.5" y="403.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (43 samples, 1.07%)</title><rect x="1095.5" y="419.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (43 samples, 1.07%)</title><rect x="1095.5" y="435.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (43 samples, 1.07%)</title><rect x="1095.5" y="451.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (43 samples, 1.07%)</title><rect x="1095.5" y="467.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.newLength (4 samples, 0.10%)</title><rect x="1108.1" y="51.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.1" y="62.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.10%)</title><rect x="1108.1" y="67.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.1" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.10%)</title><rect x="1108.1" y="83.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.10%)</title><rect x="1108.1" y="99.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.10%)</title><rect x="1108.1" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.1" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (4 samples, 0.10%)</title><rect x="1108.1" y="131.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.1" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="1108.1" y="147.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.1" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.format (4 samples, 0.10%)</title><rect x="1108.1" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="1108.1" y="179.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="1108.1" y="195.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="1108.1" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="1108.1" y="227.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="1108.1" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.1" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="1108.1" y="259.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.1" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="1108.1" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.1" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="1108.1" y="291.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="1108.1" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="1108.1" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="1108.1" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.1" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="1108.1" y="355.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.1" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="1108.1" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.1" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="1108.1" y="387.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="1108.1" y="403.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="1108.1" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="1108.1" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="1108.1" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="1108.1" y="467.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="1108.1" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.1" y="494.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (18 samples, 0.45%)</title><rect x="1109.3" y="51.0" width="5.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1112.3" y="62.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (18 samples, 0.45%)</title><rect x="1109.3" y="67.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1112.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.format (18 samples, 0.45%)</title><rect x="1109.3" y="83.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.3" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.format (18 samples, 0.45%)</title><rect x="1109.3" y="99.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.format (18 samples, 0.45%)</title><rect x="1109.3" y="115.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.45%)</title><rect x="1109.3" y="131.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (18 samples, 0.45%)</title><rect x="1109.3" y="147.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.45%)</title><rect x="1109.3" y="163.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.3" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (18 samples, 0.45%)</title><rect x="1109.3" y="179.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (18 samples, 0.45%)</title><rect x="1109.3" y="195.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1112.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (18 samples, 0.45%)</title><rect x="1109.3" y="211.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1112.3" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (18 samples, 0.45%)</title><rect x="1109.3" y="227.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (18 samples, 0.45%)</title><rect x="1109.3" y="243.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (18 samples, 0.45%)</title><rect x="1109.3" y="259.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.45%)</title><rect x="1109.3" y="275.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.3" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.45%)</title><rect x="1109.3" y="291.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1112.3" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (18 samples, 0.45%)</title><rect x="1109.3" y="307.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.3" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (18 samples, 0.45%)</title><rect x="1109.3" y="323.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18 samples, 0.45%)</title><rect x="1109.3" y="339.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (18 samples, 0.45%)</title><rect x="1109.3" y="355.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18 samples, 0.45%)</title><rect x="1109.3" y="371.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18 samples, 0.45%)</title><rect x="1109.3" y="387.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18 samples, 0.45%)</title><rect x="1109.3" y="403.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (18 samples, 0.45%)</title><rect x="1109.3" y="419.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.3" y="430.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.02%)</title><rect x="1114.5" y="51.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1117.5" y="62.0"></text>
</g>
<g>
<title>metaspace::VirtualSpaceList::vslist_class() (1 samples, 0.02%)</title><rect x="1114.8" y="51.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.8" y="62.0"></text>
</g>
<g>
<title>MetaspaceUtils::print_on(outputStream*) (1 samples, 0.02%)</title><rect x="1114.8" y="67.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.8" y="78.0"></text>
</g>
<g>
<title>GCHeapLog::log_heap(CollectedHeap*, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1114.8" y="83.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.8" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="1114.8" y="99.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1117.8" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1114.8" y="115.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.8" y="126.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1114.8" y="131.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.8" y="142.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1114.8" y="147.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.8" y="158.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="1114.8" y="163.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.8" y="174.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="1114.8" y="179.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1117.8" y="190.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1114.8" y="195.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.8" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1114.8" y="211.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.8" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1114.8" y="227.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1117.8" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1114.8" y="243.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1117.8" y="254.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (6 samples, 0.15%)</title><rect x="1115.1" y="51.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1118.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.15%)</title><rect x="1115.1" y="67.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.1" y="78.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.12%)</title><rect x="1115.1" y="83.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.1" y="94.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.12%)</title><rect x="1115.1" y="99.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.1" y="110.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.12%)</title><rect x="1115.1" y="115.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1118.1" y="126.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="1115.1" y="131.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.1" y="142.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="1115.1" y="147.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.1" y="158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="1115.1" y="163.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1118.1" y="174.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.05%)</title><rect x="1115.1" y="179.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1118.1" y="190.0"></text>
</g>
<g>
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.05%)</title><rect x="1115.1" y="195.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1118.1" y="206.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.05%)</title><rect x="1115.1" y="211.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.1" y="222.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (2 samples, 0.05%)</title><rect x="1115.1" y="227.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1118.1" y="238.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1115.1" y="243.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.1" y="254.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="1115.1" y="259.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.1" y="270.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="1115.1" y="275.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1118.1" y="286.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1115.1" y="291.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1118.1" y="302.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1115.1" y="307.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1118.1" y="318.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (3 samples, 0.07%)</title><rect x="1115.7" y="179.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1118.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="1115.7" y="195.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1118.7" y="206.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1116.6" y="83.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1119.6" y="94.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1116.6" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.6" y="110.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1116.6" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1119.6" y="126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1116.6" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1119.6" y="142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1116.6" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.6" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="1116.6" y="163.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1119.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1116.6" y="179.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1119.6" y="190.0"></text>
</g>
<g>
<title>org/openjdk/jmh/infra/Blackhole.consume (10 samples, 0.25%)</title><rect x="1116.9" y="51.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.9" y="62.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (10 samples, 0.25%)</title><rect x="1116.9" y="67.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.9" y="78.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (10 samples, 0.25%)</title><rect x="1116.9" y="83.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (10 samples, 0.25%)</title><rect x="1116.9" y="99.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="1116.9" y="115.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.25%)</title><rect x="1116.9" y="131.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.9" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.25%)</title><rect x="1116.9" y="147.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.9" y="158.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="1116.9" y="163.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.9" y="174.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (10 samples, 0.25%)</title><rect x="1116.9" y="179.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="1116.9" y="195.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (10 samples, 0.25%)</title><rect x="1116.9" y="211.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (10 samples, 0.25%)</title><rect x="1116.9" y="227.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.25%)</title><rect x="1116.9" y="243.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.25%)</title><rect x="1116.9" y="259.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.9" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.25%)</title><rect x="1116.9" y="275.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (1 samples, 0.02%)</title><rect x="1119.8" y="51.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.8" y="62.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="1119.8" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.8" y="78.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (1 samples, 0.02%)</title><rect x="1119.8" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="1119.8" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1119.8" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1119.8" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.8" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1119.8" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.8" y="158.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1119.8" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.8" y="174.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="1119.8" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1119.8" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="1119.8" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="1119.8" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="1119.8" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="1119.8" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="1119.8" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (7 samples, 0.17%)</title><rect x="1120.1" y="51.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.1" y="62.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (7 samples, 0.17%)</title><rect x="1120.1" y="67.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.1" y="78.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (7 samples, 0.17%)</title><rect x="1120.1" y="83.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="1120.1" y="99.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1120.1" y="115.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="1120.1" y="131.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.1" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="1120.1" y="147.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.1" y="158.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1120.1" y="163.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.1" y="174.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (7 samples, 0.17%)</title><rect x="1120.1" y="179.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1120.1" y="195.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (7 samples, 0.17%)</title><rect x="1120.1" y="211.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (7 samples, 0.17%)</title><rect x="1120.1" y="227.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.17%)</title><rect x="1120.1" y="243.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.17%)</title><rect x="1120.1" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.17%)</title><rect x="1120.1" y="275.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.1" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (13 samples, 0.32%)</title><rect x="1122.1" y="51.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.1" y="62.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (13 samples, 0.32%)</title><rect x="1122.1" y="67.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (13 samples, 0.32%)</title><rect x="1122.1" y="83.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="1122.1" y="99.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.32%)</title><rect x="1122.1" y="115.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.1" y="126.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.32%)</title><rect x="1122.1" y="131.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="142.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="1122.1" y="147.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.1" y="158.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (13 samples, 0.32%)</title><rect x="1122.1" y="163.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="1122.1" y="179.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (13 samples, 0.32%)</title><rect x="1122.1" y="195.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (13 samples, 0.32%)</title><rect x="1122.1" y="211.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13 samples, 0.32%)</title><rect x="1122.1" y="227.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13 samples, 0.32%)</title><rect x="1122.1" y="243.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13 samples, 0.32%)</title><rect x="1122.1" y="259.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.1" y="270.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="1125.9" y="51.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1128.9" y="62.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="1125.9" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1128.9" y="78.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="1125.9" y="83.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1128.9" y="94.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="1125.9" y="99.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.9" y="110.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1125.9" y="115.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1128.9" y="126.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1125.9" y="131.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.9" y="142.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (2 samples, 0.05%)</title><rect x="1125.9" y="147.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1128.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1125.9" y="163.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1128.9" y="174.0"></text>
</g>
<g>
<title>pthread_cond_init@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="1126.5" y="51.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1129.5" y="62.0"></text>
</g>
<g>
<title>TaskTerminator::TaskTerminator(unsigned int, TaskQueueSetSuper*) (1 samples, 0.02%)</title><rect x="1126.5" y="67.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1129.5" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool) (1 samples, 0.02%)</title><rect x="1126.5" y="83.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.5" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="1126.5" y="99.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.5" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1126.5" y="115.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1129.5" y="126.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1126.5" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.5" y="142.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1126.5" y="147.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.5" y="158.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="1126.5" y="163.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.5" y="174.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="1126.5" y="179.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1129.5" y="190.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1126.5" y="195.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1129.5" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1126.5" y="211.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.5" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1126.5" y="227.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1129.5" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1126.5" y="243.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1129.5" y="254.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1126.8" y="51.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1129.8" y="62.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1126.8" y="67.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1129.8" y="78.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1126.8" y="83.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.8" y="94.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1126.8" y="99.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1129.8" y="110.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1126.8" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1129.8" y="126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1126.8" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1129.8" y="142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1126.8" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1129.8" y="158.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="1126.8" y="163.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1129.8" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1126.8" y="179.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1129.8" y="190.0"></text>
</g>
<g>
<title>sun/util/locale/BaseLocale.equals (51 samples, 1.26%)</title><rect x="1127.1" y="51.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.1" y="62.0"></text>
</g>
<g>
<title>java/util/Locale.equals (51 samples, 1.26%)</title><rect x="1127.1" y="67.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (51 samples, 1.26%)</title><rect x="1127.1" y="83.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.1" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleResources (18 samples, 0.45%)</title><rect x="1127.1" y="99.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.1" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (18 samples, 0.45%)</title><rect x="1127.1" y="115.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.1" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (18 samples, 0.45%)</title><rect x="1127.1" y="131.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.1" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (18 samples, 0.45%)</title><rect x="1127.1" y="147.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.1" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (18 samples, 0.45%)</title><rect x="1127.1" y="163.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.1" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (18 samples, 0.45%)</title><rect x="1127.1" y="179.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.1" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (18 samples, 0.45%)</title><rect x="1127.1" y="195.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.1" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (18 samples, 0.45%)</title><rect x="1127.1" y="211.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (18 samples, 0.45%)</title><rect x="1127.1" y="227.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.45%)</title><rect x="1127.1" y="243.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (18 samples, 0.45%)</title><rect x="1127.1" y="259.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.45%)</title><rect x="1127.1" y="275.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.1" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (18 samples, 0.45%)</title><rect x="1127.1" y="291.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.1" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (18 samples, 0.45%)</title><rect x="1127.1" y="307.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.1" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (18 samples, 0.45%)</title><rect x="1127.1" y="323.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.1" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (18 samples, 0.45%)</title><rect x="1127.1" y="339.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (18 samples, 0.45%)</title><rect x="1127.1" y="355.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (18 samples, 0.45%)</title><rect x="1127.1" y="371.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.45%)</title><rect x="1127.1" y="387.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.45%)</title><rect x="1127.1" y="403.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.1" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (18 samples, 0.45%)</title><rect x="1127.1" y="419.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.1" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (18 samples, 0.45%)</title><rect x="1127.1" y="435.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18 samples, 0.45%)</title><rect x="1127.1" y="451.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (18 samples, 0.45%)</title><rect x="1127.1" y="467.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18 samples, 0.45%)</title><rect x="1127.1" y="483.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18 samples, 0.45%)</title><rect x="1127.1" y="499.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18 samples, 0.45%)</title><rect x="1127.1" y="515.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (18 samples, 0.45%)</title><rect x="1127.1" y="531.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.1" y="542.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (33 samples, 0.82%)</title><rect x="1132.4" y="99.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.4" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (33 samples, 0.82%)</title><rect x="1132.4" y="115.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.4" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (33 samples, 0.82%)</title><rect x="1132.4" y="131.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.4" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (33 samples, 0.82%)</title><rect x="1132.4" y="147.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.4" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (33 samples, 0.82%)</title><rect x="1132.4" y="163.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (33 samples, 0.82%)</title><rect x="1132.4" y="179.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.82%)</title><rect x="1132.4" y="195.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (33 samples, 0.82%)</title><rect x="1132.4" y="211.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.82%)</title><rect x="1132.4" y="227.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.4" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (33 samples, 0.82%)</title><rect x="1132.4" y="243.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.4" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (33 samples, 0.82%)</title><rect x="1132.4" y="259.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.4" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (33 samples, 0.82%)</title><rect x="1132.4" y="275.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.4" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (33 samples, 0.82%)</title><rect x="1132.4" y="291.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (33 samples, 0.82%)</title><rect x="1132.4" y="307.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (33 samples, 0.82%)</title><rect x="1132.4" y="323.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (33 samples, 0.82%)</title><rect x="1132.4" y="339.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.4" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (33 samples, 0.82%)</title><rect x="1132.4" y="355.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.4" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (33 samples, 0.82%)</title><rect x="1132.4" y="371.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.4" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (33 samples, 0.82%)</title><rect x="1132.4" y="387.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (33 samples, 0.82%)</title><rect x="1132.4" y="403.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (33 samples, 0.82%)</title><rect x="1132.4" y="419.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (33 samples, 0.82%)</title><rect x="1132.4" y="435.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (33 samples, 0.82%)</title><rect x="1132.4" y="451.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (33 samples, 0.82%)</title><rect x="1132.4" y="467.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1135.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (33 samples, 0.82%)</title><rect x="1132.4" y="483.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.4" y="494.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlpha (3 samples, 0.07%)</title><rect x="1142.0" y="51.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.0" y="62.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumeric (3 samples, 0.07%)</title><rect x="1142.0" y="67.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.0" y="78.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (3 samples, 0.07%)</title><rect x="1142.0" y="83.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.0" y="94.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (3 samples, 0.07%)</title><rect x="1142.0" y="99.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.0" y="110.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (3 samples, 0.07%)</title><rect x="1142.0" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.0" y="126.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (3 samples, 0.07%)</title><rect x="1142.0" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.0" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (3 samples, 0.07%)</title><rect x="1142.0" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.0" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1142.0" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.0" y="174.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (3 samples, 0.07%)</title><rect x="1142.0" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.0" y="190.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (3 samples, 0.07%)</title><rect x="1142.0" y="195.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.0" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (3 samples, 0.07%)</title><rect x="1142.0" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.0" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1142.0" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.0" y="238.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1142.0" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.07%)</title><rect x="1142.0" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="1142.0" y="275.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (3 samples, 0.07%)</title><rect x="1142.0" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="1142.0" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.0" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (3 samples, 0.07%)</title><rect x="1142.0" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.0" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (3 samples, 0.07%)</title><rect x="1142.0" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.0" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="1142.0" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.0" y="366.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (3 samples, 0.07%)</title><rect x="1142.0" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="1142.0" y="387.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="1142.0" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="1142.0" y="419.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="1142.0" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.0" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="1142.0" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.0" y="462.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="1142.0" y="467.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="1142.0" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="1142.0" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="1142.0" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="1142.0" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="1142.0" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="1142.0" y="563.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.0" y="574.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumeric (9 samples, 0.22%)</title><rect x="1142.9" y="51.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.9" y="62.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (9 samples, 0.22%)</title><rect x="1142.9" y="67.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.9" y="78.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (9 samples, 0.22%)</title><rect x="1142.9" y="83.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.9" y="94.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (9 samples, 0.22%)</title><rect x="1142.9" y="99.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.9" y="110.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (9 samples, 0.22%)</title><rect x="1142.9" y="115.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.9" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (9 samples, 0.22%)</title><rect x="1142.9" y="131.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.9" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1142.9" y="147.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.9" y="158.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (9 samples, 0.22%)</title><rect x="1142.9" y="163.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.9" y="174.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (9 samples, 0.22%)</title><rect x="1142.9" y="179.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.9" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (9 samples, 0.22%)</title><rect x="1142.9" y="195.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.9" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1142.9" y="211.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.9" y="222.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1142.9" y="227.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.format (9 samples, 0.22%)</title><rect x="1142.9" y="243.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="1142.9" y="259.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (9 samples, 0.22%)</title><rect x="1142.9" y="275.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="1142.9" y="291.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.9" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (9 samples, 0.22%)</title><rect x="1142.9" y="307.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.9" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (9 samples, 0.22%)</title><rect x="1142.9" y="323.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.9" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (9 samples, 0.22%)</title><rect x="1142.9" y="339.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.9" y="350.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (9 samples, 0.22%)</title><rect x="1142.9" y="355.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.22%)</title><rect x="1142.9" y="371.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="1142.9" y="387.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.22%)</title><rect x="1142.9" y="403.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.22%)</title><rect x="1142.9" y="419.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.9" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="1142.9" y="435.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.9" y="446.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (9 samples, 0.22%)</title><rect x="1142.9" y="451.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="1142.9" y="467.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.22%)</title><rect x="1142.9" y="483.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (9 samples, 0.22%)</title><rect x="1142.9" y="499.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.22%)</title><rect x="1142.9" y="515.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.22%)</title><rect x="1142.9" y="531.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.22%)</title><rect x="1142.9" y="547.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.9" y="558.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (30 samples, 0.74%)</title><rect x="1145.5" y="51.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.5" y="62.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (30 samples, 0.74%)</title><rect x="1145.5" y="67.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.5" y="78.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (30 samples, 0.74%)</title><rect x="1145.5" y="83.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.5" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.findRegionOverride (30 samples, 0.74%)</title><rect x="1145.5" y="99.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.5" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (30 samples, 0.74%)</title><rect x="1145.5" y="115.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.5" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (30 samples, 0.74%)</title><rect x="1145.5" y="131.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1148.5" y="142.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (30 samples, 0.74%)</title><rect x="1145.5" y="147.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.5" y="158.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (30 samples, 0.74%)</title><rect x="1145.5" y="163.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.5" y="174.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (30 samples, 0.74%)</title><rect x="1145.5" y="179.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.5" y="190.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (30 samples, 0.74%)</title><rect x="1145.5" y="195.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.5" y="206.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (30 samples, 0.74%)</title><rect x="1145.5" y="211.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.format (30 samples, 0.74%)</title><rect x="1145.5" y="227.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.74%)</title><rect x="1145.5" y="243.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (30 samples, 0.74%)</title><rect x="1145.5" y="259.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.74%)</title><rect x="1145.5" y="275.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (30 samples, 0.74%)</title><rect x="1145.5" y="291.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.5" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (30 samples, 0.74%)</title><rect x="1145.5" y="307.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.5" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (30 samples, 0.74%)</title><rect x="1145.5" y="323.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.5" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (30 samples, 0.74%)</title><rect x="1145.5" y="339.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (30 samples, 0.74%)</title><rect x="1145.5" y="355.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (30 samples, 0.74%)</title><rect x="1145.5" y="371.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (30 samples, 0.74%)</title><rect x="1145.5" y="387.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (30 samples, 0.74%)</title><rect x="1145.5" y="403.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.5" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (30 samples, 0.74%)</title><rect x="1145.5" y="419.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.5" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (30 samples, 0.74%)</title><rect x="1145.5" y="435.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (30 samples, 0.74%)</title><rect x="1145.5" y="451.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (30 samples, 0.74%)</title><rect x="1145.5" y="467.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (30 samples, 0.74%)</title><rect x="1145.5" y="483.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (30 samples, 0.74%)</title><rect x="1145.5" y="499.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1148.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (30 samples, 0.74%)</title><rect x="1145.5" y="515.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (30 samples, 0.74%)</title><rect x="1145.5" y="531.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.5" y="542.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (21 samples, 0.52%)</title><rect x="1154.3" y="51.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.3" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (21 samples, 0.52%)</title><rect x="1154.3" y="67.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.3" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (21 samples, 0.52%)</title><rect x="1154.3" y="83.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.3" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (21 samples, 0.52%)</title><rect x="1154.3" y="99.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.3" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (21 samples, 0.52%)</title><rect x="1154.3" y="115.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (21 samples, 0.52%)</title><rect x="1154.3" y="131.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.52%)</title><rect x="1154.3" y="147.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (21 samples, 0.52%)</title><rect x="1154.3" y="163.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.52%)</title><rect x="1154.3" y="179.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.3" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (21 samples, 0.52%)</title><rect x="1154.3" y="195.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.3" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (21 samples, 0.52%)</title><rect x="1154.3" y="211.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.3" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (21 samples, 0.52%)</title><rect x="1154.3" y="227.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.3" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (21 samples, 0.52%)</title><rect x="1154.3" y="243.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (21 samples, 0.52%)</title><rect x="1154.3" y="259.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (21 samples, 0.52%)</title><rect x="1154.3" y="275.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.52%)</title><rect x="1154.3" y="291.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.3" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.52%)</title><rect x="1154.3" y="307.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.3" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (21 samples, 0.52%)</title><rect x="1154.3" y="323.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.3" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (21 samples, 0.52%)</title><rect x="1154.3" y="339.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (21 samples, 0.52%)</title><rect x="1154.3" y="355.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (21 samples, 0.52%)</title><rect x="1154.3" y="371.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (21 samples, 0.52%)</title><rect x="1154.3" y="387.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 0.52%)</title><rect x="1154.3" y="403.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 0.52%)</title><rect x="1154.3" y="419.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 0.52%)</title><rect x="1154.3" y="435.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.3" y="446.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getDecimalFormatSymbolsProvider (14 samples, 0.35%)</title><rect x="1160.5" y="51.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.5" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (14 samples, 0.35%)</title><rect x="1160.5" y="67.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.5" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (14 samples, 0.35%)</title><rect x="1160.5" y="83.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1163.5" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (14 samples, 0.35%)</title><rect x="1160.5" y="99.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1163.5" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (14 samples, 0.35%)</title><rect x="1160.5" y="115.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (14 samples, 0.35%)</title><rect x="1160.5" y="131.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.35%)</title><rect x="1160.5" y="147.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (14 samples, 0.35%)</title><rect x="1160.5" y="163.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.35%)</title><rect x="1160.5" y="179.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.5" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (14 samples, 0.35%)</title><rect x="1160.5" y="195.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.5" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (14 samples, 0.35%)</title><rect x="1160.5" y="211.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.5" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (14 samples, 0.35%)</title><rect x="1160.5" y="227.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.5" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (14 samples, 0.35%)</title><rect x="1160.5" y="243.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (14 samples, 0.35%)</title><rect x="1160.5" y="259.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="1160.5" y="275.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.35%)</title><rect x="1160.5" y="291.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.5" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.35%)</title><rect x="1160.5" y="307.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.5" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="1160.5" y="323.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.5" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (14 samples, 0.35%)</title><rect x="1160.5" y="339.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="1160.5" y="355.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (14 samples, 0.35%)</title><rect x="1160.5" y="371.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (14 samples, 0.35%)</title><rect x="1160.5" y="387.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.35%)</title><rect x="1160.5" y="403.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.35%)</title><rect x="1160.5" y="419.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.35%)</title><rect x="1160.5" y="435.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.5" y="446.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleResources (4 samples, 0.10%)</title><rect x="1164.6" y="51.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.6" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.10%)</title><rect x="1164.6" y="67.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.6" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1164.6" y="83.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.6" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.10%)</title><rect x="1164.6" y="99.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.10%)</title><rect x="1164.6" y="115.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.6" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.10%)</title><rect x="1164.6" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.6" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1164.6" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.6" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1164.6" y="163.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.10%)</title><rect x="1164.6" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="1164.6" y="195.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (4 samples, 0.10%)</title><rect x="1164.6" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="1164.6" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.6" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (4 samples, 0.10%)</title><rect x="1164.6" y="243.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.6" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (4 samples, 0.10%)</title><rect x="1164.6" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.6" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (4 samples, 0.10%)</title><rect x="1164.6" y="275.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.6" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (4 samples, 0.10%)</title><rect x="1164.6" y="291.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 0.10%)</title><rect x="1164.6" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="1164.6" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="1164.6" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.6" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="1164.6" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.6" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="1164.6" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.6" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (4 samples, 0.10%)</title><rect x="1164.6" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="1164.6" y="403.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (4 samples, 0.10%)</title><rect x="1164.6" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (4 samples, 0.10%)</title><rect x="1164.6" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="1164.6" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="1164.6" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.10%)</title><rect x="1164.6" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.6" y="494.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (80 samples, 1.98%)</title><rect x="1165.7" y="51.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.7" y="62.0">s..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (37 samples, 0.92%)</title><rect x="1165.7" y="67.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.7" y="78.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (37 samples, 0.92%)</title><rect x="1165.7" y="83.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.7" y="94.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (37 samples, 0.92%)</title><rect x="1165.7" y="99.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.7" y="110.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (37 samples, 0.92%)</title><rect x="1165.7" y="115.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.format (37 samples, 0.92%)</title><rect x="1165.7" y="131.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.92%)</title><rect x="1165.7" y="147.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (37 samples, 0.92%)</title><rect x="1165.7" y="163.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.92%)</title><rect x="1165.7" y="179.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.7" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (37 samples, 0.92%)</title><rect x="1165.7" y="195.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (37 samples, 0.92%)</title><rect x="1165.7" y="211.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (37 samples, 0.92%)</title><rect x="1165.7" y="227.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (37 samples, 0.92%)</title><rect x="1165.7" y="243.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (37 samples, 0.92%)</title><rect x="1165.7" y="259.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (37 samples, 0.92%)</title><rect x="1165.7" y="275.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (37 samples, 0.92%)</title><rect x="1165.7" y="291.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.7" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (37 samples, 0.92%)</title><rect x="1165.7" y="307.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.7" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (37 samples, 0.92%)</title><rect x="1165.7" y="323.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.7" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (37 samples, 0.92%)</title><rect x="1165.7" y="339.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (37 samples, 0.92%)</title><rect x="1165.7" y="355.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (37 samples, 0.92%)</title><rect x="1165.7" y="371.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (37 samples, 0.92%)</title><rect x="1165.7" y="387.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (37 samples, 0.92%)</title><rect x="1165.7" y="403.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (37 samples, 0.92%)</title><rect x="1165.7" y="419.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (37 samples, 0.92%)</title><rect x="1165.7" y="435.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.7" y="446.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (43 samples, 1.07%)</title><rect x="1176.5" y="67.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.5" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (43 samples, 1.07%)</title><rect x="1176.5" y="83.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.5" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (43 samples, 1.07%)</title><rect x="1176.5" y="99.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.5" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (43 samples, 1.07%)</title><rect x="1176.5" y="115.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.5" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (43 samples, 1.07%)</title><rect x="1176.5" y="131.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.5" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (43 samples, 1.07%)</title><rect x="1176.5" y="147.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.5" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (43 samples, 1.07%)</title><rect x="1176.5" y="163.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (43 samples, 1.07%)</title><rect x="1176.5" y="179.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 1.07%)</title><rect x="1176.5" y="195.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (43 samples, 1.07%)</title><rect x="1176.5" y="211.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 1.07%)</title><rect x="1176.5" y="227.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.5" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (43 samples, 1.07%)</title><rect x="1176.5" y="243.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.5" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (43 samples, 1.07%)</title><rect x="1176.5" y="259.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.5" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (43 samples, 1.07%)</title><rect x="1176.5" y="275.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.5" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (43 samples, 1.07%)</title><rect x="1176.5" y="291.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (43 samples, 1.07%)</title><rect x="1176.5" y="307.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (43 samples, 1.07%)</title><rect x="1176.5" y="323.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (43 samples, 1.07%)</title><rect x="1176.5" y="339.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.5" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (43 samples, 1.07%)</title><rect x="1176.5" y="355.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.5" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (43 samples, 1.07%)</title><rect x="1176.5" y="371.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1179.5" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (43 samples, 1.07%)</title><rect x="1176.5" y="387.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (43 samples, 1.07%)</title><rect x="1176.5" y="403.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (43 samples, 1.07%)</title><rect x="1176.5" y="419.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (43 samples, 1.07%)</title><rect x="1176.5" y="435.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (43 samples, 1.07%)</title><rect x="1176.5" y="451.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (43 samples, 1.07%)</title><rect x="1176.5" y="467.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (43 samples, 1.07%)</title><rect x="1176.5" y="483.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.5" y="494.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (2 samples, 0.05%)</title><rect x="1189.1" y="51.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.1" y="62.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.05%)</title><rect x="1189.1" y="67.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.1" y="78.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1189.1" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.1" y="94.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.05%)</title><rect x="1189.1" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.1" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.05%)</title><rect x="1189.1" y="115.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.1" y="126.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.05%)</title><rect x="1189.1" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.1" y="142.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1189.1" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.1" y="158.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1189.1" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.05%)</title><rect x="1189.1" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1189.1" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c30000.invoke (2 samples, 0.05%)</title><rect x="1189.1" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1189.1" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.1" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/Record.toString (2 samples, 0.05%)</title><rect x="1189.1" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.1" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.record_to_string (2 samples, 0.05%)</title><rect x="1189.1" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.1" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="1189.1" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.1" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_record_to_string_jmhTest.record_to_string_AverageTime (2 samples, 0.05%)</title><rect x="1189.1" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="1189.1" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1189.1" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1189.1" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.1" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="1189.1" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.1" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="1189.1" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.1" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="1189.1" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="1189.1" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="1189.1" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="1189.1" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="1189.1" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="1189.1" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="1189.1" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.1" y="494.0"></text>
</g>
<g>
<title>unlink_chunk.isra.0 (1 samples, 0.02%)</title><rect x="1189.7" y="51.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.7" y="62.0"></text>
</g>
</g>
</svg>

