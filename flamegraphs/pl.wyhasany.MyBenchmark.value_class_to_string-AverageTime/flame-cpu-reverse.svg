<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (4,073 samples, 100.00%)</title><rect x="10.0" y="35.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="46.0">all</text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="10.0" y="51.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="10.0" y="67.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool, bool) (1 samples, 0.02%)</title><rect x="10.0" y="83.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0] (1 samples, 0.02%)</title><rect x="10.0" y="99.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="10.0" y="115.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="10.0" y="131.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="10.0" y="147.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="10.0" y="163.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="10.0" y="179.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="10.0" y="195.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="10.0" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="227.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="10.0" y="243.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>G1CodeRootSet::clear() (1 samples, 0.02%)</title><rect x="10.3" y="51.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="62.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.02%)</title><rect x="10.3" y="67.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="78.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (1 samples, 0.02%)</title><rect x="10.3" y="83.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="94.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="10.3" y="99.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="110.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (1 samples, 0.02%)</title><rect x="10.3" y="115.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="126.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="10.3" y="131.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="142.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="10.3" y="147.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.3" y="158.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="10.3" y="163.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.3" y="174.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="10.3" y="179.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="10.3" y="195.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.3" y="206.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="10.3" y="211.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.3" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::collection_set_iterate_increment_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) (1 samples, 0.02%)</title><rect x="10.6" y="51.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.6" y="62.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="10.6" y="67.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.6" y="78.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="10.6" y="83.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.6" y="94.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="10.6" y="99.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.6" y="110.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="10.6" y="115.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.6" y="126.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="10.6" y="131.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.6" y="142.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (3 samples, 0.07%)</title><rect x="10.9" y="51.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.9" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (2 samples, 0.05%)</title><rect x="10.9" y="67.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.9" y="78.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="10.9" y="83.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.9" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="10.9" y="99.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.9" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="10.9" y="115.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.9" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="10.9" y="131.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.9" y="142.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="10.9" y="147.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.9" y="158.0"></text>
</g>
<g>
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (1 samples, 0.02%)</title><rect x="11.2" y="83.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.2" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="11.2" y="99.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.2" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="11.2" y="115.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.2" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="11.2" y="131.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.2" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="11.2" y="147.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.2" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="11.2" y="163.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="14.2" y="174.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="11.4" y="67.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.4" y="78.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="11.4" y="83.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.4" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="11.4" y="99.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.4" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="11.4" y="115.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.4" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="11.4" y="131.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="14.4" y="142.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="11.4" y="147.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="14.4" y="158.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (2 samples, 0.05%)</title><rect x="11.7" y="51.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.7" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (2 samples, 0.05%)</title><rect x="11.7" y="67.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.7" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (2 samples, 0.05%)</title><rect x="11.7" y="83.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.7" y="94.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="11.7" y="99.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="11.7" y="115.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.7" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="11.7" y="131.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.7" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="11.7" y="147.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.7" y="158.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="11.7" y="163.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.7" y="174.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (4 samples, 0.10%)</title><rect x="12.3" y="51.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.3" y="62.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (4 samples, 0.10%)</title><rect x="12.3" y="67.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.3" y="78.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (4 samples, 0.10%)</title><rect x="12.3" y="83.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.3" y="94.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (4 samples, 0.10%)</title><rect x="12.3" y="99.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.3" y="110.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (4 samples, 0.10%)</title><rect x="12.3" y="115.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.3" y="126.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (4 samples, 0.10%)</title><rect x="12.3" y="131.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.3" y="142.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (4 samples, 0.10%)</title><rect x="12.3" y="147.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.3" y="158.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.10%)</title><rect x="12.3" y="163.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.3" y="174.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.10%)</title><rect x="12.3" y="179.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.3" y="190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.10%)</title><rect x="12.3" y="195.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="15.3" y="206.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.10%)</title><rect x="12.3" y="211.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="15.3" y="222.0"></text>
</g>
<g>
<title>G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker(G1GCPhaseTimes*, G1GCPhaseTimes::GCParPhases, unsigned int, bool) (1 samples, 0.02%)</title><rect x="13.5" y="51.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.5" y="62.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="13.5" y="67.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.5" y="78.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="13.5" y="83.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.5" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="13.5" y="99.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.5" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="13.5" y="115.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.5" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="13.5" y="131.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.5" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="13.5" y="147.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.5" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="13.5" y="163.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="16.5" y="174.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="13.5" y="179.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="16.5" y="190.0"></text>
</g>
<g>
<title>G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker() (1 samples, 0.02%)</title><rect x="13.8" y="51.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.8" y="62.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="13.8" y="67.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.8" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="13.8" y="83.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.8" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="13.8" y="99.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.8" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="13.8" y="115.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.8" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="13.8" y="131.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.8" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="13.8" y="147.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="16.8" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="13.8" y="163.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="16.8" y="174.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*) (3 samples, 0.07%)</title><rect x="14.1" y="51.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.1" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (3 samples, 0.07%)</title><rect x="14.1" y="67.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.1" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (3 samples, 0.07%)</title><rect x="14.1" y="83.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.1" y="94.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="14.1" y="99.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.1" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="14.1" y="115.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.1" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.07%)</title><rect x="14.1" y="131.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.1" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="14.1" y="147.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="17.1" y="158.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="14.1" y="163.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="17.1" y="174.0"></text>
</g>
<g>
<title>G1MonitoringSupport::update_eden_size() (1 samples, 0.02%)</title><rect x="14.9" y="51.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.9" y="62.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="14.9" y="67.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.9" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="14.9" y="83.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.9" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="14.9" y="99.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.9" y="110.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="14.9" y="115.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.9" y="126.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="14.9" y="131.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.9" y="142.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="14.9" y="147.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.9" y="158.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="14.9" y="163.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="14.9" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="14.9" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (1 samples, 0.02%)</title><rect x="14.9" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="14.9" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (1 samples, 0.02%)</title><rect x="14.9" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.9" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (1 samples, 0.02%)</title><rect x="14.9" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.9" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="14.9" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (1 samples, 0.02%)</title><rect x="14.9" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="14.9" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="14.9" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="14.9" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="14.9" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="14.9" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.9" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="14.9" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="14.9" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="14.9" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="14.9" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="14.9" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="14.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="14.9" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.9" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet&lt;OverflowTaskQueue&lt;ScannerTask, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*) (1 samples, 0.02%)</title><rect x="15.2" y="51.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.2" y="62.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="15.2" y="67.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.2" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="15.2" y="83.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.2" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="15.2" y="99.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.2" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="15.2" y="115.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.2" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="15.2" y="131.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.2" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="15.2" y="147.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="18.2" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="15.2" y="163.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="18.2" y="174.0"></text>
</g>
<g>
<title>G1ParScanThreadState::~G1ParScanThreadState() (1 samples, 0.02%)</title><rect x="15.5" y="51.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.5" y="62.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::flush() (1 samples, 0.02%)</title><rect x="15.5" y="67.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.5" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="15.5" y="83.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.5" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="15.5" y="99.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.5" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="15.5" y="115.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.5" y="126.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="15.5" y="131.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.5" y="142.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="15.5" y="147.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.5" y="158.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="15.5" y="163.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.5" y="174.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="15.5" y="179.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.5" y="190.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="15.5" y="195.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.5" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="15.5" y="211.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.5" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="15.5" y="227.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.5" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="15.5" y="243.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="18.5" y="254.0"></text>
</g>
<g>
<title>G1Policy::phase_times() const (1 samples, 0.02%)</title><rect x="15.8" y="51.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.8" y="62.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="15.8" y="67.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="18.8" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="15.8" y="83.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.8" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="15.8" y="99.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.8" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="15.8" y="115.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.8" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="15.8" y="131.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.8" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="15.8" y="147.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="18.8" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="15.8" y="163.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="18.8" y="174.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool) (1 samples, 0.02%)</title><rect x="16.1" y="51.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.1" y="62.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="16.1" y="67.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.1" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="16.1" y="83.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="19.1" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="16.1" y="99.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.1" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="16.1" y="115.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.1" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="16.1" y="131.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="19.1" y="142.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="16.1" y="147.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="19.1" y="158.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="16.4" y="51.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.4" y="62.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="16.4" y="67.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.4" y="78.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="16.4" y="83.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.4" y="94.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="16.4" y="99.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="19.4" y="110.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="16.4" y="115.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="19.4" y="126.0"></text>
</g>
<g>
<title>G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*) (8 samples, 0.20%)</title><rect x="16.7" y="51.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.7" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="16.7" y="67.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.7" y="78.0"></text>
</g>
<g>
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (1 samples, 0.02%)</title><rect x="16.7" y="83.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="19.7" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="16.7" y="99.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.7" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="16.7" y="115.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.7" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="16.7" y="131.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="19.7" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="16.7" y="147.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="19.7" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="16.7" y="163.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="19.7" y="174.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (7 samples, 0.17%)</title><rect x="17.0" y="67.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.0" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (7 samples, 0.17%)</title><rect x="17.0" y="83.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.0" y="94.0"></text>
</g>
<g>
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (7 samples, 0.17%)</title><rect x="17.0" y="99.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="20.0" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (7 samples, 0.17%)</title><rect x="17.0" y="115.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.0" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.17%)</title><rect x="17.0" y="131.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.0" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.17%)</title><rect x="17.0" y="147.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.0" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.17%)</title><rect x="17.0" y="163.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="20.0" y="174.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.17%)</title><rect x="17.0" y="179.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="20.0" y="190.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="19.0" y="51.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.0" y="62.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.02%)</title><rect x="19.0" y="67.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.0" y="78.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="19.0" y="83.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.0" y="94.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="19.0" y="99.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="22.0" y="110.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="19.0" y="115.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.0" y="126.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="19.0" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="19.0" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (1 samples, 0.02%)</title><rect x="19.0" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (1 samples, 0.02%)</title><rect x="19.0" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="19.0" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (1 samples, 0.02%)</title><rect x="19.0" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (1 samples, 0.02%)</title><rect x="19.0" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="19.0" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.0" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (1 samples, 0.02%)</title><rect x="19.0" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.0" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (1 samples, 0.02%)</title><rect x="19.0" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.0" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="19.0" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.0" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (1 samples, 0.02%)</title><rect x="19.0" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="19.0" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="19.0" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="19.0" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="19.0" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.0" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="19.0" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.0" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="19.0" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="19.0" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="19.0" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="19.0" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="19.0" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="19.0" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="19.0" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.0" y="510.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (1 samples, 0.02%)</title><rect x="19.3" y="51.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.3" y="62.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="19.3" y="67.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.3" y="78.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (1 samples, 0.02%)</title><rect x="19.3" y="83.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.3" y="94.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="19.3" y="99.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.3" y="110.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="19.3" y="115.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.3" y="126.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="19.3" y="131.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.3" y="142.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="19.3" y="147.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.3" y="158.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="19.3" y="163.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="22.3" y="174.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="19.3" y="179.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="22.3" y="190.0"></text>
</g>
<g>
<title>HeapRegionClaimer::claim_region(unsigned int) (15 samples, 0.37%)</title><rect x="19.6" y="51.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.6" y="62.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (10 samples, 0.25%)</title><rect x="19.6" y="67.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="22.6" y="78.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (10 samples, 0.25%)</title><rect x="19.6" y="83.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.6" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.25%)</title><rect x="19.6" y="99.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.6" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.25%)</title><rect x="19.6" y="115.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.6" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.25%)</title><rect x="19.6" y="131.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="22.6" y="142.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.25%)</title><rect x="19.6" y="147.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.6" y="158.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (5 samples, 0.12%)</title><rect x="22.5" y="67.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="25.5" y="78.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (5 samples, 0.12%)</title><rect x="22.5" y="83.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.5" y="94.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.12%)</title><rect x="22.5" y="99.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="25.5" y="110.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.12%)</title><rect x="22.5" y="115.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.5" y="126.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.12%)</title><rect x="22.5" y="131.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="25.5" y="142.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.12%)</title><rect x="22.5" y="147.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.5" y="158.0"></text>
</g>
<g>
<title>HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int) (1 samples, 0.02%)</title><rect x="23.9" y="51.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.9" y="62.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_region(unsigned long, HeapRegionType, bool, unsigned int) (1 samples, 0.02%)</title><rect x="23.9" y="67.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.9" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int) (1 samples, 0.02%)</title><rect x="23.9" y="83.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="26.9" y="94.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="23.9" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.9" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="23.9" y="115.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.9" y="126.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="23.9" y="131.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="26.9" y="142.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="23.9" y="147.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.9" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="23.9" y="163.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.9" y="174.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="23.9" y="179.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.9" y="190.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="23.9" y="195.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="23.9" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="23.9" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (1 samples, 0.02%)</title><rect x="23.9" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="23.9" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.9" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (1 samples, 0.02%)</title><rect x="23.9" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (1 samples, 0.02%)</title><rect x="23.9" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="23.9" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="318.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (1 samples, 0.02%)</title><rect x="23.9" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="23.9" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="23.9" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="23.9" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="23.9" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="23.9" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.9" y="414.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="23.9" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="23.9" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="23.9" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="23.9" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="23.9" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="23.9" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="23.9" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.9" y="526.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (14 samples, 0.34%)</title><rect x="24.2" y="51.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.2" y="62.0"></text>
</g>
<g>
<title>G1PrepareEvacuationTask::work(unsigned int) (14 samples, 0.34%)</title><rect x="24.2" y="67.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.2" y="78.0"></text>
</g>
<g>
<title>GangWorker::loop() (14 samples, 0.34%)</title><rect x="24.2" y="83.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.2" y="94.0"></text>
</g>
<g>
<title>Thread::call_run() (14 samples, 0.34%)</title><rect x="24.2" y="99.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.2" y="110.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (14 samples, 0.34%)</title><rect x="24.2" y="115.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="27.2" y="126.0"></text>
</g>
<g>
<title>start_thread (14 samples, 0.34%)</title><rect x="24.2" y="131.0" width="4.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="27.2" y="142.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.02%)</title><rect x="28.3" y="51.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.3" y="62.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (1 samples, 0.02%)</title><rect x="28.3" y="67.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.3" y="78.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="28.3" y="83.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.3" y="94.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (1 samples, 0.02%)</title><rect x="28.3" y="99.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.3" y="110.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="28.3" y="115.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.3" y="126.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="28.3" y="131.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.3" y="142.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="28.3" y="147.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.3" y="158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="28.3" y="163.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.3" y="174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="28.3" y="179.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="31.3" y="190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="28.3" y="195.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="31.3" y="206.0"></text>
</g>
<g>
<title>HeapRegionTracer::send_region_type_change(unsigned int, G1HeapRegionTraceType::Type, G1HeapRegionTraceType::Type, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="28.5" y="51.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="31.5" y="62.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool) (1 samples, 0.02%)</title><rect x="28.5" y="67.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.5" y="78.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="28.5" y="83.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.5" y="94.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (1 samples, 0.02%)</title><rect x="28.5" y="99.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.5" y="110.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="28.5" y="115.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.5" y="126.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="28.5" y="131.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="31.5" y="142.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="28.5" y="147.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.5" y="158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="28.5" y="163.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.5" y="174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="28.5" y="179.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="31.5" y="190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="28.5" y="195.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="31.5" y="206.0"></text>
</g>
<g>
<title>JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="28.8" y="51.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.8" y="62.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="28.8" y="67.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.8" y="78.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="28.8" y="83.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="31.8" y="94.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="28.8" y="99.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="31.8" y="110.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="28.8" y="115.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.8" y="126.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="28.8" y="131.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.8" y="142.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="28.8" y="147.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.8" y="158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="28.8" y="163.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.8" y="174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="28.8" y="179.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="31.8" y="190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="28.8" y="195.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="31.8" y="206.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWordImpl**) const (1 samples, 0.02%)</title><rect x="29.1" y="51.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="32.1" y="62.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="29.1" y="67.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.1" y="78.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="29.1" y="83.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.1" y="94.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="29.1" y="99.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.1" y="110.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="29.4" y="51.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="32.4" y="62.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="29.4" y="67.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.4" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="29.4" y="83.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="32.4" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="29.4" y="99.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.4" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="29.4" y="115.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.4" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="29.4" y="131.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.4" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="29.4" y="147.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="32.4" y="158.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="29.4" y="163.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="32.4" y="174.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="29.7" y="51.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.7" y="62.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="29.7" y="67.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.7" y="78.0"></text>
</g>
<g>
<title>TypeAry::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="29.7" y="83.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.7" y="94.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="29.7" y="99.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.7" y="110.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="29.7" y="115.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.7" y="126.0"></text>
</g>
<g>
<title>CheckCastPPNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="29.7" y="131.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.7" y="142.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="29.7" y="147.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.7" y="158.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 0.02%)</title><rect x="29.7" y="163.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.7" y="174.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="179.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.7" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="195.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.7" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="211.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="227.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.7" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="243.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.7" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="259.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.7" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="275.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.7" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="291.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.7" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="307.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.7" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="323.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.7" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="339.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="355.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="371.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.7" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.7" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="403.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.7" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="419.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="435.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="32.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="451.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="467.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.7" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="515.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.7" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.7" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.7" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.7" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.7" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.7" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="739.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.7" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="29.7" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="29.7" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="29.7" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.7" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="29.7" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.7" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="29.7" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.7" y="910.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, DirectiveSet*) (1 samples, 0.02%)</title><rect x="29.7" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.7" y="926.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (1 samples, 0.02%)</title><rect x="29.7" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.7" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.02%)</title><rect x="29.7" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.7" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.02%)</title><rect x="29.7" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.7" y="974.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.02%)</title><rect x="29.7" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.7" y="990.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="29.7" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.7" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="29.7" y="1011.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="32.7" y="1022.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="29.7" y="1027.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="32.7" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="30.0" y="51.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="33.0" y="62.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="30.0" y="67.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="33.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="30.0" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (1 samples, 0.02%)</title><rect x="30.0" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (1 samples, 0.02%)</title><rect x="30.0" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="30.0" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (1 samples, 0.02%)</title><rect x="30.0" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.0" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (1 samples, 0.02%)</title><rect x="30.0" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="30.0" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.0" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (1 samples, 0.02%)</title><rect x="30.0" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.0" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (1 samples, 0.02%)</title><rect x="30.0" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.0" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="30.0" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.0" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (1 samples, 0.02%)</title><rect x="30.0" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="30.0" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="30.0" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="30.0" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.0" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="30.0" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.0" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="30.0" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.0" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="30.0" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="30.0" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="30.0" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="30.0" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="30.0" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="30.0" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="30.0" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.0" y="446.0"></text>
</g>
<g>
<title>WeakProcessorPhaseTimes::reset() (1 samples, 0.02%)</title><rect x="30.3" y="51.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="33.3" y="62.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="30.3" y="67.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="33.3" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="30.3" y="83.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="33.3" y="94.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="30.3" y="99.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="33.3" y="110.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="30.3" y="115.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.3" y="126.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="30.3" y="131.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.3" y="142.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="30.3" y="147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="33.3" y="158.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="30.3" y="163.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="33.3" y="174.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="30.3" y="179.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="33.3" y="190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="30.3" y="195.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="33.3" y="206.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="30.3" y="211.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="33.3" y="222.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="30.6" y="51.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="33.6" y="62.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="30.6" y="67.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="33.6" y="78.0"></text>
</g>
<g>
<title>__clock_gettime_2 (2 samples, 0.05%)</title><rect x="30.6" y="83.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="33.6" y="94.0"></text>
</g>
<g>
<title>__clock_gettime_2 (1 samples, 0.02%)</title><rect x="31.1" y="51.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="34.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.15%)</title><rect x="31.4" y="51.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="34.4" y="62.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.15%)</title><rect x="31.4" y="67.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.4" y="78.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.15%)</title><rect x="31.4" y="83.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="34.4" y="94.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.15%)</title><rect x="31.4" y="99.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.4" y="110.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.15%)</title><rect x="31.4" y="115.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.4" y="126.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.15%)</title><rect x="31.4" y="131.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="34.4" y="142.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.15%)</title><rect x="31.4" y="147.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="34.4" y="158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.15%)</title><rect x="31.4" y="163.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="34.4" y="174.0"></text>
</g>
<g>
<title>__pthread_cond_broadcast (1 samples, 0.02%)</title><rect x="31.4" y="179.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.4" y="190.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="31.7" y="179.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="31.7" y="195.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="34.7" y="206.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (4 samples, 0.10%)</title><rect x="32.0" y="179.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="35.0" y="190.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="32.0" y="195.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="35.0" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="32.0" y="211.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="35.0" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="32.0" y="227.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="35.0" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="32.0" y="243.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="35.0" y="254.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (3 samples, 0.07%)</title><rect x="32.3" y="195.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="35.3" y="206.0"></text>
</g>
<g>
<title>G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="32.3" y="211.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.3" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="32.3" y="227.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.3" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="32.3" y="243.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="35.3" y="254.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="32.3" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.3" y="270.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="32.3" y="275.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="35.3" y="286.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="32.3" y="291.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.3" y="302.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="32.3" y="307.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.3" y="318.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="32.3" y="323.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.3" y="334.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="32.3" y="339.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="35.3" y="350.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="32.3" y="355.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="35.3" y="366.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="32.3" y="371.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="35.3" y="382.0"></text>
</g>
<g>
<title>G1RemSet::merge_heap_roots(bool) (1 samples, 0.02%)</title><rect x="32.6" y="211.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.6" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool) (1 samples, 0.02%)</title><rect x="32.6" y="227.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.6" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="32.6" y="243.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.6" y="254.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="32.6" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.6" y="270.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="32.6" y="275.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="35.6" y="286.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="32.6" y="291.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.6" y="302.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="32.6" y="307.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="35.6" y="318.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="32.6" y="323.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="35.6" y="334.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="32.6" y="339.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.6" y="350.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="32.6" y="355.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.6" y="366.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="32.6" y="371.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="35.6" y="382.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="32.6" y="387.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="35.6" y="398.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.02%)</title><rect x="32.9" y="211.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.9" y="222.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="32.9" y="227.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.9" y="238.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="32.9" y="243.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="35.9" y="254.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="32.9" y="259.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.9" y="270.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="32.9" y="275.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.9" y="286.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="32.9" y="291.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="35.9" y="302.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="32.9" y="307.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.9" y="318.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (7 samples, 0.17%)</title><rect x="33.2" y="51.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="36.2" y="62.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="33.2" y="67.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="36.2" y="78.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="33.2" y="83.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="36.2" y="94.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="33.2" y="99.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="36.2" y="110.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="33.2" y="115.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="36.2" y="126.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="33.2" y="131.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="36.2" y="142.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.12%)</title><rect x="33.8" y="67.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="36.8" y="78.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.12%)</title><rect x="33.8" y="83.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="36.8" y="94.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.12%)</title><rect x="33.8" y="99.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="36.8" y="110.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.12%)</title><rect x="33.8" y="115.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="36.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.12%)</title><rect x="33.8" y="131.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (5 samples, 0.12%)</title><rect x="33.8" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (5 samples, 0.12%)</title><rect x="33.8" y="163.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="36.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="33.8" y="179.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (5 samples, 0.12%)</title><rect x="33.8" y="195.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (5 samples, 0.12%)</title><rect x="33.8" y="211.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="33.8" y="227.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.8" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (5 samples, 0.12%)</title><rect x="33.8" y="243.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.8" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (5 samples, 0.12%)</title><rect x="33.8" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.8" y="270.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="33.8" y="275.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.8" y="286.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (5 samples, 0.12%)</title><rect x="33.8" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="33.8" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="33.8" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="33.8" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.8" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="33.8" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.8" y="366.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="33.8" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="382.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="33.8" y="387.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="33.8" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="33.8" y="419.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="33.8" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="33.8" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="33.8" y="467.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="33.8" y="483.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="35.2" y="51.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="38.2" y="62.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.05%)</title><rect x="35.2" y="67.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.2" y="78.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (2 samples, 0.05%)</title><rect x="35.2" y="83.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="38.2" y="94.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="35.2" y="99.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="38.2" y="110.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="35.2" y="115.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.2" y="126.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="35.2" y="131.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.2" y="142.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="35.2" y="147.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="38.2" y="158.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="35.2" y="163.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="38.2" y="174.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.02%)</title><rect x="35.8" y="51.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="38.8" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="35.8" y="67.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="38.8" y="78.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.05%)</title><rect x="36.1" y="51.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="39.1" y="62.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="36.7" y="51.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.7" y="62.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="36.7" y="67.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.7" y="78.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="36.7" y="83.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="39.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="36.7" y="99.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="36.7" y="115.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="36.7" y="131.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="36.7" y="147.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c09800.invoke (1 samples, 0.02%)</title><rect x="36.7" y="163.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (1 samples, 0.02%)</title><rect x="36.7" y="179.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="36.7" y="195.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (1 samples, 0.02%)</title><rect x="36.7" y="211.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.7" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (1 samples, 0.02%)</title><rect x="36.7" y="227.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="238.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (1 samples, 0.02%)</title><rect x="36.7" y="243.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.7" y="254.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (1 samples, 0.02%)</title><rect x="36.7" y="259.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="36.7" y="275.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="36.7" y="291.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="36.7" y="307.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.7" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="36.7" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.7" y="334.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="36.7" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.7" y="350.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1 samples, 0.02%)</title><rect x="36.7" y="355.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="36.7" y="371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.02%)</title><rect x="36.7" y="387.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.02%)</title><rect x="36.7" y="403.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.02%)</title><rect x="36.7" y="419.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.02%)</title><rect x="36.7" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="36.7" y="451.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.7" y="462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="36.9" y="51.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.9" y="62.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="36.9" y="67.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="39.9" y="78.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="36.9" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.9" y="94.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="36.9" y="99.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.9" y="110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="36.9" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.9" y="126.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="36.9" y="131.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="39.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="36.9" y="147.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="39.9" y="158.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.10%)</title><rect x="37.2" y="51.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="40.2" y="62.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.10%)</title><rect x="37.2" y="67.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.2" y="78.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="37.2" y="83.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.2" y="94.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.10%)</title><rect x="37.2" y="99.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="40.2" y="110.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="37.2" y="115.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="40.2" y="126.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="37.2" y="131.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="40.2" y="142.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (4 samples, 0.10%)</title><rect x="37.2" y="147.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="40.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="37.2" y="163.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="40.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.coder (51 samples, 1.25%)</title><rect x="38.4" y="51.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.4" y="62.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.12%)</title><rect x="38.4" y="67.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (5 samples, 0.12%)</title><rect x="38.4" y="83.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.4" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="38.4" y="99.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (5 samples, 0.12%)</title><rect x="38.4" y="115.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (5 samples, 0.12%)</title><rect x="38.4" y="131.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="38.4" y="147.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.4" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (5 samples, 0.12%)</title><rect x="38.4" y="163.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.4" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (5 samples, 0.12%)</title><rect x="38.4" y="179.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.4" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (5 samples, 0.12%)</title><rect x="38.4" y="195.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.4" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (5 samples, 0.12%)</title><rect x="38.4" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.12%)</title><rect x="38.4" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="38.4" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="38.4" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.4" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="38.4" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.4" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="38.4" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.4" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (5 samples, 0.12%)</title><rect x="38.4" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="38.4" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.12%)</title><rect x="38.4" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (5 samples, 0.12%)</title><rect x="38.4" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="38.4" y="371.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="38.4" y="387.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="38.4" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.length (46 samples, 1.13%)</title><rect x="39.8" y="67.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.8" y="78.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (46 samples, 1.13%)</title><rect x="39.8" y="83.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.8" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 1.13%)</title><rect x="39.8" y="99.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c0a800.invoke (46 samples, 1.13%)</title><rect x="39.8" y="115.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (46 samples, 1.13%)</title><rect x="39.8" y="131.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 1.13%)</title><rect x="39.8" y="147.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.8" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (46 samples, 1.13%)</title><rect x="39.8" y="163.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.8" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (46 samples, 1.13%)</title><rect x="39.8" y="179.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.8" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (46 samples, 1.13%)</title><rect x="39.8" y="195.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.8" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (46 samples, 1.13%)</title><rect x="39.8" y="211.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (46 samples, 1.13%)</title><rect x="39.8" y="227.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (46 samples, 1.13%)</title><rect x="39.8" y="243.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (46 samples, 1.13%)</title><rect x="39.8" y="259.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.8" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (46 samples, 1.13%)</title><rect x="39.8" y="275.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.8" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (46 samples, 1.13%)</title><rect x="39.8" y="291.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.8" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (46 samples, 1.13%)</title><rect x="39.8" y="307.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (46 samples, 1.13%)</title><rect x="39.8" y="323.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (46 samples, 1.13%)</title><rect x="39.8" y="339.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (46 samples, 1.13%)</title><rect x="39.8" y="355.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (46 samples, 1.13%)</title><rect x="39.8" y="371.0" width="13.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (46 samples, 1.13%)</title><rect x="39.8" y="387.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (46 samples, 1.13%)</title><rect x="39.8" y="403.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (77 samples, 1.89%)</title><rect x="53.2" y="51.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="62.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (45 samples, 1.10%)</title><rect x="53.2" y="67.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 1.10%)</title><rect x="53.2" y="83.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (45 samples, 1.10%)</title><rect x="53.2" y="99.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (45 samples, 1.10%)</title><rect x="53.2" y="115.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 1.10%)</title><rect x="53.2" y="131.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.2" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (45 samples, 1.10%)</title><rect x="53.2" y="147.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.2" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (45 samples, 1.10%)</title><rect x="53.2" y="163.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.2" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (45 samples, 1.10%)</title><rect x="53.2" y="179.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (45 samples, 1.10%)</title><rect x="53.2" y="195.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (45 samples, 1.10%)</title><rect x="53.2" y="211.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (45 samples, 1.10%)</title><rect x="53.2" y="227.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (45 samples, 1.10%)</title><rect x="53.2" y="243.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.2" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (45 samples, 1.10%)</title><rect x="53.2" y="259.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.2" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (45 samples, 1.10%)</title><rect x="53.2" y="275.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.2" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (45 samples, 1.10%)</title><rect x="53.2" y="291.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (45 samples, 1.10%)</title><rect x="53.2" y="307.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (45 samples, 1.10%)</title><rect x="53.2" y="323.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (45 samples, 1.10%)</title><rect x="53.2" y="339.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (45 samples, 1.10%)</title><rect x="53.2" y="355.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (45 samples, 1.10%)</title><rect x="53.2" y="371.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.run (45 samples, 1.10%)</title><rect x="53.2" y="387.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (32 samples, 0.79%)</title><rect x="66.2" y="67.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="78.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (32 samples, 0.79%)</title><rect x="66.2" y="83.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.2" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.79%)</title><rect x="66.2" y="99.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c09800.invoke (32 samples, 0.79%)</title><rect x="66.2" y="115.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (32 samples, 0.79%)</title><rect x="66.2" y="131.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.79%)</title><rect x="66.2" y="147.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.2" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (32 samples, 0.79%)</title><rect x="66.2" y="163.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.2" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (32 samples, 0.79%)</title><rect x="66.2" y="179.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.2" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (32 samples, 0.79%)</title><rect x="66.2" y="195.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.2" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (32 samples, 0.79%)</title><rect x="66.2" y="211.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (32 samples, 0.79%)</title><rect x="66.2" y="227.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (32 samples, 0.79%)</title><rect x="66.2" y="243.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (32 samples, 0.79%)</title><rect x="66.2" y="259.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.2" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (32 samples, 0.79%)</title><rect x="66.2" y="275.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.2" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (32 samples, 0.79%)</title><rect x="66.2" y="291.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.2" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (32 samples, 0.79%)</title><rect x="66.2" y="307.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (32 samples, 0.79%)</title><rect x="66.2" y="323.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (32 samples, 0.79%)</title><rect x="66.2" y="339.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (32 samples, 0.79%)</title><rect x="66.2" y="355.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32 samples, 0.79%)</title><rect x="66.2" y="371.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32 samples, 0.79%)</title><rect x="66.2" y="387.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (32 samples, 0.79%)</title><rect x="66.2" y="403.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.length (335 samples, 8.22%)</title><rect x="75.5" y="51.0" width="97.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.5" y="62.0">java/lang/S..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (186 samples, 4.57%)</title><rect x="75.5" y="67.0" width="53.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.5" y="78.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 4.57%)</title><rect x="75.5" y="83.0" width="53.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.5" y="94.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c0a800.invoke (186 samples, 4.57%)</title><rect x="75.5" y="99.0" width="53.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.5" y="110.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (186 samples, 4.57%)</title><rect x="75.5" y="115.0" width="53.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.5" y="126.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 4.57%)</title><rect x="75.5" y="131.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.5" y="142.0">java/..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (186 samples, 4.57%)</title><rect x="75.5" y="147.0" width="53.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.5" y="158.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (186 samples, 4.57%)</title><rect x="75.5" y="163.0" width="53.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.5" y="174.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (186 samples, 4.57%)</title><rect x="75.5" y="179.0" width="53.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.5" y="190.0">pl/wy..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (186 samples, 4.57%)</title><rect x="75.5" y="195.0" width="53.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.5" y="206.0">pl/wy..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (186 samples, 4.57%)</title><rect x="75.5" y="211.0" width="53.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.5" y="222.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (186 samples, 4.57%)</title><rect x="75.5" y="227.0" width="53.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.5" y="238.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (186 samples, 4.57%)</title><rect x="75.5" y="243.0" width="53.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.5" y="254.0">jdk/i..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (186 samples, 4.57%)</title><rect x="75.5" y="259.0" width="53.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.5" y="270.0">java/..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (186 samples, 4.57%)</title><rect x="75.5" y="275.0" width="53.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.5" y="286.0">org/o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (186 samples, 4.57%)</title><rect x="75.5" y="291.0" width="53.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.5" y="302.0">org/o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (186 samples, 4.57%)</title><rect x="75.5" y="307.0" width="53.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.5" y="318.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (186 samples, 4.57%)</title><rect x="75.5" y="323.0" width="53.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.5" y="334.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (186 samples, 4.57%)</title><rect x="75.5" y="339.0" width="53.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.5" y="350.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (186 samples, 4.57%)</title><rect x="75.5" y="355.0" width="53.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.5" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (186 samples, 4.57%)</title><rect x="75.5" y="371.0" width="53.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.5" y="382.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.run (186 samples, 4.57%)</title><rect x="75.5" y="387.0" width="53.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.5" y="398.0">java/..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (2 samples, 0.05%)</title><rect x="129.4" y="67.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.4" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="129.4" y="83.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.4" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (2 samples, 0.05%)</title><rect x="129.4" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (2 samples, 0.05%)</title><rect x="129.4" y="115.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="129.4" y="131.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (2 samples, 0.05%)</title><rect x="129.4" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.4" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (2 samples, 0.05%)</title><rect x="129.4" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.4" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="129.4" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.4" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (2 samples, 0.05%)</title><rect x="129.4" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="129.4" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="129.4" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="129.4" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.4" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="129.4" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.4" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="129.4" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.4" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="129.4" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="129.4" y="307.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="129.4" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="129.4" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="129.4" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="129.4" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="129.4" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (147 samples, 3.61%)</title><rect x="129.9" y="67.0" width="42.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="78.0">java..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (147 samples, 3.61%)</title><rect x="129.9" y="83.0" width="42.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.9" y="94.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (147 samples, 3.61%)</title><rect x="129.9" y="99.0" width="42.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.9" y="110.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c09800.invoke (147 samples, 3.61%)</title><rect x="129.9" y="115.0" width="42.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.9" y="126.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (147 samples, 3.61%)</title><rect x="129.9" y="131.0" width="42.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.9" y="142.0">java..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (147 samples, 3.61%)</title><rect x="129.9" y="147.0" width="42.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.9" y="158.0">java..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (147 samples, 3.61%)</title><rect x="129.9" y="163.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.9" y="174.0">pl/w..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (147 samples, 3.61%)</title><rect x="129.9" y="179.0" width="42.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.9" y="190.0">pl/w..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (147 samples, 3.61%)</title><rect x="129.9" y="195.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.9" y="206.0">pl/w..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (147 samples, 3.61%)</title><rect x="129.9" y="211.0" width="42.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.9" y="222.0">pl/w..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (147 samples, 3.61%)</title><rect x="129.9" y="227.0" width="42.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.9" y="238.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (147 samples, 3.61%)</title><rect x="129.9" y="243.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.9" y="254.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (147 samples, 3.61%)</title><rect x="129.9" y="259.0" width="42.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.9" y="270.0">jdk/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (147 samples, 3.61%)</title><rect x="129.9" y="275.0" width="42.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.9" y="286.0">java..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (147 samples, 3.61%)</title><rect x="129.9" y="291.0" width="42.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.9" y="302.0">org/..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (147 samples, 3.61%)</title><rect x="129.9" y="307.0" width="42.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.9" y="318.0">org/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (147 samples, 3.61%)</title><rect x="129.9" y="323.0" width="42.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.9" y="334.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (147 samples, 3.61%)</title><rect x="129.9" y="339.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.9" y="350.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (147 samples, 3.61%)</title><rect x="129.9" y="355.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.9" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (147 samples, 3.61%)</title><rect x="129.9" y="371.0" width="42.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.9" y="382.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (147 samples, 3.61%)</title><rect x="129.9" y="387.0" width="42.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.9" y="398.0">java..</text>
</g>
<g>
<title>java/lang/Thread.run (147 samples, 3.61%)</title><rect x="129.9" y="403.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.9" y="414.0">java..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.checkOverflow (3 samples, 0.07%)</title><rect x="172.5" y="51.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.5" y="62.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (3 samples, 0.07%)</title><rect x="172.5" y="67.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.5" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="172.5" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.5" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c0a800.invoke (3 samples, 0.07%)</title><rect x="172.5" y="99.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (3 samples, 0.07%)</title><rect x="172.5" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="172.5" y="131.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.5" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (3 samples, 0.07%)</title><rect x="172.5" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.5" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (3 samples, 0.07%)</title><rect x="172.5" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.5" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (3 samples, 0.07%)</title><rect x="172.5" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.5" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (3 samples, 0.07%)</title><rect x="172.5" y="195.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.07%)</title><rect x="172.5" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="172.5" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="172.5" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.5" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="172.5" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.5" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="172.5" y="275.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.5" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (3 samples, 0.07%)</title><rect x="172.5" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="172.5" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (3 samples, 0.07%)</title><rect x="172.5" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.07%)</title><rect x="172.5" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.07%)</title><rect x="172.5" y="355.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.07%)</title><rect x="172.5" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.07%)</title><rect x="172.5" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (53 samples, 1.30%)</title><rect x="173.4" y="51.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.4" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 1.30%)</title><rect x="173.4" y="67.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.4" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c0a800.invoke (53 samples, 1.30%)</title><rect x="173.4" y="83.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.4" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (53 samples, 1.30%)</title><rect x="173.4" y="99.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 1.30%)</title><rect x="173.4" y="115.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.4" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (53 samples, 1.30%)</title><rect x="173.4" y="131.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.4" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (53 samples, 1.30%)</title><rect x="173.4" y="147.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.4" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (53 samples, 1.30%)</title><rect x="173.4" y="163.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.4" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (53 samples, 1.30%)</title><rect x="173.4" y="179.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (53 samples, 1.30%)</title><rect x="173.4" y="195.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (53 samples, 1.30%)</title><rect x="173.4" y="211.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (53 samples, 1.30%)</title><rect x="173.4" y="227.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.4" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (53 samples, 1.30%)</title><rect x="173.4" y="243.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.4" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (53 samples, 1.30%)</title><rect x="173.4" y="259.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.4" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (53 samples, 1.30%)</title><rect x="173.4" y="275.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (53 samples, 1.30%)</title><rect x="173.4" y="291.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (53 samples, 1.30%)</title><rect x="173.4" y="307.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (53 samples, 1.30%)</title><rect x="173.4" y="323.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (53 samples, 1.30%)</title><rect x="173.4" y="339.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (53 samples, 1.30%)</title><rect x="173.4" y="355.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (53 samples, 1.30%)</title><rect x="173.4" y="371.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (84 samples, 2.06%)</title><rect x="188.8" y="51.0" width="24.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="62.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (84 samples, 2.06%)</title><rect x="188.8" y="67.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="78.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 2.06%)</title><rect x="188.8" y="83.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.8" y="94.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (84 samples, 2.06%)</title><rect x="188.8" y="99.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.8" y="110.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (84 samples, 2.06%)</title><rect x="188.8" y="115.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.8" y="126.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 2.06%)</title><rect x="188.8" y="131.0" width="24.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="142.0">j..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (84 samples, 2.06%)</title><rect x="188.8" y="147.0" width="24.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.8" y="158.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (84 samples, 2.06%)</title><rect x="188.8" y="163.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.8" y="174.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (84 samples, 2.06%)</title><rect x="188.8" y="179.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="190.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (84 samples, 2.06%)</title><rect x="188.8" y="195.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.8" y="206.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (84 samples, 2.06%)</title><rect x="188.8" y="211.0" width="24.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.8" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (84 samples, 2.06%)</title><rect x="188.8" y="227.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (84 samples, 2.06%)</title><rect x="188.8" y="243.0" width="24.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.8" y="254.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (84 samples, 2.06%)</title><rect x="188.8" y="259.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.8" y="270.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (84 samples, 2.06%)</title><rect x="188.8" y="275.0" width="24.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.8" y="286.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (84 samples, 2.06%)</title><rect x="188.8" y="291.0" width="24.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.8" y="302.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (84 samples, 2.06%)</title><rect x="188.8" y="307.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.8" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (84 samples, 2.06%)</title><rect x="188.8" y="323.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.8" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (84 samples, 2.06%)</title><rect x="188.8" y="339.0" width="24.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.8" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84 samples, 2.06%)</title><rect x="188.8" y="355.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.8" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84 samples, 2.06%)</title><rect x="188.8" y="371.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.8" y="382.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (84 samples, 2.06%)</title><rect x="188.8" y="387.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.8" y="398.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (37 samples, 0.91%)</title><rect x="213.1" y="51.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.1" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.91%)</title><rect x="213.1" y="67.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.1" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (37 samples, 0.91%)</title><rect x="213.1" y="83.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.1" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (37 samples, 0.91%)</title><rect x="213.1" y="99.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.91%)</title><rect x="213.1" y="115.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.1" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (37 samples, 0.91%)</title><rect x="213.1" y="131.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.1" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (37 samples, 0.91%)</title><rect x="213.1" y="147.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.1" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (37 samples, 0.91%)</title><rect x="213.1" y="163.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.1" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (37 samples, 0.91%)</title><rect x="213.1" y="179.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (37 samples, 0.91%)</title><rect x="213.1" y="195.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (37 samples, 0.91%)</title><rect x="213.1" y="211.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (37 samples, 0.91%)</title><rect x="213.1" y="227.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.1" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (37 samples, 0.91%)</title><rect x="213.1" y="243.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.1" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (37 samples, 0.91%)</title><rect x="213.1" y="259.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.1" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (37 samples, 0.91%)</title><rect x="213.1" y="275.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (37 samples, 0.91%)</title><rect x="213.1" y="291.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (37 samples, 0.91%)</title><rect x="213.1" y="307.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (37 samples, 0.91%)</title><rect x="213.1" y="323.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (37 samples, 0.91%)</title><rect x="213.1" y="339.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (37 samples, 0.91%)</title><rect x="213.1" y="355.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (37 samples, 0.91%)</title><rect x="213.1" y="371.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (44 samples, 1.08%)</title><rect x="223.8" y="51.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.8" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 1.08%)</title><rect x="223.8" y="67.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.8" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (44 samples, 1.08%)</title><rect x="223.8" y="83.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.8" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 1.08%)</title><rect x="223.8" y="99.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.8" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (44 samples, 1.08%)</title><rect x="223.8" y="115.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.8" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (44 samples, 1.08%)</title><rect x="223.8" y="131.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.8" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (44 samples, 1.08%)</title><rect x="223.8" y="147.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.8" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (44 samples, 1.08%)</title><rect x="223.8" y="163.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (44 samples, 1.08%)</title><rect x="223.8" y="179.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (44 samples, 1.08%)</title><rect x="223.8" y="195.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (44 samples, 1.08%)</title><rect x="223.8" y="211.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (44 samples, 1.08%)</title><rect x="223.8" y="227.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.8" y="238.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (44 samples, 1.08%)</title><rect x="223.8" y="243.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.8" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (44 samples, 1.08%)</title><rect x="223.8" y="259.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (44 samples, 1.08%)</title><rect x="223.8" y="275.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (44 samples, 1.08%)</title><rect x="223.8" y="291.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (44 samples, 1.08%)</title><rect x="223.8" y="307.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 1.08%)</title><rect x="223.8" y="323.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 1.08%)</title><rect x="223.8" y="339.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 1.08%)</title><rect x="223.8" y="355.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (81 samples, 1.99%)</title><rect x="236.6" y="51.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.6" y="62.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (61 samples, 1.50%)</title><rect x="236.6" y="67.0" width="17.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.6" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 1.50%)</title><rect x="236.6" y="83.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.6" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c09800.invoke (61 samples, 1.50%)</title><rect x="236.6" y="99.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (61 samples, 1.50%)</title><rect x="236.6" y="115.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 1.50%)</title><rect x="236.6" y="131.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.6" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (61 samples, 1.50%)</title><rect x="236.6" y="147.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.6" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (61 samples, 1.50%)</title><rect x="236.6" y="163.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (61 samples, 1.50%)</title><rect x="236.6" y="179.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.6" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (61 samples, 1.50%)</title><rect x="236.6" y="195.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (61 samples, 1.50%)</title><rect x="236.6" y="211.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (61 samples, 1.50%)</title><rect x="236.6" y="227.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (61 samples, 1.50%)</title><rect x="236.6" y="243.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.6" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (61 samples, 1.50%)</title><rect x="236.6" y="259.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.6" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (61 samples, 1.50%)</title><rect x="236.6" y="275.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.6" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (61 samples, 1.50%)</title><rect x="236.6" y="291.0" width="17.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (61 samples, 1.50%)</title><rect x="236.6" y="307.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (61 samples, 1.50%)</title><rect x="236.6" y="323.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (61 samples, 1.50%)</title><rect x="236.6" y="339.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (61 samples, 1.50%)</title><rect x="236.6" y="355.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (61 samples, 1.50%)</title><rect x="236.6" y="371.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.run (61 samples, 1.50%)</title><rect x="236.6" y="387.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.49%)</title><rect x="254.2" y="67.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.2" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c09800.invoke (20 samples, 0.49%)</title><rect x="254.2" y="83.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.2" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (20 samples, 0.49%)</title><rect x="254.2" y="99.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.49%)</title><rect x="254.2" y="115.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.2" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (20 samples, 0.49%)</title><rect x="254.2" y="131.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.2" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (20 samples, 0.49%)</title><rect x="254.2" y="147.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.2" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (20 samples, 0.49%)</title><rect x="254.2" y="163.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.2" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (20 samples, 0.49%)</title><rect x="254.2" y="179.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (20 samples, 0.49%)</title><rect x="254.2" y="195.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (20 samples, 0.49%)</title><rect x="254.2" y="211.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (20 samples, 0.49%)</title><rect x="254.2" y="227.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (20 samples, 0.49%)</title><rect x="254.2" y="243.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.2" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (20 samples, 0.49%)</title><rect x="254.2" y="259.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.2" y="270.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (20 samples, 0.49%)</title><rect x="254.2" y="275.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (20 samples, 0.49%)</title><rect x="254.2" y="291.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (20 samples, 0.49%)</title><rect x="254.2" y="307.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (20 samples, 0.49%)</title><rect x="254.2" y="323.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 0.49%)</title><rect x="254.2" y="339.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 0.49%)</title><rect x="254.2" y="355.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 0.49%)</title><rect x="254.2" y="371.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.stringOf (202 samples, 4.96%)</title><rect x="260.0" y="51.0" width="58.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.0" y="62.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (202 samples, 4.96%)</title><rect x="260.0" y="67.0" width="58.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.0" y="78.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (202 samples, 4.96%)</title><rect x="260.0" y="83.0" width="58.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.0" y="94.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (202 samples, 4.96%)</title><rect x="260.0" y="99.0" width="58.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.0" y="110.0">java/l..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (202 samples, 4.96%)</title><rect x="260.0" y="115.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.0" y="126.0">pl/wyh..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (202 samples, 4.96%)</title><rect x="260.0" y="131.0" width="58.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.0" y="142.0">pl/wyh..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (202 samples, 4.96%)</title><rect x="260.0" y="147.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.0" y="158.0">pl/wyh..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (202 samples, 4.96%)</title><rect x="260.0" y="163.0" width="58.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.0" y="174.0">pl/wyh..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (202 samples, 4.96%)</title><rect x="260.0" y="179.0" width="58.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.0" y="190.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (202 samples, 4.96%)</title><rect x="260.0" y="195.0" width="58.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.0" y="206.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (202 samples, 4.96%)</title><rect x="260.0" y="211.0" width="58.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.0" y="222.0">jdk/in..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (202 samples, 4.96%)</title><rect x="260.0" y="227.0" width="58.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.0" y="238.0">java/l..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (202 samples, 4.96%)</title><rect x="260.0" y="243.0" width="58.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.0" y="254.0">org/op..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (202 samples, 4.96%)</title><rect x="260.0" y="259.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.0" y="270.0">org/op..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (202 samples, 4.96%)</title><rect x="260.0" y="275.0" width="58.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.0" y="286.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (202 samples, 4.96%)</title><rect x="260.0" y="291.0" width="58.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.0" y="302.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (202 samples, 4.96%)</title><rect x="260.0" y="307.0" width="58.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.0" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (202 samples, 4.96%)</title><rect x="260.0" y="323.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.0" y="334.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (202 samples, 4.96%)</title><rect x="260.0" y="339.0" width="58.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.0" y="350.0">java/u..</text>
</g>
<g>
<title>java/lang/Thread.run (202 samples, 4.96%)</title><rect x="260.0" y="355.0" width="58.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.0" y="366.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 2.06%)</title><rect x="318.5" y="51.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.5" y="62.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c09800.invoke (69 samples, 1.69%)</title><rect x="318.5" y="67.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.5" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (69 samples, 1.69%)</title><rect x="318.5" y="83.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.5" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 1.69%)</title><rect x="318.5" y="99.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.5" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (69 samples, 1.69%)</title><rect x="318.5" y="115.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.5" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (69 samples, 1.69%)</title><rect x="318.5" y="131.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.5" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (69 samples, 1.69%)</title><rect x="318.5" y="147.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.5" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (69 samples, 1.69%)</title><rect x="318.5" y="163.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (69 samples, 1.69%)</title><rect x="318.5" y="179.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (69 samples, 1.69%)</title><rect x="318.5" y="195.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (69 samples, 1.69%)</title><rect x="318.5" y="211.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.5" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (69 samples, 1.69%)</title><rect x="318.5" y="227.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.5" y="238.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (69 samples, 1.69%)</title><rect x="318.5" y="243.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.5" y="254.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (69 samples, 1.69%)</title><rect x="318.5" y="259.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (69 samples, 1.69%)</title><rect x="318.5" y="275.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (69 samples, 1.69%)</title><rect x="318.5" y="291.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (69 samples, 1.69%)</title><rect x="318.5" y="307.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (69 samples, 1.69%)</title><rect x="318.5" y="323.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (69 samples, 1.69%)</title><rect x="318.5" y="339.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (69 samples, 1.69%)</title><rect x="318.5" y="355.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (15 samples, 0.37%)</title><rect x="338.5" y="67.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.5" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.37%)</title><rect x="338.5" y="83.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.5" y="94.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (15 samples, 0.37%)</title><rect x="338.5" y="99.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.5" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (15 samples, 0.37%)</title><rect x="338.5" y="115.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.5" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (15 samples, 0.37%)</title><rect x="338.5" y="131.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.5" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (15 samples, 0.37%)</title><rect x="338.5" y="147.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 0.37%)</title><rect x="338.5" y="163.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="338.5" y="179.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="338.5" y="195.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.5" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="338.5" y="211.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.5" y="222.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="338.5" y="227.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.5" y="238.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (15 samples, 0.37%)</title><rect x="338.5" y="243.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="338.5" y="259.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (15 samples, 0.37%)</title><rect x="338.5" y="275.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (15 samples, 0.37%)</title><rect x="338.5" y="291.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.37%)</title><rect x="338.5" y="307.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.37%)</title><rect x="338.5" y="323.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.37%)</title><rect x="338.5" y="339.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (904 samples, 22.19%)</title><rect x="342.9" y="51.0" width="261.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.9" y="62.0">java/lang/invoke/Invokers$Holder.li..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (904 samples, 22.19%)</title><rect x="342.9" y="67.0" width="261.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.9" y="78.0">pl/wyhasany/ValueClass.toString</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (904 samples, 22.19%)</title><rect x="342.9" y="83.0" width="261.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.9" y="94.0">pl/wyhasany/MyBenchmark.value_class..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (904 samples, 22.19%)</title><rect x="342.9" y="99.0" width="261.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.9" y="110.0">pl/wyhasany/jmh_generated/MyBenchma..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (904 samples, 22.19%)</title><rect x="342.9" y="115.0" width="261.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.9" y="126.0">pl/wyhasany/jmh_generated/MyBenchma..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (904 samples, 22.19%)</title><rect x="342.9" y="131.0" width="261.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.9" y="142.0">jdk/internal/reflect/NativeMethodAc..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (904 samples, 22.19%)</title><rect x="342.9" y="147.0" width="261.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.9" y="158.0">jdk/internal/reflect/NativeMethodAc..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (904 samples, 22.19%)</title><rect x="342.9" y="163.0" width="261.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.9" y="174.0">jdk/internal/reflect/DelegatingMeth..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (904 samples, 22.19%)</title><rect x="342.9" y="179.0" width="261.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.9" y="190.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (904 samples, 22.19%)</title><rect x="342.9" y="195.0" width="261.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.9" y="206.0">org/openjdk/jmh/runner/BenchmarkHan..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (904 samples, 22.19%)</title><rect x="342.9" y="211.0" width="261.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.9" y="222.0">org/openjdk/jmh/runner/BenchmarkHan..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (904 samples, 22.19%)</title><rect x="342.9" y="227.0" width="261.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.9" y="238.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (904 samples, 22.19%)</title><rect x="342.9" y="243.0" width="261.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.9" y="254.0">java/util/concurrent/Executors$Runn..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (904 samples, 22.19%)</title><rect x="342.9" y="259.0" width="261.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.9" y="270.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (904 samples, 22.19%)</title><rect x="342.9" y="275.0" width="261.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.9" y="286.0">java/util/concurrent/ThreadPoolExec..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (904 samples, 22.19%)</title><rect x="342.9" y="291.0" width="261.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.9" y="302.0">java/util/concurrent/ThreadPoolExec..</text>
</g>
<g>
<title>java/lang/Thread.run (904 samples, 22.19%)</title><rect x="342.9" y="307.0" width="261.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.9" y="318.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (39 samples, 0.96%)</title><rect x="604.8" y="51.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.8" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (39 samples, 0.96%)</title><rect x="604.8" y="67.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.8" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.96%)</title><rect x="604.8" y="83.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.8" y="94.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (39 samples, 0.96%)</title><rect x="604.8" y="99.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.8" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (39 samples, 0.96%)</title><rect x="604.8" y="115.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.8" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (39 samples, 0.96%)</title><rect x="604.8" y="131.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.8" y="142.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (39 samples, 0.96%)</title><rect x="604.8" y="147.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (39 samples, 0.96%)</title><rect x="604.8" y="163.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (39 samples, 0.96%)</title><rect x="604.8" y="179.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (39 samples, 0.96%)</title><rect x="604.8" y="195.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.8" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (39 samples, 0.96%)</title><rect x="604.8" y="211.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.8" y="222.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (39 samples, 0.96%)</title><rect x="604.8" y="227.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.8" y="238.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (39 samples, 0.96%)</title><rect x="604.8" y="243.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (39 samples, 0.96%)</title><rect x="604.8" y="259.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (39 samples, 0.96%)</title><rect x="604.8" y="275.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (39 samples, 0.96%)</title><rect x="604.8" y="291.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (39 samples, 0.96%)</title><rect x="604.8" y="307.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (39 samples, 0.96%)</title><rect x="604.8" y="323.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.8" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.run (39 samples, 0.96%)</title><rect x="604.8" y="339.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (2 samples, 0.05%)</title><rect x="616.1" y="51.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.1" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="616.1" y="67.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="78.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (2 samples, 0.05%)</title><rect x="616.1" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.1" y="94.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (2 samples, 0.05%)</title><rect x="616.1" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="616.1" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.1" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (2 samples, 0.05%)</title><rect x="616.1" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="616.1" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="616.1" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="616.1" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.1" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="616.1" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.1" y="206.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="616.1" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.1" y="222.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="616.1" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="616.1" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="616.1" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="616.1" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="616.1" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="616.1" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="616.1" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.1" y="334.0"></text>
</g>
<g>
<title>jbyte_arraycopy (77 samples, 1.89%)</title><rect x="616.7" y="51.0" width="22.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="619.7" y="62.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (46 samples, 1.13%)</title><rect x="616.7" y="67.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (46 samples, 1.13%)</title><rect x="616.7" y="83.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.7" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 1.13%)</title><rect x="616.7" y="99.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (46 samples, 1.13%)</title><rect x="616.7" y="115.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (46 samples, 1.13%)</title><rect x="616.7" y="131.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 1.13%)</title><rect x="616.7" y="147.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.7" y="158.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (46 samples, 1.13%)</title><rect x="616.7" y="163.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.7" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (46 samples, 1.13%)</title><rect x="616.7" y="179.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.7" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (46 samples, 1.13%)</title><rect x="616.7" y="195.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (46 samples, 1.13%)</title><rect x="616.7" y="211.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (46 samples, 1.13%)</title><rect x="616.7" y="227.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (46 samples, 1.13%)</title><rect x="616.7" y="243.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (46 samples, 1.13%)</title><rect x="616.7" y="259.0" width="13.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.7" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (46 samples, 1.13%)</title><rect x="616.7" y="275.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.7" y="286.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (46 samples, 1.13%)</title><rect x="616.7" y="291.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.7" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (46 samples, 1.13%)</title><rect x="616.7" y="307.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (46 samples, 1.13%)</title><rect x="616.7" y="323.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (46 samples, 1.13%)</title><rect x="616.7" y="339.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (46 samples, 1.13%)</title><rect x="616.7" y="355.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (46 samples, 1.13%)</title><rect x="616.7" y="371.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (46 samples, 1.13%)</title><rect x="616.7" y="387.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (46 samples, 1.13%)</title><rect x="616.7" y="403.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.7" y="414.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (31 samples, 0.76%)</title><rect x="630.0" y="67.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.0" y="78.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (31 samples, 0.76%)</title><rect x="630.0" y="83.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (31 samples, 0.76%)</title><rect x="630.0" y="99.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (31 samples, 0.76%)</title><rect x="630.0" y="115.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (31 samples, 0.76%)</title><rect x="630.0" y="131.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.0" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (31 samples, 0.76%)</title><rect x="630.0" y="147.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.0" y="158.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (31 samples, 0.76%)</title><rect x="630.0" y="163.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.0" y="174.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (31 samples, 0.76%)</title><rect x="630.0" y="179.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (31 samples, 0.76%)</title><rect x="630.0" y="195.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (31 samples, 0.76%)</title><rect x="630.0" y="211.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (31 samples, 0.76%)</title><rect x="630.0" y="227.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (31 samples, 0.76%)</title><rect x="630.0" y="243.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (31 samples, 0.76%)</title><rect x="630.0" y="259.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (31 samples, 0.76%)</title><rect x="630.0" y="275.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.0" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (971 samples, 23.84%)</title><rect x="639.0" y="51.0" width="281.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="642.0" y="62.0">jbyte_disjoint_arraycopy</text>
</g>
<g>
<title>java/lang/String.getBytes (228 samples, 5.60%)</title><rect x="639.0" y="67.0" width="66.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.0" y="78.0">java/la..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (228 samples, 5.60%)</title><rect x="639.0" y="83.0" width="66.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.0" y="94.0">java/la..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (228 samples, 5.60%)</title><rect x="639.0" y="99.0" width="66.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.0" y="110.0">java/la..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (228 samples, 5.60%)</title><rect x="639.0" y="115.0" width="66.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.0" y="126.0">java/la..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (228 samples, 5.60%)</title><rect x="639.0" y="131.0" width="66.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.0" y="142.0">java/la..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (228 samples, 5.60%)</title><rect x="639.0" y="147.0" width="66.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.0" y="158.0">java/la..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (228 samples, 5.60%)</title><rect x="639.0" y="163.0" width="66.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.0" y="174.0">pl/wyha..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (228 samples, 5.60%)</title><rect x="639.0" y="179.0" width="66.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.0" y="190.0">pl/wyha..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (228 samples, 5.60%)</title><rect x="639.0" y="195.0" width="66.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.0" y="206.0">pl/wyha..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (228 samples, 5.60%)</title><rect x="639.0" y="211.0" width="66.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.0" y="222.0">pl/wyha..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (228 samples, 5.60%)</title><rect x="639.0" y="227.0" width="66.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.0" y="238.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (228 samples, 5.60%)</title><rect x="639.0" y="243.0" width="66.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.0" y="254.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (228 samples, 5.60%)</title><rect x="639.0" y="259.0" width="66.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.0" y="270.0">jdk/int..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (228 samples, 5.60%)</title><rect x="639.0" y="275.0" width="66.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.0" y="286.0">java/la..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (228 samples, 5.60%)</title><rect x="639.0" y="291.0" width="66.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.0" y="302.0">org/ope..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (228 samples, 5.60%)</title><rect x="639.0" y="307.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.0" y="318.0">org/ope..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (228 samples, 5.60%)</title><rect x="639.0" y="323.0" width="66.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.0" y="334.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (228 samples, 5.60%)</title><rect x="639.0" y="339.0" width="66.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.0" y="350.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (228 samples, 5.60%)</title><rect x="639.0" y="355.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.0" y="366.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (228 samples, 5.60%)</title><rect x="639.0" y="371.0" width="66.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.0" y="382.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (228 samples, 5.60%)</title><rect x="639.0" y="387.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.0" y="398.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.run (228 samples, 5.60%)</title><rect x="639.0" y="403.0" width="66.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.0" y="414.0">java/la..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (495 samples, 12.15%)</title><rect x="705.0" y="67.0" width="143.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.0" y="78.0">java/lang/invoke/I..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (495 samples, 12.15%)</title><rect x="705.0" y="83.0" width="143.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.0" y="94.0">pl/wyhasany/ValueC..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (495 samples, 12.15%)</title><rect x="705.0" y="99.0" width="143.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.0" y="110.0">pl/wyhasany/MyBenc..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (495 samples, 12.15%)</title><rect x="705.0" y="115.0" width="143.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.0" y="126.0">pl/wyhasany/jmh_ge..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (495 samples, 12.15%)</title><rect x="705.0" y="131.0" width="143.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.0" y="142.0">pl/wyhasany/jmh_ge..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (495 samples, 12.15%)</title><rect x="705.0" y="147.0" width="143.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.0" y="158.0">jdk/internal/refle..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (495 samples, 12.15%)</title><rect x="705.0" y="163.0" width="143.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.0" y="174.0">jdk/internal/refle..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (495 samples, 12.15%)</title><rect x="705.0" y="179.0" width="143.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.0" y="190.0">jdk/internal/refle..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (495 samples, 12.15%)</title><rect x="705.0" y="195.0" width="143.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.0" y="206.0">java/lang/reflect/..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (495 samples, 12.15%)</title><rect x="705.0" y="211.0" width="143.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.0" y="222.0">org/openjdk/jmh/ru..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (495 samples, 12.15%)</title><rect x="705.0" y="227.0" width="143.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.0" y="238.0">org/openjdk/jmh/ru..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (495 samples, 12.15%)</title><rect x="705.0" y="243.0" width="143.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.0" y="254.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (495 samples, 12.15%)</title><rect x="705.0" y="259.0" width="143.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.0" y="270.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (495 samples, 12.15%)</title><rect x="705.0" y="275.0" width="143.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.0" y="286.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (495 samples, 12.15%)</title><rect x="705.0" y="291.0" width="143.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.0" y="302.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (495 samples, 12.15%)</title><rect x="705.0" y="307.0" width="143.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.0" y="318.0">java/util/concurre..</text>
</g>
<g>
<title>java/lang/Thread.run (495 samples, 12.15%)</title><rect x="705.0" y="323.0" width="143.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (248 samples, 6.09%)</title><rect x="848.4" y="67.0" width="71.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.4" y="78.0">pl/wyhas..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (248 samples, 6.09%)</title><rect x="848.4" y="83.0" width="71.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.4" y="94.0">pl/wyhas..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (248 samples, 6.09%)</title><rect x="848.4" y="99.0" width="71.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.4" y="110.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (248 samples, 6.09%)</title><rect x="848.4" y="115.0" width="71.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.4" y="126.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (248 samples, 6.09%)</title><rect x="848.4" y="131.0" width="71.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.4" y="142.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (248 samples, 6.09%)</title><rect x="848.4" y="147.0" width="71.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.4" y="158.0">java/lan..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (248 samples, 6.09%)</title><rect x="848.4" y="163.0" width="71.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.4" y="174.0">org/open..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (248 samples, 6.09%)</title><rect x="848.4" y="179.0" width="71.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.4" y="190.0">org/open..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (248 samples, 6.09%)</title><rect x="848.4" y="195.0" width="71.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.4" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (248 samples, 6.09%)</title><rect x="848.4" y="211.0" width="71.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (248 samples, 6.09%)</title><rect x="848.4" y="227.0" width="71.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.4" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (248 samples, 6.09%)</title><rect x="848.4" y="243.0" width="71.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.4" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (248 samples, 6.09%)</title><rect x="848.4" y="259.0" width="71.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.4" y="270.0">java/uti..</text>
</g>
<g>
<title>java/lang/Thread.run (248 samples, 6.09%)</title><rect x="848.4" y="275.0" width="71.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.4" y="286.0">java/lan..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (81 samples, 1.99%)</title><rect x="920.3" y="51.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.3" y="62.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (81 samples, 1.99%)</title><rect x="920.3" y="67.0" width="23.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.3" y="78.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (81 samples, 1.99%)</title><rect x="920.3" y="83.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.3" y="94.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 1.99%)</title><rect x="920.3" y="99.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.3" y="110.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (81 samples, 1.99%)</title><rect x="920.3" y="115.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.3" y="126.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (81 samples, 1.99%)</title><rect x="920.3" y="131.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.3" y="142.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 1.99%)</title><rect x="920.3" y="147.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.3" y="158.0">j..</text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (81 samples, 1.99%)</title><rect x="920.3" y="163.0" width="23.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.3" y="174.0">p..</text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (81 samples, 1.99%)</title><rect x="920.3" y="179.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.3" y="190.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (81 samples, 1.99%)</title><rect x="920.3" y="195.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.3" y="206.0">p..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (81 samples, 1.99%)</title><rect x="920.3" y="211.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.3" y="222.0">p..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (81 samples, 1.99%)</title><rect x="920.3" y="227.0" width="23.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.3" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (81 samples, 1.99%)</title><rect x="920.3" y="243.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.3" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (81 samples, 1.99%)</title><rect x="920.3" y="259.0" width="23.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.3" y="270.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (81 samples, 1.99%)</title><rect x="920.3" y="275.0" width="23.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.3" y="286.0">j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (81 samples, 1.99%)</title><rect x="920.3" y="291.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.3" y="302.0">o..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (81 samples, 1.99%)</title><rect x="920.3" y="307.0" width="23.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.3" y="318.0">o..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (81 samples, 1.99%)</title><rect x="920.3" y="323.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (81 samples, 1.99%)</title><rect x="920.3" y="339.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (81 samples, 1.99%)</title><rect x="920.3" y="355.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.3" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (81 samples, 1.99%)</title><rect x="920.3" y="371.0" width="23.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.3" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (81 samples, 1.99%)</title><rect x="920.3" y="387.0" width="23.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.3" y="398.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (81 samples, 1.99%)</title><rect x="920.3" y="403.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.3" y="414.0">j..</text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="943.7" y="51.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="946.7" y="62.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="943.7" y="67.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="946.7" y="78.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="943.7" y="83.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.7" y="94.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="943.7" y="99.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.7" y="110.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="943.7" y="115.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="946.7" y="126.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="943.7" y="131.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="946.7" y="142.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="943.7" y="147.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="946.7" y="158.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="943.7" y="163.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="946.7" y="174.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="943.7" y="179.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="946.7" y="190.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="943.7" y="195.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="946.7" y="206.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="943.7" y="211.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.7" y="222.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="943.7" y="227.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.7" y="238.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="943.7" y="243.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="946.7" y="254.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="943.7" y="259.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="946.7" y="270.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (2 samples, 0.05%)</title><rect x="944.0" y="147.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="947.0" y="158.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (2 samples, 0.05%)</title><rect x="944.0" y="163.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="947.0" y="174.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool) (1 samples, 0.02%)</title><rect x="944.0" y="179.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="947.0" y="190.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="944.0" y="195.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="947.0" y="206.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="944.0" y="211.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="947.0" y="222.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="944.0" y="227.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.0" y="238.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="944.0" y="243.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="947.0" y="254.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="944.0" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="947.0" y="270.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="944.0" y="275.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="947.0" y="286.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="944.0" y="291.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="947.0" y="302.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="944.0" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="947.0" y="318.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="944.0" y="323.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="947.0" y="334.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="944.0" y="339.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="947.0" y="350.0"></text>
</g>
<g>
<title>HeapRegionManager::rebuild_free_list(WorkGang*) (1 samples, 0.02%)</title><rect x="944.3" y="179.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="947.3" y="190.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, G1EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.02%)</title><rect x="944.3" y="195.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="947.3" y="206.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="944.3" y="211.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="947.3" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="944.3" y="227.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.3" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="944.3" y="243.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="947.3" y="254.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="944.3" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="947.3" y="270.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="944.3" y="275.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.3" y="286.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="944.3" y="291.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="947.3" y="302.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="944.3" y="307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="947.3" y="318.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="944.3" y="323.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="947.3" y="334.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="944.3" y="339.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.3" y="350.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="944.3" y="355.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="947.3" y="366.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="944.3" y="371.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="947.3" y="382.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (7 samples, 0.17%)</title><rect x="944.6" y="51.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock (7 samples, 0.17%)</title><rect x="944.6" y="67.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="947.6" y="78.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.12%)</title><rect x="944.6" y="83.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.6" y="94.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.12%)</title><rect x="944.6" y="99.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="947.6" y="110.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.12%)</title><rect x="944.6" y="115.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.6" y="126.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="944.6" y="131.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.6" y="142.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="944.6" y="147.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.6" y="158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="944.6" y="163.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.6" y="174.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="944.6" y="179.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="947.6" y="190.0"></text>
</g>
<g>
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="944.6" y="195.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="947.6" y="206.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="944.6" y="211.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="947.6" y="222.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="944.6" y="227.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="947.6" y="238.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="944.6" y="243.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="947.6" y="254.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="944.6" y="259.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="947.6" y="270.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="944.6" y="275.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="947.6" y="286.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="944.6" y="291.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="947.6" y="302.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="944.6" y="307.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="947.6" y="318.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (3 samples, 0.07%)</title><rect x="944.9" y="179.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="947.9" y="190.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="944.9" y="195.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="947.9" y="206.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="945.8" y="179.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="948.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="945.8" y="195.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="948.8" y="206.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="946.1" y="83.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.1" y="94.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="946.1" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.1" y="110.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="946.1" y="115.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.1" y="126.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="946.1" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.1" y="142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="946.1" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.1" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="946.1" y="163.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="949.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="946.1" y="179.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="949.1" y="190.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (2 samples, 0.05%)</title><rect x="946.6" y="51.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="949.6" y="62.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="946.6" y="67.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (2 samples, 0.05%)</title><rect x="946.6" y="83.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (2 samples, 0.05%)</title><rect x="946.6" y="99.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="946.6" y="115.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c29800.invoke (2 samples, 0.05%)</title><rect x="946.6" y="131.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c2a400.invoke (2 samples, 0.05%)</title><rect x="946.6" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="946.6" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.6" y="174.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (2 samples, 0.05%)</title><rect x="946.6" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.6" y="190.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (2 samples, 0.05%)</title><rect x="946.6" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.6" y="206.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (2 samples, 0.05%)</title><rect x="946.6" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.6" y="222.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (2 samples, 0.05%)</title><rect x="946.6" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.05%)</title><rect x="946.6" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="946.6" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="946.6" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.6" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="946.6" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.6" y="302.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="946.6" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.6" y="318.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2 samples, 0.05%)</title><rect x="946.6" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="946.6" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.05%)</title><rect x="946.6" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="946.6" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.05%)</title><rect x="946.6" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.05%)</title><rect x="946.6" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.6" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.05%)</title><rect x="946.6" y="419.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.6" y="430.0"></text>
</g>
<g>
<title>org/openjdk/jmh/infra/Blackhole.consume (426 samples, 10.46%)</title><rect x="947.2" y="51.0" width="123.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.2" y="62.0">org/openjdk/jmh..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 1.33%)</title><rect x="947.2" y="67.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.2" y="78.0"></text>
</g>
<g>
<title>pl/wyhasany/ValueClass.toString (54 samples, 1.33%)</title><rect x="947.2" y="83.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.2" y="94.0"></text>
</g>
<g>
<title>pl/wyhasany/MyBenchmark.value_class_to_string (54 samples, 1.33%)</title><rect x="947.2" y="99.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.2" y="110.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (54 samples, 1.33%)</title><rect x="947.2" y="115.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.2" y="126.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (54 samples, 1.33%)</title><rect x="947.2" y="131.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (54 samples, 1.33%)</title><rect x="947.2" y="147.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (54 samples, 1.33%)</title><rect x="947.2" y="163.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (54 samples, 1.33%)</title><rect x="947.2" y="179.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.2" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (54 samples, 1.33%)</title><rect x="947.2" y="195.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.2" y="206.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (54 samples, 1.33%)</title><rect x="947.2" y="211.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.2" y="222.0"></text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (54 samples, 1.33%)</title><rect x="947.2" y="227.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (54 samples, 1.33%)</title><rect x="947.2" y="243.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (54 samples, 1.33%)</title><rect x="947.2" y="259.0" width="15.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (54 samples, 1.33%)</title><rect x="947.2" y="275.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (54 samples, 1.33%)</title><rect x="947.2" y="291.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (54 samples, 1.33%)</title><rect x="947.2" y="307.0" width="15.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.run (54 samples, 1.33%)</title><rect x="947.2" y="323.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.2" y="334.0"></text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (372 samples, 9.13%)</title><rect x="962.9" y="67.0" width="107.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.9" y="78.0">pl/wyhasany/j..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (372 samples, 9.13%)</title><rect x="962.9" y="83.0" width="107.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.9" y="94.0">pl/wyhasany/j..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (372 samples, 9.13%)</title><rect x="962.9" y="99.0" width="107.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.9" y="110.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (372 samples, 9.13%)</title><rect x="962.9" y="115.0" width="107.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.9" y="126.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (372 samples, 9.13%)</title><rect x="962.9" y="131.0" width="107.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.9" y="142.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (372 samples, 9.13%)</title><rect x="962.9" y="147.0" width="107.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.9" y="158.0">java/lang/ref..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (372 samples, 9.13%)</title><rect x="962.9" y="163.0" width="107.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.9" y="174.0">org/openjdk/j..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (372 samples, 9.13%)</title><rect x="962.9" y="179.0" width="107.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.9" y="190.0">org/openjdk/j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (372 samples, 9.13%)</title><rect x="962.9" y="195.0" width="107.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.9" y="206.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (372 samples, 9.13%)</title><rect x="962.9" y="211.0" width="107.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.9" y="222.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (372 samples, 9.13%)</title><rect x="962.9" y="227.0" width="107.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.9" y="238.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (372 samples, 9.13%)</title><rect x="962.9" y="243.0" width="107.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.9" y="254.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (372 samples, 9.13%)</title><rect x="962.9" y="259.0" width="107.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.9" y="270.0">java/util/con..</text>
</g>
<g>
<title>java/lang/Thread.run (372 samples, 9.13%)</title><rect x="962.9" y="275.0" width="107.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.9" y="286.0">java/lang/Thr..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_avgt_jmhStub (408 samples, 10.02%)</title><rect x="1070.6" y="51.0" width="118.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.6" y="62.0">pl/wyhasany/jm..</text>
</g>
<g>
<title>pl/wyhasany/jmh_generated/MyBenchmark_value_class_to_string_jmhTest.value_class_to_string_AverageTime (408 samples, 10.02%)</title><rect x="1070.6" y="67.0" width="118.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.6" y="78.0">pl/wyhasany/jm..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (408 samples, 10.02%)</title><rect x="1070.6" y="83.0" width="118.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.6" y="94.0">jdk/internal/r..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (408 samples, 10.02%)</title><rect x="1070.6" y="99.0" width="118.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.6" y="110.0">jdk/internal/r..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (408 samples, 10.02%)</title><rect x="1070.6" y="115.0" width="118.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1073.6" y="126.0">jdk/internal/r..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (408 samples, 10.02%)</title><rect x="1070.6" y="131.0" width="118.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.6" y="142.0">java/lang/refl..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (408 samples, 10.02%)</title><rect x="1070.6" y="147.0" width="118.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.6" y="158.0">org/openjdk/jm..</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (408 samples, 10.02%)</title><rect x="1070.6" y="163.0" width="118.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.6" y="174.0">org/openjdk/jm..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (408 samples, 10.02%)</title><rect x="1070.6" y="179.0" width="118.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.6" y="190.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (408 samples, 10.02%)</title><rect x="1070.6" y="195.0" width="118.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.6" y="206.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (408 samples, 10.02%)</title><rect x="1070.6" y="211.0" width="118.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.6" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (408 samples, 10.02%)</title><rect x="1070.6" y="227.0" width="118.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.6" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (408 samples, 10.02%)</title><rect x="1070.6" y="243.0" width="118.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.6" y="254.0">java/util/conc..</text>
</g>
<g>
<title>java/lang/Thread.run (408 samples, 10.02%)</title><rect x="1070.6" y="259.0" width="118.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.6" y="270.0">java/lang/Thre..</text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="1188.8" y="51.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1191.8" y="62.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="1188.8" y="67.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1191.8" y="78.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="1188.8" y="83.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1191.8" y="94.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="1188.8" y="99.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1191.8" y="110.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1188.8" y="115.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1191.8" y="126.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1188.8" y="131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1191.8" y="142.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (2 samples, 0.05%)</title><rect x="1188.8" y="147.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1191.8" y="158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1188.8" y="163.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1191.8" y="174.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (2 samples, 0.05%)</title><rect x="1189.4" y="51.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.4" y="62.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (2 samples, 0.05%)</title><rect x="1189.4" y="67.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="78.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool) (1 samples, 0.02%)</title><rect x="1189.4" y="83.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="1189.4" y="99.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.4" y="115.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="126.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.4" y="131.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="142.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.4" y="147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="158.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.4" y="163.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.4" y="174.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.4" y="179.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.4" y="190.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.4" y="195.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1189.4" y="211.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1189.4" y="227.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.4" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.4" y="243.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1192.4" y="254.0"></text>
</g>
<g>
<title>G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.7" y="83.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.7" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="1189.7" y="99.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.7" y="110.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.7" y="115.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.7" y="126.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.7" y="131.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="142.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.7" y="147.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.7" y="158.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.7" y="163.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.7" y="174.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.7" y="179.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="190.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="195.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="206.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1189.7" y="211.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="222.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1189.7" y="227.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.7" y="238.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.7" y="243.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1192.7" y="254.0"></text>
</g>
</g>
</svg>

